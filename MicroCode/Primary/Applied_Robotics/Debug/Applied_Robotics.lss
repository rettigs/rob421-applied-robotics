
Applied_Robotics.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  00001092  00001126  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001092  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000051  00800202  00800202  00001128  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001128  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00001158  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cb2  00000000  00000000  00001248  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000373  00000000  00000000  00001efa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000910  00000000  00000000  0000226d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003f0  00000000  00000000  00002b80  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004bb  00000000  00000000  00002f70  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000d53  00000000  00000000  0000342b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  0000417e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
       6:	00 00       	nop
       8:	a0 c5       	rjmp	.+2880   	; 0xb4a <__vector_2>
       a:	00 00       	nop
       c:	da c5       	rjmp	.+2996   	; 0xbc2 <__vector_3>
       e:	00 00       	nop
      10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
      12:	00 00       	nop
      14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
      16:	00 00       	nop
      18:	b8 c5       	rjmp	.+2928   	; 0xb8a <__vector_6>
      1a:	00 00       	nop
      1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
      1e:	00 00       	nop
      20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
      22:	00 00       	nop
      24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
      26:	00 00       	nop
      28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
      2e:	00 00       	nop
      30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
      32:	00 00       	nop
      34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
      36:	00 00       	nop
      38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
      3e:	00 00       	nop
      40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
      42:	00 00       	nop
      44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
      46:	00 00       	nop
      48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
      4e:	00 00       	nop
      50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
      52:	00 00       	nop
      54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
      56:	00 00       	nop
      58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	e5 c4       	rjmp	.+2506   	; 0xa28 <__vector_23>
      5e:	00 00       	nop
      60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
      62:	00 00       	nop
      64:	d4 c5       	rjmp	.+2984   	; 0xc0e <__vector_25>
      66:	00 00       	nop
      68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
      6e:	00 00       	nop
      70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
      72:	00 00       	nop
      74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
      76:	00 00       	nop
      78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
      7e:	00 00       	nop
      80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
      82:	00 00       	nop
      84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
      86:	00 00       	nop
      88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
      8e:	00 00       	nop
      90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
      92:	00 00       	nop
      94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
      96:	00 00       	nop
      98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
      be:	00 00       	nop
      c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
      da:	00 00       	nop
      dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
      de:	00 00       	nop
      e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e9       	ldi	r30, 0x92	; 146
      fc:	f0 e1       	ldi	r31, 0x10	; 16
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 30       	cpi	r26, 0x02	; 2
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a2 e0       	ldi	r26, 0x02	; 2
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a3 35       	cpi	r26, 0x53	; 83
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	b4 d3       	rcall	.+1896   	; 0x888 <main>
     120:	b6 c7       	rjmp	.+3948   	; 0x108e <_exit>

00000122 <__bad_interrupt>:
     122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <PIDsetTunings.part.0>:
	inAuto = newAuto;
}

void PIDsetControllerDirection(int Direction)
{
	controllerDirection = Direction;
     124:	4f 92       	push	r4
     126:	5f 92       	push	r5
     128:	6f 92       	push	r6
     12a:	7f 92       	push	r7
     12c:	8f 92       	push	r8
     12e:	9f 92       	push	r9
     130:	af 92       	push	r10
     132:	bf 92       	push	r11
     134:	cf 92       	push	r12
     136:	df 92       	push	r13
     138:	ef 92       	push	r14
     13a:	ff 92       	push	r15
     13c:	0f 93       	push	r16
     13e:	1f 93       	push	r17
     140:	cf 93       	push	r28
     142:	df 93       	push	r29
     144:	cd b7       	in	r28, 0x3d	; 61
     146:	de b7       	in	r29, 0x3e	; 62
     148:	28 97       	sbiw	r28, 0x08	; 8
     14a:	0f b6       	in	r0, 0x3f	; 63
     14c:	f8 94       	cli
     14e:	de bf       	out	0x3e, r29	; 62
     150:	0f be       	out	0x3f, r0	; 63
     152:	cd bf       	out	0x3d, r28	; 61
     154:	4b 01       	movw	r8, r22
     156:	5c 01       	movw	r10, r24
     158:	29 83       	std	Y+1, r18	; 0x01
     15a:	3a 83       	std	Y+2, r19	; 0x02
     15c:	4b 83       	std	Y+3, r20	; 0x03
     15e:	5c 83       	std	Y+4, r21	; 0x04
     160:	ed 82       	std	Y+5, r14	; 0x05
     162:	fe 82       	std	Y+6, r15	; 0x06
     164:	0f 83       	std	Y+7, r16	; 0x07
     166:	18 87       	std	Y+8, r17	; 0x08
     168:	60 91 00 02 	lds	r22, 0x0200
     16c:	70 91 01 02 	lds	r23, 0x0201
     170:	88 27       	eor	r24, r24
     172:	77 fd       	sbrc	r23, 7
     174:	80 95       	com	r24
     176:	98 2f       	mov	r25, r24
     178:	73 d6       	rcall	.+3302   	; 0xe60 <__floatsisf>
     17a:	20 e0       	ldi	r18, 0x00	; 0
     17c:	30 e0       	ldi	r19, 0x00	; 0
     17e:	4a e7       	ldi	r20, 0x7A	; 122
     180:	54 e4       	ldi	r21, 0x44	; 68
     182:	d8 d5       	rcall	.+2992   	; 0xd34 <__divsf3>
     184:	2b 01       	movw	r4, r22
     186:	3c 01       	movw	r6, r24
     188:	80 92 4b 02 	sts	0x024B, r8
     18c:	90 92 4c 02 	sts	0x024C, r9
     190:	a0 92 4d 02 	sts	0x024D, r10
     194:	b0 92 4e 02 	sts	0x024E, r11
     198:	9b 01       	movw	r18, r22
     19a:	ac 01       	movw	r20, r24
     19c:	69 81       	ldd	r22, Y+1	; 0x01
     19e:	7a 81       	ldd	r23, Y+2	; 0x02
     1a0:	8b 81       	ldd	r24, Y+3	; 0x03
     1a2:	9c 81       	ldd	r25, Y+4	; 0x04
     1a4:	11 d7       	rcall	.+3618   	; 0xfc8 <__mulsf3>
     1a6:	6b 01       	movw	r12, r22
     1a8:	7c 01       	movw	r14, r24
     1aa:	60 93 37 02 	sts	0x0237, r22
     1ae:	70 93 38 02 	sts	0x0238, r23
     1b2:	80 93 39 02 	sts	0x0239, r24
     1b6:	90 93 3a 02 	sts	0x023A, r25
     1ba:	a3 01       	movw	r20, r6
     1bc:	92 01       	movw	r18, r4
     1be:	6d 81       	ldd	r22, Y+5	; 0x05
     1c0:	7e 81       	ldd	r23, Y+6	; 0x06
     1c2:	8f 81       	ldd	r24, Y+7	; 0x07
     1c4:	98 85       	ldd	r25, Y+8	; 0x08
     1c6:	b6 d5       	rcall	.+2924   	; 0xd34 <__divsf3>
     1c8:	2b 01       	movw	r4, r22
     1ca:	3c 01       	movw	r6, r24
     1cc:	60 93 13 02 	sts	0x0213, r22
     1d0:	70 93 14 02 	sts	0x0214, r23
     1d4:	80 93 15 02 	sts	0x0215, r24
     1d8:	90 93 16 02 	sts	0x0216, r25
     1dc:	80 91 02 02 	lds	r24, 0x0202
     1e0:	90 91 03 02 	lds	r25, 0x0203
     1e4:	01 97       	sbiw	r24, 0x01	; 1
     1e6:	51 f5       	brne	.+84     	; 0x23c <PIDsetTunings.part.0+0x118>
     1e8:	a5 01       	movw	r20, r10
     1ea:	94 01       	movw	r18, r8
     1ec:	60 e0       	ldi	r22, 0x00	; 0
     1ee:	70 e0       	ldi	r23, 0x00	; 0
     1f0:	cb 01       	movw	r24, r22
     1f2:	37 d5       	rcall	.+2670   	; 0xc62 <__subsf3>
     1f4:	60 93 4b 02 	sts	0x024B, r22
     1f8:	70 93 4c 02 	sts	0x024C, r23
     1fc:	80 93 4d 02 	sts	0x024D, r24
     200:	90 93 4e 02 	sts	0x024E, r25
     204:	a7 01       	movw	r20, r14
     206:	96 01       	movw	r18, r12
     208:	60 e0       	ldi	r22, 0x00	; 0
     20a:	70 e0       	ldi	r23, 0x00	; 0
     20c:	cb 01       	movw	r24, r22
     20e:	29 d5       	rcall	.+2642   	; 0xc62 <__subsf3>
     210:	60 93 37 02 	sts	0x0237, r22
     214:	70 93 38 02 	sts	0x0238, r23
     218:	80 93 39 02 	sts	0x0239, r24
     21c:	90 93 3a 02 	sts	0x023A, r25
     220:	a3 01       	movw	r20, r6
     222:	92 01       	movw	r18, r4
     224:	60 e0       	ldi	r22, 0x00	; 0
     226:	70 e0       	ldi	r23, 0x00	; 0
     228:	cb 01       	movw	r24, r22
     22a:	1b d5       	rcall	.+2614   	; 0xc62 <__subsf3>
     22c:	60 93 13 02 	sts	0x0213, r22
     230:	70 93 14 02 	sts	0x0214, r23
     234:	80 93 15 02 	sts	0x0215, r24
     238:	90 93 16 02 	sts	0x0216, r25
     23c:	28 96       	adiw	r28, 0x08	; 8
     23e:	0f b6       	in	r0, 0x3f	; 63
     240:	f8 94       	cli
     242:	de bf       	out	0x3e, r29	; 62
     244:	0f be       	out	0x3f, r0	; 63
     246:	cd bf       	out	0x3d, r28	; 61
     248:	df 91       	pop	r29
     24a:	cf 91       	pop	r28
     24c:	1f 91       	pop	r17
     24e:	0f 91       	pop	r16
     250:	ff 90       	pop	r15
     252:	ef 90       	pop	r14
     254:	df 90       	pop	r13
     256:	cf 90       	pop	r12
     258:	bf 90       	pop	r11
     25a:	af 90       	pop	r10
     25c:	9f 90       	pop	r9
     25e:	8f 90       	pop	r8
     260:	7f 90       	pop	r7
     262:	6f 90       	pop	r6
     264:	5f 90       	pop	r5
     266:	4f 90       	pop	r4
     268:	08 95       	ret

0000026a <uartInit>:
     26a:	e1 ec       	ldi	r30, 0xC1	; 193
     26c:	f0 e0       	ldi	r31, 0x00	; 0
     26e:	80 81       	ld	r24, Z
     270:	88 69       	ori	r24, 0x98	; 152
     272:	80 83       	st	Z, r24
     274:	a2 ec       	ldi	r26, 0xC2	; 194
     276:	b0 e0       	ldi	r27, 0x00	; 0
     278:	8c 91       	ld	r24, X
     27a:	86 60       	ori	r24, 0x06	; 6
     27c:	8c 93       	st	X, r24
     27e:	80 81       	ld	r24, Z
     280:	80 68       	ori	r24, 0x80	; 128
     282:	80 83       	st	Z, r24
     284:	10 92 c5 00 	sts	0x00C5, r1
     288:	87 e6       	ldi	r24, 0x67	; 103
     28a:	80 93 c4 00 	sts	0x00C4, r24
     28e:	08 95       	ret

00000290 <timer0Init>:
     290:	ee e6       	ldi	r30, 0x6E	; 110
     292:	f0 e0       	ldi	r31, 0x00	; 0
     294:	80 81       	ld	r24, Z
     296:	81 60       	ori	r24, 0x01	; 1
     298:	80 83       	st	Z, r24
     29a:	85 b5       	in	r24, 0x25	; 37
     29c:	84 60       	ori	r24, 0x04	; 4
     29e:	85 bd       	out	0x25, r24	; 37
     2a0:	16 bc       	out	0x26, r1	; 38
     2a2:	08 95       	ret

000002a4 <timer1Init>:
     2a4:	e0 e8       	ldi	r30, 0x80	; 128
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	80 81       	ld	r24, Z
     2aa:	83 68       	ori	r24, 0x83	; 131
     2ac:	80 83       	st	Z, r24
     2ae:	e1 e8       	ldi	r30, 0x81	; 129
     2b0:	f0 e0       	ldi	r31, 0x00	; 0
     2b2:	80 81       	ld	r24, Z
     2b4:	89 60       	ori	r24, 0x09	; 9
     2b6:	80 83       	st	Z, r24
     2b8:	25 9a       	sbi	0x04, 5	; 4
     2ba:	10 92 87 00 	sts	0x0087, r1
     2be:	10 92 86 00 	sts	0x0086, r1
     2c2:	10 92 8b 00 	sts	0x008B, r1
     2c6:	10 92 8a 00 	sts	0x008A, r1
     2ca:	08 95       	ret

000002cc <timer3Init>:
     2cc:	e0 e9       	ldi	r30, 0x90	; 144
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	80 81       	ld	r24, Z
     2d2:	82 6f       	ori	r24, 0xF2	; 242
     2d4:	80 83       	st	Z, r24
     2d6:	e1 e9       	ldi	r30, 0x91	; 145
     2d8:	f0 e0       	ldi	r31, 0x00	; 0
     2da:	80 81       	ld	r24, Z
     2dc:	8c 61       	ori	r24, 0x1C	; 28
     2de:	80 83       	st	Z, r24
     2e0:	82 ee       	ldi	r24, 0xE2	; 226
     2e2:	94 e0       	ldi	r25, 0x04	; 4
     2e4:	90 93 97 00 	sts	0x0097, r25
     2e8:	80 93 96 00 	sts	0x0096, r24
     2ec:	90 93 99 00 	sts	0x0099, r25
     2f0:	80 93 98 00 	sts	0x0098, r24
     2f4:	90 93 9b 00 	sts	0x009B, r25
     2f8:	80 93 9a 00 	sts	0x009A, r24
     2fc:	8d b1       	in	r24, 0x0d	; 13
     2fe:	88 61       	ori	r24, 0x18	; 24
     300:	8d b9       	out	0x0d, r24	; 13
     302:	08 95       	ret

00000304 <timer5Init>:
     304:	e1 e2       	ldi	r30, 0x21	; 33
     306:	f1 e0       	ldi	r31, 0x01	; 1
     308:	80 81       	ld	r24, Z
     30a:	87 60       	ori	r24, 0x07	; 7
     30c:	80 83       	st	Z, r24
     30e:	10 92 25 01 	sts	0x0125, r1
     312:	10 92 24 01 	sts	0x0124, r1
     316:	08 95       	ret

00000318 <externalInterrupts>:
     318:	52 98       	cbi	0x0a, 2	; 10
     31a:	5a 9a       	sbi	0x0b, 2	; 11
     31c:	6d 98       	cbi	0x0d, 5	; 13
     31e:	75 9a       	sbi	0x0e, 5	; 14
     320:	51 98       	cbi	0x0a, 1	; 10
     322:	e9 e6       	ldi	r30, 0x69	; 105
     324:	f0 e0       	ldi	r31, 0x00	; 0
     326:	80 81       	ld	r24, Z
     328:	88 62       	ori	r24, 0x28	; 40
     32a:	80 83       	st	Z, r24
     32c:	8d b3       	in	r24, 0x1d	; 29
     32e:	84 62       	ori	r24, 0x24	; 36
     330:	8d bb       	out	0x1d, r24	; 29
     332:	08 95       	ret

00000334 <uartSendc>:
     334:	90 91 c0 00 	lds	r25, 0x00C0
     338:	95 ff       	sbrs	r25, 5
     33a:	fc cf       	rjmp	.-8      	; 0x334 <uartSendc>
     33c:	80 93 c6 00 	sts	0x00C6, r24
     340:	08 95       	ret

00000342 <arbitrationInit>:
     342:	9a 98       	cbi	0x13, 2	; 19
     344:	a2 9a       	sbi	0x14, 2	; 20
     346:	98 9a       	sbi	0x13, 0	; 19
     348:	a0 98       	cbi	0x14, 0	; 20
     34a:	08 95       	ret

0000034c <driveStepper>:
     34c:	28 b1       	in	r18, 0x08	; 8
     34e:	20 7f       	andi	r18, 0xF0	; 240
     350:	28 b9       	out	0x08, r18	; 8
     352:	20 e0       	ldi	r18, 0x00	; 0
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	66 23       	and	r22, r22
     358:	09 f4       	brne	.+2      	; 0x35c <driveStepper+0x10>
     35a:	51 c0       	rjmp	.+162    	; 0x3fe <driveStepper+0xb2>
     35c:	28 17       	cp	r18, r24
     35e:	39 07       	cpc	r19, r25
     360:	09 f4       	brne	.+2      	; 0x364 <driveStepper+0x18>
     362:	50 c0       	rjmp	.+160    	; 0x404 <driveStepper+0xb8>
     364:	40 91 05 02 	lds	r20, 0x0205
     368:	41 11       	cpse	r20, r1
     36a:	20 c0       	rjmp	.+64     	; 0x3ac <driveStepper+0x60>
     36c:	43 98       	cbi	0x08, 3	; 8
     36e:	40 9a       	sbi	0x08, 0	; 8
     370:	ef e9       	ldi	r30, 0x9F	; 159
     372:	ff e0       	ldi	r31, 0x0F	; 15
     374:	31 97       	sbiw	r30, 0x01	; 1
     376:	f1 f7       	brne	.-4      	; 0x374 <driveStepper+0x28>
     378:	00 c0       	rjmp	.+0      	; 0x37a <driveStepper+0x2e>
     37a:	00 00       	nop
     37c:	40 98       	cbi	0x08, 0	; 8
     37e:	41 9a       	sbi	0x08, 1	; 8
     380:	ef e9       	ldi	r30, 0x9F	; 159
     382:	ff e0       	ldi	r31, 0x0F	; 15
     384:	31 97       	sbiw	r30, 0x01	; 1
     386:	f1 f7       	brne	.-4      	; 0x384 <driveStepper+0x38>
     388:	00 c0       	rjmp	.+0      	; 0x38a <driveStepper+0x3e>
     38a:	00 00       	nop
     38c:	41 98       	cbi	0x08, 1	; 8
     38e:	42 9a       	sbi	0x08, 2	; 8
     390:	ef e9       	ldi	r30, 0x9F	; 159
     392:	ff e0       	ldi	r31, 0x0F	; 15
     394:	31 97       	sbiw	r30, 0x01	; 1
     396:	f1 f7       	brne	.-4      	; 0x394 <driveStepper+0x48>
     398:	00 c0       	rjmp	.+0      	; 0x39a <driveStepper+0x4e>
     39a:	00 00       	nop
     39c:	42 98       	cbi	0x08, 2	; 8
     39e:	43 9a       	sbi	0x08, 3	; 8
     3a0:	ef e9       	ldi	r30, 0x9F	; 159
     3a2:	ff e0       	ldi	r31, 0x0F	; 15
     3a4:	31 97       	sbiw	r30, 0x01	; 1
     3a6:	f1 f7       	brne	.-4      	; 0x3a4 <driveStepper+0x58>
     3a8:	00 c0       	rjmp	.+0      	; 0x3aa <driveStepper+0x5e>
     3aa:	00 00       	nop
     3ac:	2f 5f       	subi	r18, 0xFF	; 255
     3ae:	3f 4f       	sbci	r19, 0xFF	; 255
     3b0:	d5 cf       	rjmp	.-86     	; 0x35c <driveStepper+0x10>
     3b2:	40 91 05 02 	lds	r20, 0x0205
     3b6:	41 11       	cpse	r20, r1
     3b8:	20 c0       	rjmp	.+64     	; 0x3fa <driveStepper+0xae>
     3ba:	41 98       	cbi	0x08, 1	; 8
     3bc:	40 9a       	sbi	0x08, 0	; 8
     3be:	ef e9       	ldi	r30, 0x9F	; 159
     3c0:	ff e0       	ldi	r31, 0x0F	; 15
     3c2:	31 97       	sbiw	r30, 0x01	; 1
     3c4:	f1 f7       	brne	.-4      	; 0x3c2 <driveStepper+0x76>
     3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <driveStepper+0x7c>
     3c8:	00 00       	nop
     3ca:	40 98       	cbi	0x08, 0	; 8
     3cc:	43 9a       	sbi	0x08, 3	; 8
     3ce:	ef e9       	ldi	r30, 0x9F	; 159
     3d0:	ff e0       	ldi	r31, 0x0F	; 15
     3d2:	31 97       	sbiw	r30, 0x01	; 1
     3d4:	f1 f7       	brne	.-4      	; 0x3d2 <driveStepper+0x86>
     3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <driveStepper+0x8c>
     3d8:	00 00       	nop
     3da:	43 98       	cbi	0x08, 3	; 8
     3dc:	42 9a       	sbi	0x08, 2	; 8
     3de:	ef e9       	ldi	r30, 0x9F	; 159
     3e0:	ff e0       	ldi	r31, 0x0F	; 15
     3e2:	31 97       	sbiw	r30, 0x01	; 1
     3e4:	f1 f7       	brne	.-4      	; 0x3e2 <driveStepper+0x96>
     3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <driveStepper+0x9c>
     3e8:	00 00       	nop
     3ea:	42 98       	cbi	0x08, 2	; 8
     3ec:	41 9a       	sbi	0x08, 1	; 8
     3ee:	ef e9       	ldi	r30, 0x9F	; 159
     3f0:	ff e0       	ldi	r31, 0x0F	; 15
     3f2:	31 97       	sbiw	r30, 0x01	; 1
     3f4:	f1 f7       	brne	.-4      	; 0x3f2 <driveStepper+0xa6>
     3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <driveStepper+0xac>
     3f8:	00 00       	nop
     3fa:	2f 5f       	subi	r18, 0xFF	; 255
     3fc:	3f 4f       	sbci	r19, 0xFF	; 255
     3fe:	28 17       	cp	r18, r24
     400:	39 07       	cpc	r19, r25
     402:	b9 f6       	brne	.-82     	; 0x3b2 <driveStepper+0x66>
     404:	88 b1       	in	r24, 0x08	; 8
     406:	80 7f       	andi	r24, 0xF0	; 240
     408:	88 b9       	out	0x08, r24	; 8
     40a:	08 95       	ret

0000040c <PIDcompute>:
     40c:	4f 92       	push	r4
     40e:	5f 92       	push	r5
     410:	6f 92       	push	r6
     412:	7f 92       	push	r7
     414:	8f 92       	push	r8
     416:	9f 92       	push	r9
     418:	af 92       	push	r10
     41a:	bf 92       	push	r11
     41c:	cf 92       	push	r12
     41e:	df 92       	push	r13
     420:	ef 92       	push	r14
     422:	ff 92       	push	r15
     424:	cf 93       	push	r28
     426:	df 93       	push	r29
     428:	cd b7       	in	r28, 0x3d	; 61
     42a:	de b7       	in	r29, 0x3e	; 62
     42c:	28 97       	sbiw	r28, 0x08	; 8
     42e:	0f b6       	in	r0, 0x3f	; 63
     430:	f8 94       	cli
     432:	de bf       	out	0x3e, r29	; 62
     434:	0f be       	out	0x3f, r0	; 63
     436:	cd bf       	out	0x3d, r28	; 61
     438:	80 91 04 02 	lds	r24, 0x0204
     43c:	88 23       	and	r24, r24
     43e:	09 f4       	brne	.+2      	; 0x442 <PIDcompute+0x36>
     440:	d4 c0       	rjmp	.+424    	; 0x5ea <PIDcompute+0x1de>
     442:	40 90 4f 02 	lds	r4, 0x024F
     446:	50 90 50 02 	lds	r5, 0x0250
     44a:	60 90 51 02 	lds	r6, 0x0251
     44e:	70 90 52 02 	lds	r7, 0x0252
     452:	a3 01       	movw	r20, r6
     454:	92 01       	movw	r18, r4
     456:	60 91 1f 02 	lds	r22, 0x021F
     45a:	70 91 20 02 	lds	r23, 0x0220
     45e:	80 91 21 02 	lds	r24, 0x0221
     462:	90 91 22 02 	lds	r25, 0x0222
     466:	fd d3       	rcall	.+2042   	; 0xc62 <__subsf3>
     468:	69 83       	std	Y+1, r22	; 0x01
     46a:	7a 83       	std	Y+2, r23	; 0x02
     46c:	8b 83       	std	Y+3, r24	; 0x03
     46e:	9c 83       	std	Y+4, r25	; 0x04
     470:	20 91 37 02 	lds	r18, 0x0237
     474:	30 91 38 02 	lds	r19, 0x0238
     478:	40 91 39 02 	lds	r20, 0x0239
     47c:	50 91 3a 02 	lds	r21, 0x023A
     480:	a3 d5       	rcall	.+2886   	; 0xfc8 <__mulsf3>
     482:	20 91 46 02 	lds	r18, 0x0246
     486:	30 91 47 02 	lds	r19, 0x0247
     48a:	40 91 48 02 	lds	r20, 0x0248
     48e:	50 91 49 02 	lds	r21, 0x0249
     492:	e8 d3       	rcall	.+2000   	; 0xc64 <__addsf3>
     494:	4b 01       	movw	r8, r22
     496:	5c 01       	movw	r10, r24
     498:	60 93 46 02 	sts	0x0246, r22
     49c:	70 93 47 02 	sts	0x0247, r23
     4a0:	80 93 48 02 	sts	0x0248, r24
     4a4:	90 93 49 02 	sts	0x0249, r25
     4a8:	c0 90 17 02 	lds	r12, 0x0217
     4ac:	d0 90 18 02 	lds	r13, 0x0218
     4b0:	e0 90 19 02 	lds	r14, 0x0219
     4b4:	f0 90 1a 02 	lds	r15, 0x021A
     4b8:	a7 01       	movw	r20, r14
     4ba:	96 01       	movw	r18, r12
     4bc:	81 d5       	rcall	.+2818   	; 0xfc0 <__gesf2>
     4be:	18 16       	cp	r1, r24
     4c0:	4c f4       	brge	.+18     	; 0x4d4 <PIDcompute+0xc8>
     4c2:	c0 92 46 02 	sts	0x0246, r12
     4c6:	d0 92 47 02 	sts	0x0247, r13
     4ca:	e0 92 48 02 	sts	0x0248, r14
     4ce:	f0 92 49 02 	sts	0x0249, r15
     4d2:	1f c0       	rjmp	.+62     	; 0x512 <PIDcompute+0x106>
     4d4:	80 91 1b 02 	lds	r24, 0x021B
     4d8:	90 91 1c 02 	lds	r25, 0x021C
     4dc:	a0 91 1d 02 	lds	r26, 0x021D
     4e0:	b0 91 1e 02 	lds	r27, 0x021E
     4e4:	8d 83       	std	Y+5, r24	; 0x05
     4e6:	9e 83       	std	Y+6, r25	; 0x06
     4e8:	af 83       	std	Y+7, r26	; 0x07
     4ea:	b8 87       	std	Y+8, r27	; 0x08
     4ec:	9c 01       	movw	r18, r24
     4ee:	ad 01       	movw	r20, r26
     4f0:	c5 01       	movw	r24, r10
     4f2:	b4 01       	movw	r22, r8
     4f4:	1b d4       	rcall	.+2102   	; 0xd2c <__cmpsf2>
     4f6:	87 ff       	sbrs	r24, 7
     4f8:	0c c0       	rjmp	.+24     	; 0x512 <PIDcompute+0x106>
     4fa:	8d 81       	ldd	r24, Y+5	; 0x05
     4fc:	9e 81       	ldd	r25, Y+6	; 0x06
     4fe:	af 81       	ldd	r26, Y+7	; 0x07
     500:	b8 85       	ldd	r27, Y+8	; 0x08
     502:	80 93 46 02 	sts	0x0246, r24
     506:	90 93 47 02 	sts	0x0247, r25
     50a:	a0 93 48 02 	sts	0x0248, r26
     50e:	b0 93 49 02 	sts	0x0249, r27
     512:	20 91 4b 02 	lds	r18, 0x024B
     516:	30 91 4c 02 	lds	r19, 0x024C
     51a:	40 91 4d 02 	lds	r20, 0x024D
     51e:	50 91 4e 02 	lds	r21, 0x024E
     522:	69 81       	ldd	r22, Y+1	; 0x01
     524:	7a 81       	ldd	r23, Y+2	; 0x02
     526:	8b 81       	ldd	r24, Y+3	; 0x03
     528:	9c 81       	ldd	r25, Y+4	; 0x04
     52a:	4e d5       	rcall	.+2716   	; 0xfc8 <__mulsf3>
     52c:	20 91 46 02 	lds	r18, 0x0246
     530:	30 91 47 02 	lds	r19, 0x0247
     534:	40 91 48 02 	lds	r20, 0x0248
     538:	50 91 49 02 	lds	r21, 0x0249
     53c:	93 d3       	rcall	.+1830   	; 0xc64 <__addsf3>
     53e:	4b 01       	movw	r8, r22
     540:	5c 01       	movw	r10, r24
     542:	20 91 32 02 	lds	r18, 0x0232
     546:	30 91 33 02 	lds	r19, 0x0233
     54a:	40 91 34 02 	lds	r20, 0x0234
     54e:	50 91 35 02 	lds	r21, 0x0235
     552:	c3 01       	movw	r24, r6
     554:	b2 01       	movw	r22, r4
     556:	85 d3       	rcall	.+1802   	; 0xc62 <__subsf3>
     558:	20 91 13 02 	lds	r18, 0x0213
     55c:	30 91 14 02 	lds	r19, 0x0214
     560:	40 91 15 02 	lds	r20, 0x0215
     564:	50 91 16 02 	lds	r21, 0x0216
     568:	2f d5       	rcall	.+2654   	; 0xfc8 <__mulsf3>
     56a:	9b 01       	movw	r18, r22
     56c:	ac 01       	movw	r20, r24
     56e:	c5 01       	movw	r24, r10
     570:	b4 01       	movw	r22, r8
     572:	77 d3       	rcall	.+1774   	; 0xc62 <__subsf3>
     574:	4b 01       	movw	r8, r22
     576:	5c 01       	movw	r10, r24
     578:	60 93 2e 02 	sts	0x022E, r22
     57c:	70 93 2f 02 	sts	0x022F, r23
     580:	80 93 30 02 	sts	0x0230, r24
     584:	90 93 31 02 	sts	0x0231, r25
     588:	a7 01       	movw	r20, r14
     58a:	96 01       	movw	r18, r12
     58c:	19 d5       	rcall	.+2610   	; 0xfc0 <__gesf2>
     58e:	18 16       	cp	r1, r24
     590:	7c f0       	brlt	.+30     	; 0x5b0 <PIDcompute+0x1a4>
     592:	c0 90 1b 02 	lds	r12, 0x021B
     596:	d0 90 1c 02 	lds	r13, 0x021C
     59a:	e0 90 1d 02 	lds	r14, 0x021D
     59e:	f0 90 1e 02 	lds	r15, 0x021E
     5a2:	a7 01       	movw	r20, r14
     5a4:	96 01       	movw	r18, r12
     5a6:	c5 01       	movw	r24, r10
     5a8:	b4 01       	movw	r22, r8
     5aa:	c0 d3       	rcall	.+1920   	; 0xd2c <__cmpsf2>
     5ac:	87 ff       	sbrs	r24, 7
     5ae:	08 c0       	rjmp	.+16     	; 0x5c0 <PIDcompute+0x1b4>
     5b0:	c0 92 2e 02 	sts	0x022E, r12
     5b4:	d0 92 2f 02 	sts	0x022F, r13
     5b8:	e0 92 30 02 	sts	0x0230, r14
     5bc:	f0 92 31 02 	sts	0x0231, r15
     5c0:	60 91 2e 02 	lds	r22, 0x022E
     5c4:	70 91 2f 02 	lds	r23, 0x022F
     5c8:	80 91 30 02 	lds	r24, 0x0230
     5cc:	90 91 31 02 	lds	r25, 0x0231
     5d0:	19 d4       	rcall	.+2098   	; 0xe04 <__fixunssfsi>
     5d2:	70 93 89 00 	sts	0x0089, r23
     5d6:	60 93 88 00 	sts	0x0088, r22
     5da:	40 92 32 02 	sts	0x0232, r4
     5de:	50 92 33 02 	sts	0x0233, r5
     5e2:	60 92 34 02 	sts	0x0234, r6
     5e6:	70 92 35 02 	sts	0x0235, r7
     5ea:	28 96       	adiw	r28, 0x08	; 8
     5ec:	0f b6       	in	r0, 0x3f	; 63
     5ee:	f8 94       	cli
     5f0:	de bf       	out	0x3e, r29	; 62
     5f2:	0f be       	out	0x3f, r0	; 63
     5f4:	cd bf       	out	0x3d, r28	; 61
     5f6:	df 91       	pop	r29
     5f8:	cf 91       	pop	r28
     5fa:	ff 90       	pop	r15
     5fc:	ef 90       	pop	r14
     5fe:	df 90       	pop	r13
     600:	cf 90       	pop	r12
     602:	bf 90       	pop	r11
     604:	af 90       	pop	r10
     606:	9f 90       	pop	r9
     608:	8f 90       	pop	r8
     60a:	7f 90       	pop	r7
     60c:	6f 90       	pop	r6
     60e:	5f 90       	pop	r5
     610:	4f 90       	pop	r4
     612:	08 95       	ret

00000614 <PIDinitialize>:
     614:	8f 92       	push	r8
     616:	9f 92       	push	r9
     618:	af 92       	push	r10
     61a:	bf 92       	push	r11
     61c:	cf 92       	push	r12
     61e:	df 92       	push	r13
     620:	ef 92       	push	r14
     622:	ff 92       	push	r15
     624:	80 91 4f 02 	lds	r24, 0x024F
     628:	90 91 50 02 	lds	r25, 0x0250
     62c:	a0 91 51 02 	lds	r26, 0x0251
     630:	b0 91 52 02 	lds	r27, 0x0252
     634:	80 93 32 02 	sts	0x0232, r24
     638:	90 93 33 02 	sts	0x0233, r25
     63c:	a0 93 34 02 	sts	0x0234, r26
     640:	b0 93 35 02 	sts	0x0235, r27
     644:	c0 90 2e 02 	lds	r12, 0x022E
     648:	d0 90 2f 02 	lds	r13, 0x022F
     64c:	e0 90 30 02 	lds	r14, 0x0230
     650:	f0 90 31 02 	lds	r15, 0x0231
     654:	c0 92 46 02 	sts	0x0246, r12
     658:	d0 92 47 02 	sts	0x0247, r13
     65c:	e0 92 48 02 	sts	0x0248, r14
     660:	f0 92 49 02 	sts	0x0249, r15
     664:	80 90 17 02 	lds	r8, 0x0217
     668:	90 90 18 02 	lds	r9, 0x0218
     66c:	a0 90 19 02 	lds	r10, 0x0219
     670:	b0 90 1a 02 	lds	r11, 0x021A
     674:	a5 01       	movw	r20, r10
     676:	94 01       	movw	r18, r8
     678:	c7 01       	movw	r24, r14
     67a:	b6 01       	movw	r22, r12
     67c:	a1 d4       	rcall	.+2370   	; 0xfc0 <__gesf2>
     67e:	18 16       	cp	r1, r24
     680:	7c f0       	brlt	.+30     	; 0x6a0 <PIDinitialize+0x8c>
     682:	80 90 1b 02 	lds	r8, 0x021B
     686:	90 90 1c 02 	lds	r9, 0x021C
     68a:	a0 90 1d 02 	lds	r10, 0x021D
     68e:	b0 90 1e 02 	lds	r11, 0x021E
     692:	a5 01       	movw	r20, r10
     694:	94 01       	movw	r18, r8
     696:	c7 01       	movw	r24, r14
     698:	b6 01       	movw	r22, r12
     69a:	48 d3       	rcall	.+1680   	; 0xd2c <__cmpsf2>
     69c:	87 ff       	sbrs	r24, 7
     69e:	08 c0       	rjmp	.+16     	; 0x6b0 <PIDinitialize+0x9c>
     6a0:	80 92 46 02 	sts	0x0246, r8
     6a4:	90 92 47 02 	sts	0x0247, r9
     6a8:	a0 92 48 02 	sts	0x0248, r10
     6ac:	b0 92 49 02 	sts	0x0249, r11
     6b0:	ff 90       	pop	r15
     6b2:	ef 90       	pop	r14
     6b4:	df 90       	pop	r13
     6b6:	cf 90       	pop	r12
     6b8:	bf 90       	pop	r11
     6ba:	af 90       	pop	r10
     6bc:	9f 90       	pop	r9
     6be:	8f 90       	pop	r8
     6c0:	08 95       	ret

000006c2 <PIDsetSampleTime>:
     6c2:	cf 92       	push	r12
     6c4:	df 92       	push	r13
     6c6:	ef 92       	push	r14
     6c8:	ff 92       	push	r15
     6ca:	cf 93       	push	r28
     6cc:	df 93       	push	r29
     6ce:	ec 01       	movw	r28, r24
     6d0:	18 16       	cp	r1, r24
     6d2:	19 06       	cpc	r1, r25
     6d4:	0c f0       	brlt	.+2      	; 0x6d8 <PIDsetSampleTime+0x16>
     6d6:	42 c0       	rjmp	.+132    	; 0x75c <PIDsetSampleTime+0x9a>
     6d8:	bc 01       	movw	r22, r24
     6da:	88 27       	eor	r24, r24
     6dc:	77 fd       	sbrc	r23, 7
     6de:	80 95       	com	r24
     6e0:	98 2f       	mov	r25, r24
     6e2:	be d3       	rcall	.+1916   	; 0xe60 <__floatsisf>
     6e4:	6b 01       	movw	r12, r22
     6e6:	7c 01       	movw	r14, r24
     6e8:	60 91 00 02 	lds	r22, 0x0200
     6ec:	70 91 01 02 	lds	r23, 0x0201
     6f0:	88 27       	eor	r24, r24
     6f2:	77 fd       	sbrc	r23, 7
     6f4:	80 95       	com	r24
     6f6:	98 2f       	mov	r25, r24
     6f8:	b3 d3       	rcall	.+1894   	; 0xe60 <__floatsisf>
     6fa:	9b 01       	movw	r18, r22
     6fc:	ac 01       	movw	r20, r24
     6fe:	c7 01       	movw	r24, r14
     700:	b6 01       	movw	r22, r12
     702:	18 d3       	rcall	.+1584   	; 0xd34 <__divsf3>
     704:	6b 01       	movw	r12, r22
     706:	7c 01       	movw	r14, r24
     708:	9b 01       	movw	r18, r22
     70a:	ac 01       	movw	r20, r24
     70c:	60 91 37 02 	lds	r22, 0x0237
     710:	70 91 38 02 	lds	r23, 0x0238
     714:	80 91 39 02 	lds	r24, 0x0239
     718:	90 91 3a 02 	lds	r25, 0x023A
     71c:	55 d4       	rcall	.+2218   	; 0xfc8 <__mulsf3>
     71e:	60 93 37 02 	sts	0x0237, r22
     722:	70 93 38 02 	sts	0x0238, r23
     726:	80 93 39 02 	sts	0x0239, r24
     72a:	90 93 3a 02 	sts	0x023A, r25
     72e:	a7 01       	movw	r20, r14
     730:	96 01       	movw	r18, r12
     732:	60 91 13 02 	lds	r22, 0x0213
     736:	70 91 14 02 	lds	r23, 0x0214
     73a:	80 91 15 02 	lds	r24, 0x0215
     73e:	90 91 16 02 	lds	r25, 0x0216
     742:	f8 d2       	rcall	.+1520   	; 0xd34 <__divsf3>
     744:	60 93 13 02 	sts	0x0213, r22
     748:	70 93 14 02 	sts	0x0214, r23
     74c:	80 93 15 02 	sts	0x0215, r24
     750:	90 93 16 02 	sts	0x0216, r25
     754:	d0 93 01 02 	sts	0x0201, r29
     758:	c0 93 00 02 	sts	0x0200, r28
     75c:	df 91       	pop	r29
     75e:	cf 91       	pop	r28
     760:	ff 90       	pop	r15
     762:	ef 90       	pop	r14
     764:	df 90       	pop	r13
     766:	cf 90       	pop	r12
     768:	08 95       	ret

0000076a <PIDsetOutputLimits>:
     76a:	4f 92       	push	r4
     76c:	5f 92       	push	r5
     76e:	6f 92       	push	r6
     770:	7f 92       	push	r7
     772:	8f 92       	push	r8
     774:	9f 92       	push	r9
     776:	af 92       	push	r10
     778:	bf 92       	push	r11
     77a:	cf 92       	push	r12
     77c:	df 92       	push	r13
     77e:	ef 92       	push	r14
     780:	ff 92       	push	r15
     782:	6b 01       	movw	r12, r22
     784:	7c 01       	movw	r14, r24
     786:	49 01       	movw	r8, r18
     788:	5a 01       	movw	r10, r20
     78a:	1a d4       	rcall	.+2100   	; 0xfc0 <__gesf2>
     78c:	18 16       	cp	r1, r24
     78e:	0c f4       	brge	.+2      	; 0x792 <PIDsetOutputLimits+0x28>
     790:	5e c0       	rjmp	.+188    	; 0x84e <PIDsetOutputLimits+0xe4>
     792:	c0 92 1b 02 	sts	0x021B, r12
     796:	d0 92 1c 02 	sts	0x021C, r13
     79a:	e0 92 1d 02 	sts	0x021D, r14
     79e:	f0 92 1e 02 	sts	0x021E, r15
     7a2:	80 92 17 02 	sts	0x0217, r8
     7a6:	90 92 18 02 	sts	0x0218, r9
     7aa:	a0 92 19 02 	sts	0x0219, r10
     7ae:	b0 92 1a 02 	sts	0x021A, r11
     7b2:	40 90 2e 02 	lds	r4, 0x022E
     7b6:	50 90 2f 02 	lds	r5, 0x022F
     7ba:	60 90 30 02 	lds	r6, 0x0230
     7be:	70 90 31 02 	lds	r7, 0x0231
     7c2:	a5 01       	movw	r20, r10
     7c4:	94 01       	movw	r18, r8
     7c6:	c3 01       	movw	r24, r6
     7c8:	b2 01       	movw	r22, r4
     7ca:	fa d3       	rcall	.+2036   	; 0xfc0 <__gesf2>
     7cc:	18 16       	cp	r1, r24
     7ce:	4c f4       	brge	.+18     	; 0x7e2 <PIDsetOutputLimits+0x78>
     7d0:	80 92 2e 02 	sts	0x022E, r8
     7d4:	90 92 2f 02 	sts	0x022F, r9
     7d8:	a0 92 30 02 	sts	0x0230, r10
     7dc:	b0 92 31 02 	sts	0x0231, r11
     7e0:	0f c0       	rjmp	.+30     	; 0x800 <PIDsetOutputLimits+0x96>
     7e2:	a7 01       	movw	r20, r14
     7e4:	96 01       	movw	r18, r12
     7e6:	c3 01       	movw	r24, r6
     7e8:	b2 01       	movw	r22, r4
     7ea:	a0 d2       	rcall	.+1344   	; 0xd2c <__cmpsf2>
     7ec:	87 ff       	sbrs	r24, 7
     7ee:	08 c0       	rjmp	.+16     	; 0x800 <PIDsetOutputLimits+0x96>
     7f0:	c0 92 2e 02 	sts	0x022E, r12
     7f4:	d0 92 2f 02 	sts	0x022F, r13
     7f8:	e0 92 30 02 	sts	0x0230, r14
     7fc:	f0 92 31 02 	sts	0x0231, r15
     800:	40 90 46 02 	lds	r4, 0x0246
     804:	50 90 47 02 	lds	r5, 0x0247
     808:	60 90 48 02 	lds	r6, 0x0248
     80c:	70 90 49 02 	lds	r7, 0x0249
     810:	a5 01       	movw	r20, r10
     812:	94 01       	movw	r18, r8
     814:	c3 01       	movw	r24, r6
     816:	b2 01       	movw	r22, r4
     818:	d3 d3       	rcall	.+1958   	; 0xfc0 <__gesf2>
     81a:	18 16       	cp	r1, r24
     81c:	4c f4       	brge	.+18     	; 0x830 <PIDsetOutputLimits+0xc6>
     81e:	80 92 46 02 	sts	0x0246, r8
     822:	90 92 47 02 	sts	0x0247, r9
     826:	a0 92 48 02 	sts	0x0248, r10
     82a:	b0 92 49 02 	sts	0x0249, r11
     82e:	0f c0       	rjmp	.+30     	; 0x84e <PIDsetOutputLimits+0xe4>
     830:	a7 01       	movw	r20, r14
     832:	96 01       	movw	r18, r12
     834:	c3 01       	movw	r24, r6
     836:	b2 01       	movw	r22, r4
     838:	79 d2       	rcall	.+1266   	; 0xd2c <__cmpsf2>
     83a:	87 ff       	sbrs	r24, 7
     83c:	08 c0       	rjmp	.+16     	; 0x84e <PIDsetOutputLimits+0xe4>
     83e:	c0 92 46 02 	sts	0x0246, r12
     842:	d0 92 47 02 	sts	0x0247, r13
     846:	e0 92 48 02 	sts	0x0248, r14
     84a:	f0 92 49 02 	sts	0x0249, r15
     84e:	ff 90       	pop	r15
     850:	ef 90       	pop	r14
     852:	df 90       	pop	r13
     854:	cf 90       	pop	r12
     856:	bf 90       	pop	r11
     858:	af 90       	pop	r10
     85a:	9f 90       	pop	r9
     85c:	8f 90       	pop	r8
     85e:	7f 90       	pop	r7
     860:	6f 90       	pop	r6
     862:	5f 90       	pop	r5
     864:	4f 90       	pop	r4
     866:	08 95       	ret

00000868 <PIDsetMode>:
     868:	cf 93       	push	r28
     86a:	c1 e0       	ldi	r28, 0x01	; 1
     86c:	01 97       	sbiw	r24, 0x01	; 1
     86e:	09 f0       	breq	.+2      	; 0x872 <PIDsetMode+0xa>
     870:	c0 e0       	ldi	r28, 0x00	; 0
     872:	80 91 04 02 	lds	r24, 0x0204
     876:	91 e0       	ldi	r25, 0x01	; 1
     878:	89 27       	eor	r24, r25
     87a:	c8 13       	cpse	r28, r24
     87c:	01 c0       	rjmp	.+2      	; 0x880 <PIDsetMode+0x18>
     87e:	ca de       	rcall	.-620    	; 0x614 <PIDinitialize>
     880:	c0 93 04 02 	sts	0x0204, r28
     884:	cf 91       	pop	r28
     886:	08 95       	ret

00000888 <main>:
}

int main(void)
{
	uartInit();
     888:	f0 dc       	rcall	.-1568   	; 0x26a <uartInit>
	//Timekeeper
	timer0Init();
     88a:	02 dd       	rcall	.-1532   	; 0x290 <timer0Init>
	//16bit PWM
	timer1Init();
     88c:	0b dd       	rcall	.-1514   	; 0x2a4 <timer1Init>
	//8bit PWM - unused
//	timer2Init();
	//50Hz Servo timer
	timer3Init();
     88e:	1e dd       	rcall	.-1476   	; 0x2cc <timer3Init>
	//Encoder counter
	timer5Init(); 
     890:	39 dd       	rcall	.-1422   	; 0x304 <timer5Init>
	externalInterrupts();
     892:	42 dd       	rcall	.-1404   	; 0x318 <externalInterrupts>
	arbitrationInit();
     894:	56 dd       	rcall	.-1364   	; 0x342 <arbitrationInit>
     896:	e1 2c       	mov	r14, r1
     898:	f1 2c       	mov	r15, r1
     89a:	87 01       	movw	r16, r14
     89c:	20 e0       	ldi	r18, 0x00	; 0
     89e:	30 e0       	ldi	r19, 0x00	; 0
     8a0:	40 e0       	ldi	r20, 0x00	; 0
     8a2:	50 e4       	ldi	r21, 0x40	; 64
     8a4:	60 e0       	ldi	r22, 0x00	; 0
     8a6:	70 e0       	ldi	r23, 0x00	; 0
     8a8:	80 e8       	ldi	r24, 0x80	; 128
     8aa:	90 e4       	ldi	r25, 0x40	; 64
     8ac:	3b dc       	rcall	.-1930   	; 0x124 <PIDsetTunings.part.0>
	
	PIDsetTunings(4,2,0);
	PIDsetSampleTime(4);
     8ae:	84 e0       	ldi	r24, 0x04	; 4
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	07 df       	rcall	.-498    	; 0x6c2 <PIDsetSampleTime>
	PIDsetOutputLimits(0,0x3ff); 
     8b4:	20 e0       	ldi	r18, 0x00	; 0
     8b6:	30 ec       	ldi	r19, 0xC0	; 192
     8b8:	4f e7       	ldi	r20, 0x7F	; 127
     8ba:	54 e4       	ldi	r21, 0x44	; 68
     8bc:	c8 01       	movw	r24, r16
     8be:	b7 01       	movw	r22, r14
     8c0:	54 df       	rcall	.-344    	; 0x76a <PIDsetOutputLimits>
	PIDsetMode(AUTOMATIC);
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	d0 df       	rcall	.-96     	; 0x868 <PIDsetMode>
	inAuto = newAuto;
}

void PIDsetControllerDirection(int Direction)
{
	controllerDirection = Direction;
     8c8:	10 92 03 02 	sts	0x0203, r1
     8cc:	10 92 02 02 	sts	0x0202, r1
	PIDsetTunings(4,2,0);
	PIDsetSampleTime(4);
	PIDsetOutputLimits(0,0x3ff); 
	PIDsetMode(AUTOMATIC);
	PIDsetControllerDirection(DIRECT);
	PIDinitialize();
     8d0:	a1 de       	rcall	.-702    	; 0x614 <PIDinitialize>
	Setpoint = 0;
     8d2:	e0 92 1f 02 	sts	0x021F, r14
     8d6:	f0 92 20 02 	sts	0x0220, r15
     8da:	00 93 21 02 	sts	0x0221, r16
     8de:	10 93 22 02 	sts	0x0222, r17
	
	//PB7 is Digital 13 (also LED)
	DDRB |= (1<<PB4) | (1<<PB7);
     8e2:	84 b1       	in	r24, 0x04	; 4
     8e4:	80 69       	ori	r24, 0x90	; 144
     8e6:	84 b9       	out	0x04, r24	; 4
	//set PC0-3 to output for stepper control
	//PC0-PC3 are used for stepper control
	//PC0=37,   PC1=36,   PC2=35,   PC3=34
	DDRC |= (1<<PC0) | (1<<PC1) | (1<<PC2) | (1<<PC3);
     8e8:	87 b1       	in	r24, 0x07	; 7
     8ea:	8f 60       	ori	r24, 0x0F	; 15
     8ec:	87 b9       	out	0x07, r24	; 7
	
	sei();
     8ee:	78 94       	sei
						Setpoint = uartData[1]; 
						PIDsetTunings(4,uartData[2],0);
					}
					//Swatter Dev Function
					if(uartData[0] == 0x44){
						OCR3B = 1235;
     8f0:	c3 ed       	ldi	r28, 0xD3	; 211
     8f2:	d4 e0       	ldi	r29, 0x04	; 4
	sei();
	
    while(1)
	    {
				
				if(uartPacketReady == true){ 
     8f4:	80 91 05 02 	lds	r24, 0x0205
     8f8:	88 23       	and	r24, r24
     8fa:	09 f4       	brne	.+2      	; 0x8fe <main+0x76>
     8fc:	8e c0       	rjmp	.+284    	; 0xa1a <main+0x192>
//					uartSendc(uartData[2]);
					//Serial Command Packet: TTIIIIID
					//TT=00 (motor). IIIII=00000 (launcher motor). D=0/1 (forward/backward)
					
					//PID Dev functions
					if(uartData[0] == 0x88){
     8fe:	80 91 07 02 	lds	r24, 0x0207
     902:	88 38       	cpi	r24, 0x88	; 136
     904:	f1 f4       	brne	.+60     	; 0x942 <main+0xba>
						Setpoint = uartData[1]; 
     906:	60 91 08 02 	lds	r22, 0x0208
     90a:	70 e0       	ldi	r23, 0x00	; 0
     90c:	80 e0       	ldi	r24, 0x00	; 0
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	a5 d2       	rcall	.+1354   	; 0xe5c <__floatunsisf>
     912:	60 93 1f 02 	sts	0x021F, r22
     916:	70 93 20 02 	sts	0x0220, r23
     91a:	80 93 21 02 	sts	0x0221, r24
     91e:	90 93 22 02 	sts	0x0222, r25
						PIDsetTunings(4,uartData[2],0);
     922:	60 91 09 02 	lds	r22, 0x0209
     926:	70 e0       	ldi	r23, 0x00	; 0
     928:	80 e0       	ldi	r24, 0x00	; 0
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	97 d2       	rcall	.+1326   	; 0xe5c <__floatunsisf>
     92e:	9b 01       	movw	r18, r22
     930:	ac 01       	movw	r20, r24
     932:	e1 2c       	mov	r14, r1
     934:	f1 2c       	mov	r15, r1
     936:	87 01       	movw	r16, r14
     938:	60 e0       	ldi	r22, 0x00	; 0
     93a:	70 e0       	ldi	r23, 0x00	; 0
     93c:	80 e8       	ldi	r24, 0x80	; 128
     93e:	90 e4       	ldi	r25, 0x40	; 64
     940:	f1 db       	rcall	.-2078   	; 0x124 <PIDsetTunings.part.0>
					}
					//Swatter Dev Function
					if(uartData[0] == 0x44){
     942:	80 91 07 02 	lds	r24, 0x0207
     946:	84 34       	cpi	r24, 0x44	; 68
     948:	21 f4       	brne	.+8      	; 0x952 <main+0xca>
						OCR3B = 1235;
     94a:	d0 93 9b 00 	sts	0x009B, r29
     94e:	c0 93 9a 00 	sts	0x009A, r28
					}
					
					
					//Motor 0 (launcher) forward control
					//HEX CODE: 00 XX XX
					if(uartData[0] == 0b00000000){
     952:	80 91 07 02 	lds	r24, 0x0207
     956:	81 11       	cpse	r24, r1
     958:	14 c0       	rjmp	.+40     	; 0x982 <main+0xfa>
						//NOTE: TOP IS 0X03FF!
						//Max distance is 0x56
						//Min distance is 0x51
						PORTB |= (1<<PB7);
     95a:	2f 9a       	sbi	0x05, 7	; 5
						Setpoint = (uartData[1]<<8) | uartData[2];
     95c:	80 91 08 02 	lds	r24, 0x0208
     960:	60 91 09 02 	lds	r22, 0x0209
     964:	70 e0       	ldi	r23, 0x00	; 0
     966:	78 2b       	or	r23, r24
     968:	88 27       	eor	r24, r24
     96a:	77 fd       	sbrc	r23, 7
     96c:	80 95       	com	r24
     96e:	98 2f       	mov	r25, r24
     970:	77 d2       	rcall	.+1262   	; 0xe60 <__floatsisf>
     972:	60 93 1f 02 	sts	0x021F, r22
     976:	70 93 20 02 	sts	0x0220, r23
     97a:	80 93 21 02 	sts	0x0221, r24
     97e:	90 93 22 02 	sts	0x0222, r25
			//			OCR1A = (uartData[1]<<8) | uartData[2];
					}	
					//Motor 0 (launcher) backward control
					//HEX CODE: 01	XX	XX	
					if(uartData[0] == 0b00000001){
     982:	80 91 07 02 	lds	r24, 0x0207
     986:	81 30       	cpi	r24, 0x01	; 1
     988:	a1 f4       	brne	.+40     	; 0x9b2 <main+0x12a>
						PORTB &= ~(1<<PB7);
     98a:	2f 98       	cbi	0x05, 7	; 5
						Setpoint = (uartData[1]<<8) | uartData[2]; 
     98c:	80 91 08 02 	lds	r24, 0x0208
     990:	60 91 09 02 	lds	r22, 0x0209
     994:	70 e0       	ldi	r23, 0x00	; 0
     996:	78 2b       	or	r23, r24
     998:	88 27       	eor	r24, r24
     99a:	77 fd       	sbrc	r23, 7
     99c:	80 95       	com	r24
     99e:	98 2f       	mov	r25, r24
     9a0:	5f d2       	rcall	.+1214   	; 0xe60 <__floatsisf>
     9a2:	60 93 1f 02 	sts	0x021F, r22
     9a6:	70 93 20 02 	sts	0x0220, r23
     9aa:	80 93 21 02 	sts	0x0221, r24
     9ae:	90 93 22 02 	sts	0x0222, r25
			//			OCR1A = (uartData[1]<<8) | uartData[2];
					}
					//Reload Command
					//TT= 01
					//HEX CODE: 40 00 00
					if(uartData[0] == 0b01000000){
     9b2:	80 91 07 02 	lds	r24, 0x0207
     9b6:	80 34       	cpi	r24, 0x40	; 64
     9b8:	21 f4       	brne	.+8      	; 0x9c2 <main+0x13a>
						launchReady = 1; 
     9ba:	81 e0       	ldi	r24, 0x01	; 1
     9bc:	80 93 0a 02 	sts	0x020A, r24
						EIMSK |= (1<<INT1);
     9c0:	e9 9a       	sbi	0x1d, 1	; 29
			//			timeoutCheck = 1;
			//			timeoutCounter = 0;
					}
					//HEX CODE: 04 00 00 
					//Swatter Control
					if(uartData[0] == 0b00000100){
     9c2:	80 91 07 02 	lds	r24, 0x0207
     9c6:	84 30       	cpi	r24, 0x04	; 4
     9c8:	51 f4       	brne	.+20     	; 0x9de <main+0x156>
						//04 04c4 Max Right
						//0404a0 Centered 
						//040480 Max Dir
						OCR3B = (uartData[1]<<8) | uartData[2];
     9ca:	20 91 08 02 	lds	r18, 0x0208
     9ce:	80 91 09 02 	lds	r24, 0x0209
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	92 2b       	or	r25, r18
     9d6:	90 93 9b 00 	sts	0x009B, r25
     9da:	80 93 9a 00 	sts	0x009A, r24
					}
					
					//Carriage (Motor 1) forward control
					//HEX CODE: 02 XX XX
					if(uartData[0] == 0b00000010){
     9de:	80 91 07 02 	lds	r24, 0x0207
     9e2:	82 30       	cpi	r24, 0x02	; 2
     9e4:	51 f4       	brne	.+20     	; 0x9fa <main+0x172>
						//counterclockwise rotation
						uartPacketReady = false;
     9e6:	10 92 05 02 	sts	0x0205, r1
						driveStepper(((uartData[1]<<8) | uartData[2]), 1);
     9ea:	20 91 08 02 	lds	r18, 0x0208
     9ee:	80 91 09 02 	lds	r24, 0x0209
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	61 e0       	ldi	r22, 0x01	; 1
     9f6:	92 2b       	or	r25, r18
     9f8:	a9 dc       	rcall	.-1710   	; 0x34c <driveStepper>
					}
					//Carriage (Motor 1) backward control
					//HEX CODE: 03 XX XX
					if(uartData[0] == 0b00000011){	
     9fa:	80 91 07 02 	lds	r24, 0x0207
     9fe:	83 30       	cpi	r24, 0x03	; 3
     a00:	51 f4       	brne	.+20     	; 0xa16 <main+0x18e>
						//clockwise rotation
						uartPacketReady = false;
     a02:	10 92 05 02 	sts	0x0205, r1
						driveStepper(((uartData[1]<<8) | uartData[2]), 0);
     a06:	20 91 08 02 	lds	r18, 0x0208
     a0a:	80 91 09 02 	lds	r24, 0x0209
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	60 e0       	ldi	r22, 0x00	; 0
     a12:	92 2b       	or	r25, r18
     a14:	9b dc       	rcall	.-1738   	; 0x34c <driveStepper>
					}
					uartPacketReady = false;
     a16:	10 92 05 02 	sts	0x0205, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a1a:	8f e9       	ldi	r24, 0x9F	; 159
     a1c:	9f e0       	ldi	r25, 0x0F	; 15
     a1e:	01 97       	sbiw	r24, 0x01	; 1
     a20:	f1 f7       	brne	.-4      	; 0xa1e <main+0x196>
     a22:	00 c0       	rjmp	.+0      	; 0xa24 <main+0x19c>
     a24:	00 00       	nop
     a26:	66 cf       	rjmp	.-308    	; 0x8f4 <main+0x6c>

00000a28 <__vector_23>:
				_delay_ms(1);
		}
}


ISR(TIMER0_OVF_vect){
     a28:	1f 92       	push	r1
     a2a:	0f 92       	push	r0
     a2c:	0f b6       	in	r0, 0x3f	; 63
     a2e:	0f 92       	push	r0
     a30:	11 24       	eor	r1, r1
     a32:	0b b6       	in	r0, 0x3b	; 59
     a34:	0f 92       	push	r0
     a36:	2f 93       	push	r18
     a38:	3f 93       	push	r19
     a3a:	4f 93       	push	r20
     a3c:	5f 93       	push	r21
     a3e:	6f 93       	push	r22
     a40:	7f 93       	push	r23
     a42:	8f 93       	push	r24
     a44:	9f 93       	push	r25
     a46:	af 93       	push	r26
     a48:	bf 93       	push	r27
     a4a:	ef 93       	push	r30
     a4c:	ff 93       	push	r31
	//increment counter every ~50ms
	if((tick == 120) | (tick == 60)){
     a4e:	80 91 36 02 	lds	r24, 0x0236
     a52:	90 91 36 02 	lds	r25, 0x0236
     a56:	9c 33       	cpi	r25, 0x3C	; 60
     a58:	11 f0       	breq	.+4      	; 0xa5e <__vector_23+0x36>
     a5a:	88 37       	cpi	r24, 0x78	; 120
     a5c:	49 f5       	brne	.+82     	; 0xab0 <__vector_23+0x88>
		//If servo is moving for more than 1.5s it is probably stalled.
		if(timeoutCounter >= 5){
     a5e:	80 91 0e 02 	lds	r24, 0x020E
     a62:	85 30       	cpi	r24, 0x05	; 5
     a64:	30 f0       	brcs	.+12     	; 0xa72 <__vector_23+0x4a>
			//Stop servo
			OCR3A = 1171;
     a66:	83 e9       	ldi	r24, 0x93	; 147
     a68:	94 e0       	ldi	r25, 0x04	; 4
     a6a:	90 93 99 00 	sts	0x0099, r25
     a6e:	80 93 98 00 	sts	0x0098, r24
		}
		if(pauseCounter >= 2){
     a72:	80 91 0c 02 	lds	r24, 0x020C
     a76:	82 30       	cpi	r24, 0x02	; 2
     a78:	48 f0       	brcs	.+18     	; 0xa8c <__vector_23+0x64>
			//interrupt driven wait has expired.
			//move servo forward and start timeout counter. 
			OCR3A = 1157;
     a7a:	85 e8       	ldi	r24, 0x85	; 133
     a7c:	94 e0       	ldi	r25, 0x04	; 4
     a7e:	90 93 99 00 	sts	0x0099, r25
     a82:	80 93 98 00 	sts	0x0098, r24
			timeoutCheck = 1;
     a86:	81 e0       	ldi	r24, 0x01	; 1
     a88:	80 93 0d 02 	sts	0x020D, r24
		}
		//Check if timeout flag is set (the servo is moving)
		if(timeoutCheck == 1){
     a8c:	80 91 0d 02 	lds	r24, 0x020D
     a90:	88 23       	and	r24, r24
     a92:	29 f0       	breq	.+10     	; 0xa9e <__vector_23+0x76>
			timeoutCounter++; 
     a94:	80 91 0e 02 	lds	r24, 0x020E
     a98:	8f 5f       	subi	r24, 0xFF	; 255
     a9a:	80 93 0e 02 	sts	0x020E, r24
		}
		if(pauseCheck == 1) {
     a9e:	80 91 0b 02 	lds	r24, 0x020B
     aa2:	88 23       	and	r24, r24
     aa4:	29 f0       	breq	.+10     	; 0xab0 <__vector_23+0x88>
			pauseCounter++;
     aa6:	80 91 0c 02 	lds	r24, 0x020C
     aaa:	8f 5f       	subi	r24, 0xFF	; 255
     aac:	80 93 0c 02 	sts	0x020C, r24
		//IF switch is thrown then PG2 is pulled low signaling our turn has started. 
//		if(PING & (1<<PING2)){
//			uartSendc(0x77); 
//		}
	}
	if(tick == 120){
     ab0:	80 91 36 02 	lds	r24, 0x0236
     ab4:	88 37       	cpi	r24, 0x78	; 120
     ab6:	69 f4       	brne	.+26     	; 0xad2 <__vector_23+0xaa>
			uartSendc(rotation);
     ab8:	60 91 0f 02 	lds	r22, 0x020F
     abc:	70 91 10 02 	lds	r23, 0x0210
     ac0:	80 91 11 02 	lds	r24, 0x0211
     ac4:	90 91 12 02 	lds	r25, 0x0212
     ac8:	9d d1       	rcall	.+826    	; 0xe04 <__fixunssfsi>
     aca:	86 2f       	mov	r24, r22
     acc:	33 dc       	rcall	.-1946   	; 0x334 <uartSendc>
			tick = 0;
     ace:	10 92 36 02 	sts	0x0236, r1
	}
	tick++;
     ad2:	80 91 36 02 	lds	r24, 0x0236
     ad6:	8f 5f       	subi	r24, 0xFF	; 255
     ad8:	80 93 36 02 	sts	0x0236, r24
	//Read number of pulses counted
	rotation = TCNT5; 
     adc:	60 91 24 01 	lds	r22, 0x0124
     ae0:	70 91 25 01 	lds	r23, 0x0125
     ae4:	80 e0       	ldi	r24, 0x00	; 0
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	b9 d1       	rcall	.+882    	; 0xe5c <__floatunsisf>
     aea:	60 93 0f 02 	sts	0x020F, r22
     aee:	70 93 10 02 	sts	0x0210, r23
     af2:	80 93 11 02 	sts	0x0211, r24
     af6:	90 93 12 02 	sts	0x0212, r25
	//reset counter. 
	TCNT5 = 0; 
     afa:	10 92 25 01 	sts	0x0125, r1
     afe:	10 92 24 01 	sts	0x0124, r1
		
	PIDinput = rotation;		
     b02:	80 91 0f 02 	lds	r24, 0x020F
     b06:	90 91 10 02 	lds	r25, 0x0210
     b0a:	a0 91 11 02 	lds	r26, 0x0211
     b0e:	b0 91 12 02 	lds	r27, 0x0212
     b12:	80 93 4f 02 	sts	0x024F, r24
     b16:	90 93 50 02 	sts	0x0250, r25
     b1a:	a0 93 51 02 	sts	0x0251, r26
     b1e:	b0 93 52 02 	sts	0x0252, r27
	PIDcompute();	
     b22:	74 dc       	rcall	.-1816   	; 0x40c <PIDcompute>
}
     b24:	ff 91       	pop	r31
     b26:	ef 91       	pop	r30
     b28:	bf 91       	pop	r27
     b2a:	af 91       	pop	r26
     b2c:	9f 91       	pop	r25
     b2e:	8f 91       	pop	r24
     b30:	7f 91       	pop	r23
     b32:	6f 91       	pop	r22
     b34:	5f 91       	pop	r21
     b36:	4f 91       	pop	r20
     b38:	3f 91       	pop	r19
     b3a:	2f 91       	pop	r18
     b3c:	0f 90       	pop	r0
     b3e:	0b be       	out	0x3b, r0	; 59
     b40:	0f 90       	pop	r0
     b42:	0f be       	out	0x3f, r0	; 63
     b44:	0f 90       	pop	r0
     b46:	1f 90       	pop	r1
     b48:	18 95       	reti

00000b4a <__vector_2>:

ISR(INT1_vect){
     b4a:	1f 92       	push	r1
     b4c:	0f 92       	push	r0
     b4e:	0f b6       	in	r0, 0x3f	; 63
     b50:	0f 92       	push	r0
     b52:	11 24       	eor	r1, r1
     b54:	8f 93       	push	r24
     b56:	9f 93       	push	r25
	if(launchReady == 1){
     b58:	80 91 0a 02 	lds	r24, 0x020A
     b5c:	88 23       	and	r24, r24
     b5e:	71 f0       	breq	.+28     	; 0xb7c <__vector_2+0x32>
		launchReady = 0; 
     b60:	10 92 0a 02 	sts	0x020A, r1
		//Set launcher flag
		//Move servo backward.
		OCR3A = 1235;
     b64:	83 ed       	ldi	r24, 0xD3	; 211
     b66:	94 e0       	ldi	r25, 0x04	; 4
     b68:	90 93 99 00 	sts	0x0099, r25
     b6c:	80 93 98 00 	sts	0x0098, r24
		//start timeout
		timeoutCheck = 1;
     b70:	81 e0       	ldi	r24, 0x01	; 1
     b72:	80 93 0d 02 	sts	0x020D, r24
		timeoutCounter = 0;
     b76:	10 92 0e 02 	sts	0x020E, r1
		EIMSK &= ~(1<<INT1); 
     b7a:	e9 98       	cbi	0x1d, 1	; 29
	}
}
     b7c:	9f 91       	pop	r25
     b7e:	8f 91       	pop	r24
     b80:	0f 90       	pop	r0
     b82:	0f be       	out	0x3f, r0	; 63
     b84:	0f 90       	pop	r0
     b86:	1f 90       	pop	r1
     b88:	18 95       	reti

00000b8a <__vector_6>:
ISR(INT5_vect){
     b8a:	1f 92       	push	r1
     b8c:	0f 92       	push	r0
     b8e:	0f b6       	in	r0, 0x3f	; 63
     b90:	0f 92       	push	r0
     b92:	11 24       	eor	r1, r1
     b94:	8f 93       	push	r24
     b96:	9f 93       	push	r25
	//Forward limit switch - stop the motor from moving.
	//Switch should be attached to ground and Digital 3
	OCR3A = 1171; 
     b98:	83 e9       	ldi	r24, 0x93	; 147
     b9a:	94 e0       	ldi	r25, 0x04	; 4
     b9c:	90 93 99 00 	sts	0x0099, r25
     ba0:	80 93 98 00 	sts	0x0098, r24
	//Motor is now stopped. Reset timeouts
	timeoutCheck = 0;
     ba4:	10 92 0d 02 	sts	0x020D, r1
	timeoutCounter = 0; 
     ba8:	10 92 0e 02 	sts	0x020E, r1
	pauseCheck = 0;
     bac:	10 92 0b 02 	sts	0x020B, r1
	pauseCounter = 0; 
     bb0:	10 92 0c 02 	sts	0x020C, r1
}
     bb4:	9f 91       	pop	r25
     bb6:	8f 91       	pop	r24
     bb8:	0f 90       	pop	r0
     bba:	0f be       	out	0x3f, r0	; 63
     bbc:	0f 90       	pop	r0
     bbe:	1f 90       	pop	r1
     bc0:	18 95       	reti

00000bc2 <__vector_3>:
ISR(INT2_vect){
     bc2:	1f 92       	push	r1
     bc4:	0f 92       	push	r0
     bc6:	0f b6       	in	r0, 0x3f	; 63
     bc8:	0f 92       	push	r0
     bca:	11 24       	eor	r1, r1
     bcc:	2f 93       	push	r18
     bce:	8f 93       	push	r24
     bd0:	9f 93       	push	r25
	//Rear limit switch - reverses direction of motor.
	//Should be attached to ground and Digital 19.
	//Turn off timeoutCheck and reset timeoutCount
	timeoutCheck = 0;
     bd2:	10 92 0d 02 	sts	0x020D, r1
	timeoutCounter = 0;
     bd6:	10 92 0e 02 	sts	0x020E, r1
     bda:	2f ef       	ldi	r18, 0xFF	; 255
     bdc:	89 ef       	ldi	r24, 0xF9	; 249
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	21 50       	subi	r18, 0x01	; 1
     be2:	80 40       	sbci	r24, 0x00	; 0
     be4:	90 40       	sbci	r25, 0x00	; 0
     be6:	e1 f7       	brne	.-8      	; 0xbe0 <__vector_3+0x1e>
     be8:	00 c0       	rjmp	.+0      	; 0xbea <__vector_3+0x28>
     bea:	00 00       	nop
	_delay_ms(20);
	OCR3A = 1171;
     bec:	83 e9       	ldi	r24, 0x93	; 147
     bee:	94 e0       	ldi	r25, 0x04	; 4
     bf0:	90 93 99 00 	sts	0x0099, r25
     bf4:	80 93 98 00 	sts	0x0098, r24
//	_delay_ms(100);
	//Start timeoutCheck when motor changed direction
//	timeoutCheck = 1;
	pauseCheck = 1; 
     bf8:	81 e0       	ldi	r24, 0x01	; 1
     bfa:	80 93 0b 02 	sts	0x020B, r24
//	OCR3A = 1157;
	
}
     bfe:	9f 91       	pop	r25
     c00:	8f 91       	pop	r24
     c02:	2f 91       	pop	r18
     c04:	0f 90       	pop	r0
     c06:	0f be       	out	0x3f, r0	; 63
     c08:	0f 90       	pop	r0
     c0a:	1f 90       	pop	r1
     c0c:	18 95       	reti

00000c0e <__vector_25>:

ISR(USART0_RX_vect){
     c0e:	1f 92       	push	r1
     c10:	0f 92       	push	r0
     c12:	0f b6       	in	r0, 0x3f	; 63
     c14:	0f 92       	push	r0
     c16:	11 24       	eor	r1, r1
     c18:	0b b6       	in	r0, 0x3b	; 59
     c1a:	0f 92       	push	r0
     c1c:	8f 93       	push	r24
     c1e:	ef 93       	push	r30
     c20:	ff 93       	push	r31
	uartData[i] = UDR0;
     c22:	e0 91 06 02 	lds	r30, 0x0206
     c26:	f0 e0       	ldi	r31, 0x00	; 0
     c28:	80 91 c6 00 	lds	r24, 0x00C6
     c2c:	e9 5f       	subi	r30, 0xF9	; 249
     c2e:	fd 4f       	sbci	r31, 0xFD	; 253
     c30:	80 83       	st	Z, r24
	i++;
     c32:	80 91 06 02 	lds	r24, 0x0206
     c36:	8f 5f       	subi	r24, 0xFF	; 255
     c38:	80 93 06 02 	sts	0x0206, r24
	if(i >= 3){
     c3c:	80 91 06 02 	lds	r24, 0x0206
     c40:	83 30       	cpi	r24, 0x03	; 3
     c42:	28 f0       	brcs	.+10     	; 0xc4e <__vector_25+0x40>
		i=0;
     c44:	10 92 06 02 	sts	0x0206, r1
		uartPacketReady = true;
     c48:	81 e0       	ldi	r24, 0x01	; 1
     c4a:	80 93 05 02 	sts	0x0205, r24
	}
     c4e:	ff 91       	pop	r31
     c50:	ef 91       	pop	r30
     c52:	8f 91       	pop	r24
     c54:	0f 90       	pop	r0
     c56:	0b be       	out	0x3b, r0	; 59
     c58:	0f 90       	pop	r0
     c5a:	0f be       	out	0x3f, r0	; 63
     c5c:	0f 90       	pop	r0
     c5e:	1f 90       	pop	r1
     c60:	18 95       	reti

00000c62 <__subsf3>:
     c62:	50 58       	subi	r21, 0x80	; 128

00000c64 <__addsf3>:
     c64:	bb 27       	eor	r27, r27
     c66:	aa 27       	eor	r26, r26
     c68:	0e d0       	rcall	.+28     	; 0xc86 <__addsf3x>
     c6a:	70 c1       	rjmp	.+736    	; 0xf4c <__fp_round>
     c6c:	61 d1       	rcall	.+706    	; 0xf30 <__fp_pscA>
     c6e:	30 f0       	brcs	.+12     	; 0xc7c <__addsf3+0x18>
     c70:	66 d1       	rcall	.+716    	; 0xf3e <__fp_pscB>
     c72:	20 f0       	brcs	.+8      	; 0xc7c <__addsf3+0x18>
     c74:	31 f4       	brne	.+12     	; 0xc82 <__addsf3+0x1e>
     c76:	9f 3f       	cpi	r25, 0xFF	; 255
     c78:	11 f4       	brne	.+4      	; 0xc7e <__addsf3+0x1a>
     c7a:	1e f4       	brtc	.+6      	; 0xc82 <__addsf3+0x1e>
     c7c:	56 c1       	rjmp	.+684    	; 0xf2a <__fp_nan>
     c7e:	0e f4       	brtc	.+2      	; 0xc82 <__addsf3+0x1e>
     c80:	e0 95       	com	r30
     c82:	e7 fb       	bst	r30, 7
     c84:	4c c1       	rjmp	.+664    	; 0xf1e <__fp_inf>

00000c86 <__addsf3x>:
     c86:	e9 2f       	mov	r30, r25
     c88:	72 d1       	rcall	.+740    	; 0xf6e <__fp_split3>
     c8a:	80 f3       	brcs	.-32     	; 0xc6c <__addsf3+0x8>
     c8c:	ba 17       	cp	r27, r26
     c8e:	62 07       	cpc	r22, r18
     c90:	73 07       	cpc	r23, r19
     c92:	84 07       	cpc	r24, r20
     c94:	95 07       	cpc	r25, r21
     c96:	18 f0       	brcs	.+6      	; 0xc9e <__addsf3x+0x18>
     c98:	71 f4       	brne	.+28     	; 0xcb6 <__addsf3x+0x30>
     c9a:	9e f5       	brtc	.+102    	; 0xd02 <__addsf3x+0x7c>
     c9c:	8a c1       	rjmp	.+788    	; 0xfb2 <__fp_zero>
     c9e:	0e f4       	brtc	.+2      	; 0xca2 <__addsf3x+0x1c>
     ca0:	e0 95       	com	r30
     ca2:	0b 2e       	mov	r0, r27
     ca4:	ba 2f       	mov	r27, r26
     ca6:	a0 2d       	mov	r26, r0
     ca8:	0b 01       	movw	r0, r22
     caa:	b9 01       	movw	r22, r18
     cac:	90 01       	movw	r18, r0
     cae:	0c 01       	movw	r0, r24
     cb0:	ca 01       	movw	r24, r20
     cb2:	a0 01       	movw	r20, r0
     cb4:	11 24       	eor	r1, r1
     cb6:	ff 27       	eor	r31, r31
     cb8:	59 1b       	sub	r21, r25
     cba:	99 f0       	breq	.+38     	; 0xce2 <__addsf3x+0x5c>
     cbc:	59 3f       	cpi	r21, 0xF9	; 249
     cbe:	50 f4       	brcc	.+20     	; 0xcd4 <__addsf3x+0x4e>
     cc0:	50 3e       	cpi	r21, 0xE0	; 224
     cc2:	68 f1       	brcs	.+90     	; 0xd1e <__addsf3x+0x98>
     cc4:	1a 16       	cp	r1, r26
     cc6:	f0 40       	sbci	r31, 0x00	; 0
     cc8:	a2 2f       	mov	r26, r18
     cca:	23 2f       	mov	r18, r19
     ccc:	34 2f       	mov	r19, r20
     cce:	44 27       	eor	r20, r20
     cd0:	58 5f       	subi	r21, 0xF8	; 248
     cd2:	f3 cf       	rjmp	.-26     	; 0xcba <__addsf3x+0x34>
     cd4:	46 95       	lsr	r20
     cd6:	37 95       	ror	r19
     cd8:	27 95       	ror	r18
     cda:	a7 95       	ror	r26
     cdc:	f0 40       	sbci	r31, 0x00	; 0
     cde:	53 95       	inc	r21
     ce0:	c9 f7       	brne	.-14     	; 0xcd4 <__addsf3x+0x4e>
     ce2:	7e f4       	brtc	.+30     	; 0xd02 <__addsf3x+0x7c>
     ce4:	1f 16       	cp	r1, r31
     ce6:	ba 0b       	sbc	r27, r26
     ce8:	62 0b       	sbc	r22, r18
     cea:	73 0b       	sbc	r23, r19
     cec:	84 0b       	sbc	r24, r20
     cee:	ba f0       	brmi	.+46     	; 0xd1e <__addsf3x+0x98>
     cf0:	91 50       	subi	r25, 0x01	; 1
     cf2:	a1 f0       	breq	.+40     	; 0xd1c <__addsf3x+0x96>
     cf4:	ff 0f       	add	r31, r31
     cf6:	bb 1f       	adc	r27, r27
     cf8:	66 1f       	adc	r22, r22
     cfa:	77 1f       	adc	r23, r23
     cfc:	88 1f       	adc	r24, r24
     cfe:	c2 f7       	brpl	.-16     	; 0xcf0 <__addsf3x+0x6a>
     d00:	0e c0       	rjmp	.+28     	; 0xd1e <__addsf3x+0x98>
     d02:	ba 0f       	add	r27, r26
     d04:	62 1f       	adc	r22, r18
     d06:	73 1f       	adc	r23, r19
     d08:	84 1f       	adc	r24, r20
     d0a:	48 f4       	brcc	.+18     	; 0xd1e <__addsf3x+0x98>
     d0c:	87 95       	ror	r24
     d0e:	77 95       	ror	r23
     d10:	67 95       	ror	r22
     d12:	b7 95       	ror	r27
     d14:	f7 95       	ror	r31
     d16:	9e 3f       	cpi	r25, 0xFE	; 254
     d18:	08 f0       	brcs	.+2      	; 0xd1c <__addsf3x+0x96>
     d1a:	b3 cf       	rjmp	.-154    	; 0xc82 <__addsf3+0x1e>
     d1c:	93 95       	inc	r25
     d1e:	88 0f       	add	r24, r24
     d20:	08 f0       	brcs	.+2      	; 0xd24 <__addsf3x+0x9e>
     d22:	99 27       	eor	r25, r25
     d24:	ee 0f       	add	r30, r30
     d26:	97 95       	ror	r25
     d28:	87 95       	ror	r24
     d2a:	08 95       	ret

00000d2c <__cmpsf2>:
     d2c:	d4 d0       	rcall	.+424    	; 0xed6 <__fp_cmp>
     d2e:	08 f4       	brcc	.+2      	; 0xd32 <__cmpsf2+0x6>
     d30:	81 e0       	ldi	r24, 0x01	; 1
     d32:	08 95       	ret

00000d34 <__divsf3>:
     d34:	0c d0       	rcall	.+24     	; 0xd4e <__divsf3x>
     d36:	0a c1       	rjmp	.+532    	; 0xf4c <__fp_round>
     d38:	02 d1       	rcall	.+516    	; 0xf3e <__fp_pscB>
     d3a:	40 f0       	brcs	.+16     	; 0xd4c <__divsf3+0x18>
     d3c:	f9 d0       	rcall	.+498    	; 0xf30 <__fp_pscA>
     d3e:	30 f0       	brcs	.+12     	; 0xd4c <__divsf3+0x18>
     d40:	21 f4       	brne	.+8      	; 0xd4a <__divsf3+0x16>
     d42:	5f 3f       	cpi	r21, 0xFF	; 255
     d44:	19 f0       	breq	.+6      	; 0xd4c <__divsf3+0x18>
     d46:	eb c0       	rjmp	.+470    	; 0xf1e <__fp_inf>
     d48:	51 11       	cpse	r21, r1
     d4a:	34 c1       	rjmp	.+616    	; 0xfb4 <__fp_szero>
     d4c:	ee c0       	rjmp	.+476    	; 0xf2a <__fp_nan>

00000d4e <__divsf3x>:
     d4e:	0f d1       	rcall	.+542    	; 0xf6e <__fp_split3>
     d50:	98 f3       	brcs	.-26     	; 0xd38 <__divsf3+0x4>

00000d52 <__divsf3_pse>:
     d52:	99 23       	and	r25, r25
     d54:	c9 f3       	breq	.-14     	; 0xd48 <__divsf3+0x14>
     d56:	55 23       	and	r21, r21
     d58:	b1 f3       	breq	.-20     	; 0xd46 <__divsf3+0x12>
     d5a:	95 1b       	sub	r25, r21
     d5c:	55 0b       	sbc	r21, r21
     d5e:	bb 27       	eor	r27, r27
     d60:	aa 27       	eor	r26, r26
     d62:	62 17       	cp	r22, r18
     d64:	73 07       	cpc	r23, r19
     d66:	84 07       	cpc	r24, r20
     d68:	38 f0       	brcs	.+14     	; 0xd78 <__divsf3_pse+0x26>
     d6a:	9f 5f       	subi	r25, 0xFF	; 255
     d6c:	5f 4f       	sbci	r21, 0xFF	; 255
     d6e:	22 0f       	add	r18, r18
     d70:	33 1f       	adc	r19, r19
     d72:	44 1f       	adc	r20, r20
     d74:	aa 1f       	adc	r26, r26
     d76:	a9 f3       	breq	.-22     	; 0xd62 <__divsf3_pse+0x10>
     d78:	33 d0       	rcall	.+102    	; 0xde0 <__divsf3_pse+0x8e>
     d7a:	0e 2e       	mov	r0, r30
     d7c:	3a f0       	brmi	.+14     	; 0xd8c <__divsf3_pse+0x3a>
     d7e:	e0 e8       	ldi	r30, 0x80	; 128
     d80:	30 d0       	rcall	.+96     	; 0xde2 <__divsf3_pse+0x90>
     d82:	91 50       	subi	r25, 0x01	; 1
     d84:	50 40       	sbci	r21, 0x00	; 0
     d86:	e6 95       	lsr	r30
     d88:	00 1c       	adc	r0, r0
     d8a:	ca f7       	brpl	.-14     	; 0xd7e <__divsf3_pse+0x2c>
     d8c:	29 d0       	rcall	.+82     	; 0xde0 <__divsf3_pse+0x8e>
     d8e:	fe 2f       	mov	r31, r30
     d90:	27 d0       	rcall	.+78     	; 0xde0 <__divsf3_pse+0x8e>
     d92:	66 0f       	add	r22, r22
     d94:	77 1f       	adc	r23, r23
     d96:	88 1f       	adc	r24, r24
     d98:	bb 1f       	adc	r27, r27
     d9a:	26 17       	cp	r18, r22
     d9c:	37 07       	cpc	r19, r23
     d9e:	48 07       	cpc	r20, r24
     da0:	ab 07       	cpc	r26, r27
     da2:	b0 e8       	ldi	r27, 0x80	; 128
     da4:	09 f0       	breq	.+2      	; 0xda8 <__divsf3_pse+0x56>
     da6:	bb 0b       	sbc	r27, r27
     da8:	80 2d       	mov	r24, r0
     daa:	bf 01       	movw	r22, r30
     dac:	ff 27       	eor	r31, r31
     dae:	93 58       	subi	r25, 0x83	; 131
     db0:	5f 4f       	sbci	r21, 0xFF	; 255
     db2:	2a f0       	brmi	.+10     	; 0xdbe <__divsf3_pse+0x6c>
     db4:	9e 3f       	cpi	r25, 0xFE	; 254
     db6:	51 05       	cpc	r21, r1
     db8:	68 f0       	brcs	.+26     	; 0xdd4 <__divsf3_pse+0x82>
     dba:	b1 c0       	rjmp	.+354    	; 0xf1e <__fp_inf>
     dbc:	fb c0       	rjmp	.+502    	; 0xfb4 <__fp_szero>
     dbe:	5f 3f       	cpi	r21, 0xFF	; 255
     dc0:	ec f3       	brlt	.-6      	; 0xdbc <__divsf3_pse+0x6a>
     dc2:	98 3e       	cpi	r25, 0xE8	; 232
     dc4:	dc f3       	brlt	.-10     	; 0xdbc <__divsf3_pse+0x6a>
     dc6:	86 95       	lsr	r24
     dc8:	77 95       	ror	r23
     dca:	67 95       	ror	r22
     dcc:	b7 95       	ror	r27
     dce:	f7 95       	ror	r31
     dd0:	9f 5f       	subi	r25, 0xFF	; 255
     dd2:	c9 f7       	brne	.-14     	; 0xdc6 <__divsf3_pse+0x74>
     dd4:	88 0f       	add	r24, r24
     dd6:	91 1d       	adc	r25, r1
     dd8:	96 95       	lsr	r25
     dda:	87 95       	ror	r24
     ddc:	97 f9       	bld	r25, 7
     dde:	08 95       	ret
     de0:	e1 e0       	ldi	r30, 0x01	; 1
     de2:	66 0f       	add	r22, r22
     de4:	77 1f       	adc	r23, r23
     de6:	88 1f       	adc	r24, r24
     de8:	bb 1f       	adc	r27, r27
     dea:	62 17       	cp	r22, r18
     dec:	73 07       	cpc	r23, r19
     dee:	84 07       	cpc	r24, r20
     df0:	ba 07       	cpc	r27, r26
     df2:	20 f0       	brcs	.+8      	; 0xdfc <__divsf3_pse+0xaa>
     df4:	62 1b       	sub	r22, r18
     df6:	73 0b       	sbc	r23, r19
     df8:	84 0b       	sbc	r24, r20
     dfa:	ba 0b       	sbc	r27, r26
     dfc:	ee 1f       	adc	r30, r30
     dfe:	88 f7       	brcc	.-30     	; 0xde2 <__divsf3_pse+0x90>
     e00:	e0 95       	com	r30
     e02:	08 95       	ret

00000e04 <__fixunssfsi>:
     e04:	bc d0       	rcall	.+376    	; 0xf7e <__fp_splitA>
     e06:	88 f0       	brcs	.+34     	; 0xe2a <__fixunssfsi+0x26>
     e08:	9f 57       	subi	r25, 0x7F	; 127
     e0a:	90 f0       	brcs	.+36     	; 0xe30 <__fixunssfsi+0x2c>
     e0c:	b9 2f       	mov	r27, r25
     e0e:	99 27       	eor	r25, r25
     e10:	b7 51       	subi	r27, 0x17	; 23
     e12:	a0 f0       	brcs	.+40     	; 0xe3c <__fixunssfsi+0x38>
     e14:	d1 f0       	breq	.+52     	; 0xe4a <__fixunssfsi+0x46>
     e16:	66 0f       	add	r22, r22
     e18:	77 1f       	adc	r23, r23
     e1a:	88 1f       	adc	r24, r24
     e1c:	99 1f       	adc	r25, r25
     e1e:	1a f0       	brmi	.+6      	; 0xe26 <__fixunssfsi+0x22>
     e20:	ba 95       	dec	r27
     e22:	c9 f7       	brne	.-14     	; 0xe16 <__fixunssfsi+0x12>
     e24:	12 c0       	rjmp	.+36     	; 0xe4a <__fixunssfsi+0x46>
     e26:	b1 30       	cpi	r27, 0x01	; 1
     e28:	81 f0       	breq	.+32     	; 0xe4a <__fixunssfsi+0x46>
     e2a:	c3 d0       	rcall	.+390    	; 0xfb2 <__fp_zero>
     e2c:	b1 e0       	ldi	r27, 0x01	; 1
     e2e:	08 95       	ret
     e30:	c0 c0       	rjmp	.+384    	; 0xfb2 <__fp_zero>
     e32:	67 2f       	mov	r22, r23
     e34:	78 2f       	mov	r23, r24
     e36:	88 27       	eor	r24, r24
     e38:	b8 5f       	subi	r27, 0xF8	; 248
     e3a:	39 f0       	breq	.+14     	; 0xe4a <__fixunssfsi+0x46>
     e3c:	b9 3f       	cpi	r27, 0xF9	; 249
     e3e:	cc f3       	brlt	.-14     	; 0xe32 <__fixunssfsi+0x2e>
     e40:	86 95       	lsr	r24
     e42:	77 95       	ror	r23
     e44:	67 95       	ror	r22
     e46:	b3 95       	inc	r27
     e48:	d9 f7       	brne	.-10     	; 0xe40 <__fixunssfsi+0x3c>
     e4a:	3e f4       	brtc	.+14     	; 0xe5a <__fixunssfsi+0x56>
     e4c:	90 95       	com	r25
     e4e:	80 95       	com	r24
     e50:	70 95       	com	r23
     e52:	61 95       	neg	r22
     e54:	7f 4f       	sbci	r23, 0xFF	; 255
     e56:	8f 4f       	sbci	r24, 0xFF	; 255
     e58:	9f 4f       	sbci	r25, 0xFF	; 255
     e5a:	08 95       	ret

00000e5c <__floatunsisf>:
     e5c:	e8 94       	clt
     e5e:	09 c0       	rjmp	.+18     	; 0xe72 <__floatsisf+0x12>

00000e60 <__floatsisf>:
     e60:	97 fb       	bst	r25, 7
     e62:	3e f4       	brtc	.+14     	; 0xe72 <__floatsisf+0x12>
     e64:	90 95       	com	r25
     e66:	80 95       	com	r24
     e68:	70 95       	com	r23
     e6a:	61 95       	neg	r22
     e6c:	7f 4f       	sbci	r23, 0xFF	; 255
     e6e:	8f 4f       	sbci	r24, 0xFF	; 255
     e70:	9f 4f       	sbci	r25, 0xFF	; 255
     e72:	99 23       	and	r25, r25
     e74:	a9 f0       	breq	.+42     	; 0xea0 <__floatsisf+0x40>
     e76:	f9 2f       	mov	r31, r25
     e78:	96 e9       	ldi	r25, 0x96	; 150
     e7a:	bb 27       	eor	r27, r27
     e7c:	93 95       	inc	r25
     e7e:	f6 95       	lsr	r31
     e80:	87 95       	ror	r24
     e82:	77 95       	ror	r23
     e84:	67 95       	ror	r22
     e86:	b7 95       	ror	r27
     e88:	f1 11       	cpse	r31, r1
     e8a:	f8 cf       	rjmp	.-16     	; 0xe7c <__floatsisf+0x1c>
     e8c:	fa f4       	brpl	.+62     	; 0xecc <__floatsisf+0x6c>
     e8e:	bb 0f       	add	r27, r27
     e90:	11 f4       	brne	.+4      	; 0xe96 <__floatsisf+0x36>
     e92:	60 ff       	sbrs	r22, 0
     e94:	1b c0       	rjmp	.+54     	; 0xecc <__floatsisf+0x6c>
     e96:	6f 5f       	subi	r22, 0xFF	; 255
     e98:	7f 4f       	sbci	r23, 0xFF	; 255
     e9a:	8f 4f       	sbci	r24, 0xFF	; 255
     e9c:	9f 4f       	sbci	r25, 0xFF	; 255
     e9e:	16 c0       	rjmp	.+44     	; 0xecc <__floatsisf+0x6c>
     ea0:	88 23       	and	r24, r24
     ea2:	11 f0       	breq	.+4      	; 0xea8 <__floatsisf+0x48>
     ea4:	96 e9       	ldi	r25, 0x96	; 150
     ea6:	11 c0       	rjmp	.+34     	; 0xeca <__floatsisf+0x6a>
     ea8:	77 23       	and	r23, r23
     eaa:	21 f0       	breq	.+8      	; 0xeb4 <__floatsisf+0x54>
     eac:	9e e8       	ldi	r25, 0x8E	; 142
     eae:	87 2f       	mov	r24, r23
     eb0:	76 2f       	mov	r23, r22
     eb2:	05 c0       	rjmp	.+10     	; 0xebe <__floatsisf+0x5e>
     eb4:	66 23       	and	r22, r22
     eb6:	71 f0       	breq	.+28     	; 0xed4 <__floatsisf+0x74>
     eb8:	96 e8       	ldi	r25, 0x86	; 134
     eba:	86 2f       	mov	r24, r22
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	60 e0       	ldi	r22, 0x00	; 0
     ec0:	2a f0       	brmi	.+10     	; 0xecc <__floatsisf+0x6c>
     ec2:	9a 95       	dec	r25
     ec4:	66 0f       	add	r22, r22
     ec6:	77 1f       	adc	r23, r23
     ec8:	88 1f       	adc	r24, r24
     eca:	da f7       	brpl	.-10     	; 0xec2 <__floatsisf+0x62>
     ecc:	88 0f       	add	r24, r24
     ece:	96 95       	lsr	r25
     ed0:	87 95       	ror	r24
     ed2:	97 f9       	bld	r25, 7
     ed4:	08 95       	ret

00000ed6 <__fp_cmp>:
     ed6:	99 0f       	add	r25, r25
     ed8:	00 08       	sbc	r0, r0
     eda:	55 0f       	add	r21, r21
     edc:	aa 0b       	sbc	r26, r26
     ede:	e0 e8       	ldi	r30, 0x80	; 128
     ee0:	fe ef       	ldi	r31, 0xFE	; 254
     ee2:	16 16       	cp	r1, r22
     ee4:	17 06       	cpc	r1, r23
     ee6:	e8 07       	cpc	r30, r24
     ee8:	f9 07       	cpc	r31, r25
     eea:	c0 f0       	brcs	.+48     	; 0xf1c <__fp_cmp+0x46>
     eec:	12 16       	cp	r1, r18
     eee:	13 06       	cpc	r1, r19
     ef0:	e4 07       	cpc	r30, r20
     ef2:	f5 07       	cpc	r31, r21
     ef4:	98 f0       	brcs	.+38     	; 0xf1c <__fp_cmp+0x46>
     ef6:	62 1b       	sub	r22, r18
     ef8:	73 0b       	sbc	r23, r19
     efa:	84 0b       	sbc	r24, r20
     efc:	95 0b       	sbc	r25, r21
     efe:	39 f4       	brne	.+14     	; 0xf0e <__fp_cmp+0x38>
     f00:	0a 26       	eor	r0, r26
     f02:	61 f0       	breq	.+24     	; 0xf1c <__fp_cmp+0x46>
     f04:	23 2b       	or	r18, r19
     f06:	24 2b       	or	r18, r20
     f08:	25 2b       	or	r18, r21
     f0a:	21 f4       	brne	.+8      	; 0xf14 <__fp_cmp+0x3e>
     f0c:	08 95       	ret
     f0e:	0a 26       	eor	r0, r26
     f10:	09 f4       	brne	.+2      	; 0xf14 <__fp_cmp+0x3e>
     f12:	a1 40       	sbci	r26, 0x01	; 1
     f14:	a6 95       	lsr	r26
     f16:	8f ef       	ldi	r24, 0xFF	; 255
     f18:	81 1d       	adc	r24, r1
     f1a:	81 1d       	adc	r24, r1
     f1c:	08 95       	ret

00000f1e <__fp_inf>:
     f1e:	97 f9       	bld	r25, 7
     f20:	9f 67       	ori	r25, 0x7F	; 127
     f22:	80 e8       	ldi	r24, 0x80	; 128
     f24:	70 e0       	ldi	r23, 0x00	; 0
     f26:	60 e0       	ldi	r22, 0x00	; 0
     f28:	08 95       	ret

00000f2a <__fp_nan>:
     f2a:	9f ef       	ldi	r25, 0xFF	; 255
     f2c:	80 ec       	ldi	r24, 0xC0	; 192
     f2e:	08 95       	ret

00000f30 <__fp_pscA>:
     f30:	00 24       	eor	r0, r0
     f32:	0a 94       	dec	r0
     f34:	16 16       	cp	r1, r22
     f36:	17 06       	cpc	r1, r23
     f38:	18 06       	cpc	r1, r24
     f3a:	09 06       	cpc	r0, r25
     f3c:	08 95       	ret

00000f3e <__fp_pscB>:
     f3e:	00 24       	eor	r0, r0
     f40:	0a 94       	dec	r0
     f42:	12 16       	cp	r1, r18
     f44:	13 06       	cpc	r1, r19
     f46:	14 06       	cpc	r1, r20
     f48:	05 06       	cpc	r0, r21
     f4a:	08 95       	ret

00000f4c <__fp_round>:
     f4c:	09 2e       	mov	r0, r25
     f4e:	03 94       	inc	r0
     f50:	00 0c       	add	r0, r0
     f52:	11 f4       	brne	.+4      	; 0xf58 <__fp_round+0xc>
     f54:	88 23       	and	r24, r24
     f56:	52 f0       	brmi	.+20     	; 0xf6c <__fp_round+0x20>
     f58:	bb 0f       	add	r27, r27
     f5a:	40 f4       	brcc	.+16     	; 0xf6c <__fp_round+0x20>
     f5c:	bf 2b       	or	r27, r31
     f5e:	11 f4       	brne	.+4      	; 0xf64 <__fp_round+0x18>
     f60:	60 ff       	sbrs	r22, 0
     f62:	04 c0       	rjmp	.+8      	; 0xf6c <__fp_round+0x20>
     f64:	6f 5f       	subi	r22, 0xFF	; 255
     f66:	7f 4f       	sbci	r23, 0xFF	; 255
     f68:	8f 4f       	sbci	r24, 0xFF	; 255
     f6a:	9f 4f       	sbci	r25, 0xFF	; 255
     f6c:	08 95       	ret

00000f6e <__fp_split3>:
     f6e:	57 fd       	sbrc	r21, 7
     f70:	90 58       	subi	r25, 0x80	; 128
     f72:	44 0f       	add	r20, r20
     f74:	55 1f       	adc	r21, r21
     f76:	59 f0       	breq	.+22     	; 0xf8e <__fp_splitA+0x10>
     f78:	5f 3f       	cpi	r21, 0xFF	; 255
     f7a:	71 f0       	breq	.+28     	; 0xf98 <__fp_splitA+0x1a>
     f7c:	47 95       	ror	r20

00000f7e <__fp_splitA>:
     f7e:	88 0f       	add	r24, r24
     f80:	97 fb       	bst	r25, 7
     f82:	99 1f       	adc	r25, r25
     f84:	61 f0       	breq	.+24     	; 0xf9e <__fp_splitA+0x20>
     f86:	9f 3f       	cpi	r25, 0xFF	; 255
     f88:	79 f0       	breq	.+30     	; 0xfa8 <__fp_splitA+0x2a>
     f8a:	87 95       	ror	r24
     f8c:	08 95       	ret
     f8e:	12 16       	cp	r1, r18
     f90:	13 06       	cpc	r1, r19
     f92:	14 06       	cpc	r1, r20
     f94:	55 1f       	adc	r21, r21
     f96:	f2 cf       	rjmp	.-28     	; 0xf7c <__fp_split3+0xe>
     f98:	46 95       	lsr	r20
     f9a:	f1 df       	rcall	.-30     	; 0xf7e <__fp_splitA>
     f9c:	08 c0       	rjmp	.+16     	; 0xfae <__fp_splitA+0x30>
     f9e:	16 16       	cp	r1, r22
     fa0:	17 06       	cpc	r1, r23
     fa2:	18 06       	cpc	r1, r24
     fa4:	99 1f       	adc	r25, r25
     fa6:	f1 cf       	rjmp	.-30     	; 0xf8a <__fp_splitA+0xc>
     fa8:	86 95       	lsr	r24
     faa:	71 05       	cpc	r23, r1
     fac:	61 05       	cpc	r22, r1
     fae:	08 94       	sec
     fb0:	08 95       	ret

00000fb2 <__fp_zero>:
     fb2:	e8 94       	clt

00000fb4 <__fp_szero>:
     fb4:	bb 27       	eor	r27, r27
     fb6:	66 27       	eor	r22, r22
     fb8:	77 27       	eor	r23, r23
     fba:	cb 01       	movw	r24, r22
     fbc:	97 f9       	bld	r25, 7
     fbe:	08 95       	ret

00000fc0 <__gesf2>:
     fc0:	8a df       	rcall	.-236    	; 0xed6 <__fp_cmp>
     fc2:	08 f4       	brcc	.+2      	; 0xfc6 <__gesf2+0x6>
     fc4:	8f ef       	ldi	r24, 0xFF	; 255
     fc6:	08 95       	ret

00000fc8 <__mulsf3>:
     fc8:	0b d0       	rcall	.+22     	; 0xfe0 <__mulsf3x>
     fca:	c0 cf       	rjmp	.-128    	; 0xf4c <__fp_round>
     fcc:	b1 df       	rcall	.-158    	; 0xf30 <__fp_pscA>
     fce:	28 f0       	brcs	.+10     	; 0xfda <__mulsf3+0x12>
     fd0:	b6 df       	rcall	.-148    	; 0xf3e <__fp_pscB>
     fd2:	18 f0       	brcs	.+6      	; 0xfda <__mulsf3+0x12>
     fd4:	95 23       	and	r25, r21
     fd6:	09 f0       	breq	.+2      	; 0xfda <__mulsf3+0x12>
     fd8:	a2 cf       	rjmp	.-188    	; 0xf1e <__fp_inf>
     fda:	a7 cf       	rjmp	.-178    	; 0xf2a <__fp_nan>
     fdc:	11 24       	eor	r1, r1
     fde:	ea cf       	rjmp	.-44     	; 0xfb4 <__fp_szero>

00000fe0 <__mulsf3x>:
     fe0:	c6 df       	rcall	.-116    	; 0xf6e <__fp_split3>
     fe2:	a0 f3       	brcs	.-24     	; 0xfcc <__mulsf3+0x4>

00000fe4 <__mulsf3_pse>:
     fe4:	95 9f       	mul	r25, r21
     fe6:	d1 f3       	breq	.-12     	; 0xfdc <__mulsf3+0x14>
     fe8:	95 0f       	add	r25, r21
     fea:	50 e0       	ldi	r21, 0x00	; 0
     fec:	55 1f       	adc	r21, r21
     fee:	62 9f       	mul	r22, r18
     ff0:	f0 01       	movw	r30, r0
     ff2:	72 9f       	mul	r23, r18
     ff4:	bb 27       	eor	r27, r27
     ff6:	f0 0d       	add	r31, r0
     ff8:	b1 1d       	adc	r27, r1
     ffa:	63 9f       	mul	r22, r19
     ffc:	aa 27       	eor	r26, r26
     ffe:	f0 0d       	add	r31, r0
    1000:	b1 1d       	adc	r27, r1
    1002:	aa 1f       	adc	r26, r26
    1004:	64 9f       	mul	r22, r20
    1006:	66 27       	eor	r22, r22
    1008:	b0 0d       	add	r27, r0
    100a:	a1 1d       	adc	r26, r1
    100c:	66 1f       	adc	r22, r22
    100e:	82 9f       	mul	r24, r18
    1010:	22 27       	eor	r18, r18
    1012:	b0 0d       	add	r27, r0
    1014:	a1 1d       	adc	r26, r1
    1016:	62 1f       	adc	r22, r18
    1018:	73 9f       	mul	r23, r19
    101a:	b0 0d       	add	r27, r0
    101c:	a1 1d       	adc	r26, r1
    101e:	62 1f       	adc	r22, r18
    1020:	83 9f       	mul	r24, r19
    1022:	a0 0d       	add	r26, r0
    1024:	61 1d       	adc	r22, r1
    1026:	22 1f       	adc	r18, r18
    1028:	74 9f       	mul	r23, r20
    102a:	33 27       	eor	r19, r19
    102c:	a0 0d       	add	r26, r0
    102e:	61 1d       	adc	r22, r1
    1030:	23 1f       	adc	r18, r19
    1032:	84 9f       	mul	r24, r20
    1034:	60 0d       	add	r22, r0
    1036:	21 1d       	adc	r18, r1
    1038:	82 2f       	mov	r24, r18
    103a:	76 2f       	mov	r23, r22
    103c:	6a 2f       	mov	r22, r26
    103e:	11 24       	eor	r1, r1
    1040:	9f 57       	subi	r25, 0x7F	; 127
    1042:	50 40       	sbci	r21, 0x00	; 0
    1044:	8a f0       	brmi	.+34     	; 0x1068 <__mulsf3_pse+0x84>
    1046:	e1 f0       	breq	.+56     	; 0x1080 <__mulsf3_pse+0x9c>
    1048:	88 23       	and	r24, r24
    104a:	4a f0       	brmi	.+18     	; 0x105e <__mulsf3_pse+0x7a>
    104c:	ee 0f       	add	r30, r30
    104e:	ff 1f       	adc	r31, r31
    1050:	bb 1f       	adc	r27, r27
    1052:	66 1f       	adc	r22, r22
    1054:	77 1f       	adc	r23, r23
    1056:	88 1f       	adc	r24, r24
    1058:	91 50       	subi	r25, 0x01	; 1
    105a:	50 40       	sbci	r21, 0x00	; 0
    105c:	a9 f7       	brne	.-22     	; 0x1048 <__mulsf3_pse+0x64>
    105e:	9e 3f       	cpi	r25, 0xFE	; 254
    1060:	51 05       	cpc	r21, r1
    1062:	70 f0       	brcs	.+28     	; 0x1080 <__mulsf3_pse+0x9c>
    1064:	5c cf       	rjmp	.-328    	; 0xf1e <__fp_inf>
    1066:	a6 cf       	rjmp	.-180    	; 0xfb4 <__fp_szero>
    1068:	5f 3f       	cpi	r21, 0xFF	; 255
    106a:	ec f3       	brlt	.-6      	; 0x1066 <__mulsf3_pse+0x82>
    106c:	98 3e       	cpi	r25, 0xE8	; 232
    106e:	dc f3       	brlt	.-10     	; 0x1066 <__mulsf3_pse+0x82>
    1070:	86 95       	lsr	r24
    1072:	77 95       	ror	r23
    1074:	67 95       	ror	r22
    1076:	b7 95       	ror	r27
    1078:	f7 95       	ror	r31
    107a:	e7 95       	ror	r30
    107c:	9f 5f       	subi	r25, 0xFF	; 255
    107e:	c1 f7       	brne	.-16     	; 0x1070 <__mulsf3_pse+0x8c>
    1080:	fe 2b       	or	r31, r30
    1082:	88 0f       	add	r24, r24
    1084:	91 1d       	adc	r25, r1
    1086:	96 95       	lsr	r25
    1088:	87 95       	ror	r24
    108a:	97 f9       	bld	r25, 7
    108c:	08 95       	ret

0000108e <_exit>:
    108e:	f8 94       	cli

00001090 <__stop_program>:
    1090:	ff cf       	rjmp	.-2      	; 0x1090 <__stop_program>
