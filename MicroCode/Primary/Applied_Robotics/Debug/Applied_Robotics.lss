
Applied_Robotics.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  00001062  000010f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001062  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000050  00800202  00800202  000010f8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000010f8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  00001128  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c66  00000000  00000000  00001210  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000037b  00000000  00000000  00001e76  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008f3  00000000  00000000  000021f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003c4  00000000  00000000  00002ae4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004a4  00000000  00000000  00002ea8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000cfd  00000000  00000000  0000334c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00004049  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
       6:	00 00       	nop
       8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
       a:	00 00       	nop
       c:	cd c5       	rjmp	.+2970   	; 0xba8 <__vector_3>
       e:	00 00       	nop
      10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
      12:	00 00       	nop
      14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
      16:	00 00       	nop
      18:	ab c5       	rjmp	.+2902   	; 0xb70 <__vector_6>
      1a:	00 00       	nop
      1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
      1e:	00 00       	nop
      20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
      22:	00 00       	nop
      24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
      26:	00 00       	nop
      28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
      2e:	00 00       	nop
      30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
      32:	00 00       	nop
      34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
      36:	00 00       	nop
      38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
      3e:	00 00       	nop
      40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
      42:	00 00       	nop
      44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
      46:	00 00       	nop
      48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
      4e:	00 00       	nop
      50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
      52:	00 00       	nop
      54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
      56:	00 00       	nop
      58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	f8 c4       	rjmp	.+2544   	; 0xa4e <__vector_23>
      5e:	00 00       	nop
      60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
      62:	00 00       	nop
      64:	bc c5       	rjmp	.+2936   	; 0xbde <__vector_25>
      66:	00 00       	nop
      68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
      6e:	00 00       	nop
      70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
      72:	00 00       	nop
      74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
      76:	00 00       	nop
      78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
      7e:	00 00       	nop
      80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
      82:	00 00       	nop
      84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
      86:	00 00       	nop
      88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
      8e:	00 00       	nop
      90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
      92:	00 00       	nop
      94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
      96:	00 00       	nop
      98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
      be:	00 00       	nop
      c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
      da:	00 00       	nop
      dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
      de:	00 00       	nop
      e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e6       	ldi	r30, 0x62	; 98
      fc:	f0 e1       	ldi	r31, 0x10	; 16
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a2 30       	cpi	r26, 0x02	; 2
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a2 e0       	ldi	r26, 0x02	; 2
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a2 35       	cpi	r26, 0x52	; 82
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	b5 d3       	rcall	.+1898   	; 0x88a <main>
     120:	9e c7       	rjmp	.+3900   	; 0x105e <_exit>

00000122 <__bad_interrupt>:
     122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <PIDsetTunings.part.0>:
	inAuto = newAuto;
}

void PIDsetControllerDirection(int Direction)
{
	controllerDirection = Direction;
     124:	4f 92       	push	r4
     126:	5f 92       	push	r5
     128:	6f 92       	push	r6
     12a:	7f 92       	push	r7
     12c:	8f 92       	push	r8
     12e:	9f 92       	push	r9
     130:	af 92       	push	r10
     132:	bf 92       	push	r11
     134:	cf 92       	push	r12
     136:	df 92       	push	r13
     138:	ef 92       	push	r14
     13a:	ff 92       	push	r15
     13c:	0f 93       	push	r16
     13e:	1f 93       	push	r17
     140:	cf 93       	push	r28
     142:	df 93       	push	r29
     144:	cd b7       	in	r28, 0x3d	; 61
     146:	de b7       	in	r29, 0x3e	; 62
     148:	28 97       	sbiw	r28, 0x08	; 8
     14a:	0f b6       	in	r0, 0x3f	; 63
     14c:	f8 94       	cli
     14e:	de bf       	out	0x3e, r29	; 62
     150:	0f be       	out	0x3f, r0	; 63
     152:	cd bf       	out	0x3d, r28	; 61
     154:	4b 01       	movw	r8, r22
     156:	5c 01       	movw	r10, r24
     158:	29 83       	std	Y+1, r18	; 0x01
     15a:	3a 83       	std	Y+2, r19	; 0x02
     15c:	4b 83       	std	Y+3, r20	; 0x03
     15e:	5c 83       	std	Y+4, r21	; 0x04
     160:	ed 82       	std	Y+5, r14	; 0x05
     162:	fe 82       	std	Y+6, r15	; 0x06
     164:	0f 83       	std	Y+7, r16	; 0x07
     166:	18 87       	std	Y+8, r17	; 0x08
     168:	60 91 00 02 	lds	r22, 0x0200
     16c:	70 91 01 02 	lds	r23, 0x0201
     170:	88 27       	eor	r24, r24
     172:	77 fd       	sbrc	r23, 7
     174:	80 95       	com	r24
     176:	98 2f       	mov	r25, r24
     178:	5b d6       	rcall	.+3254   	; 0xe30 <__floatsisf>
     17a:	20 e0       	ldi	r18, 0x00	; 0
     17c:	30 e0       	ldi	r19, 0x00	; 0
     17e:	4a e7       	ldi	r20, 0x7A	; 122
     180:	54 e4       	ldi	r21, 0x44	; 68
     182:	c0 d5       	rcall	.+2944   	; 0xd04 <__divsf3>
     184:	2b 01       	movw	r4, r22
     186:	3c 01       	movw	r6, r24
     188:	80 92 4a 02 	sts	0x024A, r8
     18c:	90 92 4b 02 	sts	0x024B, r9
     190:	a0 92 4c 02 	sts	0x024C, r10
     194:	b0 92 4d 02 	sts	0x024D, r11
     198:	9b 01       	movw	r18, r22
     19a:	ac 01       	movw	r20, r24
     19c:	69 81       	ldd	r22, Y+1	; 0x01
     19e:	7a 81       	ldd	r23, Y+2	; 0x02
     1a0:	8b 81       	ldd	r24, Y+3	; 0x03
     1a2:	9c 81       	ldd	r25, Y+4	; 0x04
     1a4:	f9 d6       	rcall	.+3570   	; 0xf98 <__mulsf3>
     1a6:	6b 01       	movw	r12, r22
     1a8:	7c 01       	movw	r14, r24
     1aa:	60 93 36 02 	sts	0x0236, r22
     1ae:	70 93 37 02 	sts	0x0237, r23
     1b2:	80 93 38 02 	sts	0x0238, r24
     1b6:	90 93 39 02 	sts	0x0239, r25
     1ba:	a3 01       	movw	r20, r6
     1bc:	92 01       	movw	r18, r4
     1be:	6d 81       	ldd	r22, Y+5	; 0x05
     1c0:	7e 81       	ldd	r23, Y+6	; 0x06
     1c2:	8f 81       	ldd	r24, Y+7	; 0x07
     1c4:	98 85       	ldd	r25, Y+8	; 0x08
     1c6:	9e d5       	rcall	.+2876   	; 0xd04 <__divsf3>
     1c8:	2b 01       	movw	r4, r22
     1ca:	3c 01       	movw	r6, r24
     1cc:	60 93 12 02 	sts	0x0212, r22
     1d0:	70 93 13 02 	sts	0x0213, r23
     1d4:	80 93 14 02 	sts	0x0214, r24
     1d8:	90 93 15 02 	sts	0x0215, r25
     1dc:	80 91 02 02 	lds	r24, 0x0202
     1e0:	90 91 03 02 	lds	r25, 0x0203
     1e4:	01 97       	sbiw	r24, 0x01	; 1
     1e6:	51 f5       	brne	.+84     	; 0x23c <PIDsetTunings.part.0+0x118>
     1e8:	a5 01       	movw	r20, r10
     1ea:	94 01       	movw	r18, r8
     1ec:	60 e0       	ldi	r22, 0x00	; 0
     1ee:	70 e0       	ldi	r23, 0x00	; 0
     1f0:	cb 01       	movw	r24, r22
     1f2:	1f d5       	rcall	.+2622   	; 0xc32 <__subsf3>
     1f4:	60 93 4a 02 	sts	0x024A, r22
     1f8:	70 93 4b 02 	sts	0x024B, r23
     1fc:	80 93 4c 02 	sts	0x024C, r24
     200:	90 93 4d 02 	sts	0x024D, r25
     204:	a7 01       	movw	r20, r14
     206:	96 01       	movw	r18, r12
     208:	60 e0       	ldi	r22, 0x00	; 0
     20a:	70 e0       	ldi	r23, 0x00	; 0
     20c:	cb 01       	movw	r24, r22
     20e:	11 d5       	rcall	.+2594   	; 0xc32 <__subsf3>
     210:	60 93 36 02 	sts	0x0236, r22
     214:	70 93 37 02 	sts	0x0237, r23
     218:	80 93 38 02 	sts	0x0238, r24
     21c:	90 93 39 02 	sts	0x0239, r25
     220:	a3 01       	movw	r20, r6
     222:	92 01       	movw	r18, r4
     224:	60 e0       	ldi	r22, 0x00	; 0
     226:	70 e0       	ldi	r23, 0x00	; 0
     228:	cb 01       	movw	r24, r22
     22a:	03 d5       	rcall	.+2566   	; 0xc32 <__subsf3>
     22c:	60 93 12 02 	sts	0x0212, r22
     230:	70 93 13 02 	sts	0x0213, r23
     234:	80 93 14 02 	sts	0x0214, r24
     238:	90 93 15 02 	sts	0x0215, r25
     23c:	28 96       	adiw	r28, 0x08	; 8
     23e:	0f b6       	in	r0, 0x3f	; 63
     240:	f8 94       	cli
     242:	de bf       	out	0x3e, r29	; 62
     244:	0f be       	out	0x3f, r0	; 63
     246:	cd bf       	out	0x3d, r28	; 61
     248:	df 91       	pop	r29
     24a:	cf 91       	pop	r28
     24c:	1f 91       	pop	r17
     24e:	0f 91       	pop	r16
     250:	ff 90       	pop	r15
     252:	ef 90       	pop	r14
     254:	df 90       	pop	r13
     256:	cf 90       	pop	r12
     258:	bf 90       	pop	r11
     25a:	af 90       	pop	r10
     25c:	9f 90       	pop	r9
     25e:	8f 90       	pop	r8
     260:	7f 90       	pop	r7
     262:	6f 90       	pop	r6
     264:	5f 90       	pop	r5
     266:	4f 90       	pop	r4
     268:	08 95       	ret

0000026a <uartInit>:
     26a:	e1 ec       	ldi	r30, 0xC1	; 193
     26c:	f0 e0       	ldi	r31, 0x00	; 0
     26e:	80 81       	ld	r24, Z
     270:	88 69       	ori	r24, 0x98	; 152
     272:	80 83       	st	Z, r24
     274:	a2 ec       	ldi	r26, 0xC2	; 194
     276:	b0 e0       	ldi	r27, 0x00	; 0
     278:	8c 91       	ld	r24, X
     27a:	86 60       	ori	r24, 0x06	; 6
     27c:	8c 93       	st	X, r24
     27e:	80 81       	ld	r24, Z
     280:	80 68       	ori	r24, 0x80	; 128
     282:	80 83       	st	Z, r24
     284:	10 92 c5 00 	sts	0x00C5, r1
     288:	87 e6       	ldi	r24, 0x67	; 103
     28a:	80 93 c4 00 	sts	0x00C4, r24
     28e:	08 95       	ret

00000290 <timer0Init>:
     290:	ee e6       	ldi	r30, 0x6E	; 110
     292:	f0 e0       	ldi	r31, 0x00	; 0
     294:	80 81       	ld	r24, Z
     296:	81 60       	ori	r24, 0x01	; 1
     298:	80 83       	st	Z, r24
     29a:	85 b5       	in	r24, 0x25	; 37
     29c:	84 60       	ori	r24, 0x04	; 4
     29e:	85 bd       	out	0x25, r24	; 37
     2a0:	16 bc       	out	0x26, r1	; 38
     2a2:	08 95       	ret

000002a4 <timer1Init>:
     2a4:	e0 e8       	ldi	r30, 0x80	; 128
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	80 81       	ld	r24, Z
     2aa:	83 68       	ori	r24, 0x83	; 131
     2ac:	80 83       	st	Z, r24
     2ae:	e1 e8       	ldi	r30, 0x81	; 129
     2b0:	f0 e0       	ldi	r31, 0x00	; 0
     2b2:	80 81       	ld	r24, Z
     2b4:	89 60       	ori	r24, 0x09	; 9
     2b6:	80 83       	st	Z, r24
     2b8:	84 b1       	in	r24, 0x04	; 4
     2ba:	80 66       	ori	r24, 0x60	; 96
     2bc:	84 b9       	out	0x04, r24	; 4
     2be:	10 92 87 00 	sts	0x0087, r1
     2c2:	10 92 86 00 	sts	0x0086, r1
     2c6:	10 92 8b 00 	sts	0x008B, r1
     2ca:	10 92 8a 00 	sts	0x008A, r1
     2ce:	08 95       	ret

000002d0 <timer3Init>:
     2d0:	e0 e9       	ldi	r30, 0x90	; 144
     2d2:	f0 e0       	ldi	r31, 0x00	; 0
     2d4:	80 81       	ld	r24, Z
     2d6:	82 6c       	ori	r24, 0xC2	; 194
     2d8:	80 83       	st	Z, r24
     2da:	e1 e9       	ldi	r30, 0x91	; 145
     2dc:	f0 e0       	ldi	r31, 0x00	; 0
     2de:	80 81       	ld	r24, Z
     2e0:	8c 61       	ori	r24, 0x1C	; 28
     2e2:	80 83       	st	Z, r24
     2e4:	82 ee       	ldi	r24, 0xE2	; 226
     2e6:	94 e0       	ldi	r25, 0x04	; 4
     2e8:	90 93 97 00 	sts	0x0097, r25
     2ec:	80 93 96 00 	sts	0x0096, r24
     2f0:	90 93 99 00 	sts	0x0099, r25
     2f4:	80 93 98 00 	sts	0x0098, r24
     2f8:	90 93 9b 00 	sts	0x009B, r25
     2fc:	80 93 9a 00 	sts	0x009A, r24
     300:	8d b1       	in	r24, 0x0d	; 13
     302:	88 61       	ori	r24, 0x18	; 24
     304:	8d b9       	out	0x0d, r24	; 13
     306:	08 95       	ret

00000308 <timer5Init>:
     308:	e1 e2       	ldi	r30, 0x21	; 33
     30a:	f1 e0       	ldi	r31, 0x01	; 1
     30c:	80 81       	ld	r24, Z
     30e:	87 60       	ori	r24, 0x07	; 7
     310:	80 83       	st	Z, r24
     312:	10 92 25 01 	sts	0x0125, r1
     316:	10 92 24 01 	sts	0x0124, r1
     31a:	08 95       	ret

0000031c <externalInterrupts>:
     31c:	52 98       	cbi	0x0a, 2	; 10
     31e:	5a 9a       	sbi	0x0b, 2	; 11
     320:	6d 98       	cbi	0x0d, 5	; 13
     322:	75 9a       	sbi	0x0e, 5	; 14
     324:	e9 e6       	ldi	r30, 0x69	; 105
     326:	f0 e0       	ldi	r31, 0x00	; 0
     328:	80 81       	ld	r24, Z
     32a:	80 62       	ori	r24, 0x20	; 32
     32c:	80 83       	st	Z, r24
     32e:	8d b3       	in	r24, 0x1d	; 29
     330:	84 62       	ori	r24, 0x24	; 36
     332:	8d bb       	out	0x1d, r24	; 29
     334:	08 95       	ret

00000336 <uartSendc>:
     336:	90 91 c0 00 	lds	r25, 0x00C0
     33a:	95 ff       	sbrs	r25, 5
     33c:	fc cf       	rjmp	.-8      	; 0x336 <uartSendc>
     33e:	80 93 c6 00 	sts	0x00C6, r24
     342:	08 95       	ret

00000344 <arbitrationInit>:
     344:	9a 98       	cbi	0x13, 2	; 19
     346:	a2 9a       	sbi	0x14, 2	; 20
     348:	98 9a       	sbi	0x13, 0	; 19
     34a:	a0 98       	cbi	0x14, 0	; 20
     34c:	08 95       	ret

0000034e <driveStepper>:
     34e:	28 b1       	in	r18, 0x08	; 8
     350:	20 7f       	andi	r18, 0xF0	; 240
     352:	28 b9       	out	0x08, r18	; 8
     354:	20 e0       	ldi	r18, 0x00	; 0
     356:	30 e0       	ldi	r19, 0x00	; 0
     358:	66 23       	and	r22, r22
     35a:	09 f4       	brne	.+2      	; 0x35e <driveStepper+0x10>
     35c:	51 c0       	rjmp	.+162    	; 0x400 <driveStepper+0xb2>
     35e:	28 17       	cp	r18, r24
     360:	39 07       	cpc	r19, r25
     362:	09 f4       	brne	.+2      	; 0x366 <driveStepper+0x18>
     364:	50 c0       	rjmp	.+160    	; 0x406 <driveStepper+0xb8>
     366:	40 91 05 02 	lds	r20, 0x0205
     36a:	41 11       	cpse	r20, r1
     36c:	20 c0       	rjmp	.+64     	; 0x3ae <driveStepper+0x60>
     36e:	43 98       	cbi	0x08, 3	; 8
     370:	40 9a       	sbi	0x08, 0	; 8
     372:	ef e9       	ldi	r30, 0x9F	; 159
     374:	ff e0       	ldi	r31, 0x0F	; 15
     376:	31 97       	sbiw	r30, 0x01	; 1
     378:	f1 f7       	brne	.-4      	; 0x376 <driveStepper+0x28>
     37a:	00 c0       	rjmp	.+0      	; 0x37c <driveStepper+0x2e>
     37c:	00 00       	nop
     37e:	40 98       	cbi	0x08, 0	; 8
     380:	41 9a       	sbi	0x08, 1	; 8
     382:	ef e9       	ldi	r30, 0x9F	; 159
     384:	ff e0       	ldi	r31, 0x0F	; 15
     386:	31 97       	sbiw	r30, 0x01	; 1
     388:	f1 f7       	brne	.-4      	; 0x386 <driveStepper+0x38>
     38a:	00 c0       	rjmp	.+0      	; 0x38c <driveStepper+0x3e>
     38c:	00 00       	nop
     38e:	41 98       	cbi	0x08, 1	; 8
     390:	42 9a       	sbi	0x08, 2	; 8
     392:	ef e9       	ldi	r30, 0x9F	; 159
     394:	ff e0       	ldi	r31, 0x0F	; 15
     396:	31 97       	sbiw	r30, 0x01	; 1
     398:	f1 f7       	brne	.-4      	; 0x396 <driveStepper+0x48>
     39a:	00 c0       	rjmp	.+0      	; 0x39c <driveStepper+0x4e>
     39c:	00 00       	nop
     39e:	42 98       	cbi	0x08, 2	; 8
     3a0:	43 9a       	sbi	0x08, 3	; 8
     3a2:	ef e9       	ldi	r30, 0x9F	; 159
     3a4:	ff e0       	ldi	r31, 0x0F	; 15
     3a6:	31 97       	sbiw	r30, 0x01	; 1
     3a8:	f1 f7       	brne	.-4      	; 0x3a6 <driveStepper+0x58>
     3aa:	00 c0       	rjmp	.+0      	; 0x3ac <driveStepper+0x5e>
     3ac:	00 00       	nop
     3ae:	2f 5f       	subi	r18, 0xFF	; 255
     3b0:	3f 4f       	sbci	r19, 0xFF	; 255
     3b2:	d5 cf       	rjmp	.-86     	; 0x35e <driveStepper+0x10>
     3b4:	40 91 05 02 	lds	r20, 0x0205
     3b8:	41 11       	cpse	r20, r1
     3ba:	20 c0       	rjmp	.+64     	; 0x3fc <driveStepper+0xae>
     3bc:	41 98       	cbi	0x08, 1	; 8
     3be:	40 9a       	sbi	0x08, 0	; 8
     3c0:	ef e9       	ldi	r30, 0x9F	; 159
     3c2:	ff e0       	ldi	r31, 0x0F	; 15
     3c4:	31 97       	sbiw	r30, 0x01	; 1
     3c6:	f1 f7       	brne	.-4      	; 0x3c4 <driveStepper+0x76>
     3c8:	00 c0       	rjmp	.+0      	; 0x3ca <driveStepper+0x7c>
     3ca:	00 00       	nop
     3cc:	40 98       	cbi	0x08, 0	; 8
     3ce:	43 9a       	sbi	0x08, 3	; 8
     3d0:	ef e9       	ldi	r30, 0x9F	; 159
     3d2:	ff e0       	ldi	r31, 0x0F	; 15
     3d4:	31 97       	sbiw	r30, 0x01	; 1
     3d6:	f1 f7       	brne	.-4      	; 0x3d4 <driveStepper+0x86>
     3d8:	00 c0       	rjmp	.+0      	; 0x3da <driveStepper+0x8c>
     3da:	00 00       	nop
     3dc:	43 98       	cbi	0x08, 3	; 8
     3de:	42 9a       	sbi	0x08, 2	; 8
     3e0:	ef e9       	ldi	r30, 0x9F	; 159
     3e2:	ff e0       	ldi	r31, 0x0F	; 15
     3e4:	31 97       	sbiw	r30, 0x01	; 1
     3e6:	f1 f7       	brne	.-4      	; 0x3e4 <driveStepper+0x96>
     3e8:	00 c0       	rjmp	.+0      	; 0x3ea <driveStepper+0x9c>
     3ea:	00 00       	nop
     3ec:	42 98       	cbi	0x08, 2	; 8
     3ee:	41 9a       	sbi	0x08, 1	; 8
     3f0:	ef e9       	ldi	r30, 0x9F	; 159
     3f2:	ff e0       	ldi	r31, 0x0F	; 15
     3f4:	31 97       	sbiw	r30, 0x01	; 1
     3f6:	f1 f7       	brne	.-4      	; 0x3f4 <driveStepper+0xa6>
     3f8:	00 c0       	rjmp	.+0      	; 0x3fa <driveStepper+0xac>
     3fa:	00 00       	nop
     3fc:	2f 5f       	subi	r18, 0xFF	; 255
     3fe:	3f 4f       	sbci	r19, 0xFF	; 255
     400:	28 17       	cp	r18, r24
     402:	39 07       	cpc	r19, r25
     404:	b9 f6       	brne	.-82     	; 0x3b4 <driveStepper+0x66>
     406:	88 b1       	in	r24, 0x08	; 8
     408:	80 7f       	andi	r24, 0xF0	; 240
     40a:	88 b9       	out	0x08, r24	; 8
     40c:	08 95       	ret

0000040e <PIDcompute>:
     40e:	4f 92       	push	r4
     410:	5f 92       	push	r5
     412:	6f 92       	push	r6
     414:	7f 92       	push	r7
     416:	8f 92       	push	r8
     418:	9f 92       	push	r9
     41a:	af 92       	push	r10
     41c:	bf 92       	push	r11
     41e:	cf 92       	push	r12
     420:	df 92       	push	r13
     422:	ef 92       	push	r14
     424:	ff 92       	push	r15
     426:	cf 93       	push	r28
     428:	df 93       	push	r29
     42a:	cd b7       	in	r28, 0x3d	; 61
     42c:	de b7       	in	r29, 0x3e	; 62
     42e:	28 97       	sbiw	r28, 0x08	; 8
     430:	0f b6       	in	r0, 0x3f	; 63
     432:	f8 94       	cli
     434:	de bf       	out	0x3e, r29	; 62
     436:	0f be       	out	0x3f, r0	; 63
     438:	cd bf       	out	0x3d, r28	; 61
     43a:	80 91 04 02 	lds	r24, 0x0204
     43e:	88 23       	and	r24, r24
     440:	09 f4       	brne	.+2      	; 0x444 <PIDcompute+0x36>
     442:	d4 c0       	rjmp	.+424    	; 0x5ec <PIDcompute+0x1de>
     444:	40 90 4e 02 	lds	r4, 0x024E
     448:	50 90 4f 02 	lds	r5, 0x024F
     44c:	60 90 50 02 	lds	r6, 0x0250
     450:	70 90 51 02 	lds	r7, 0x0251
     454:	a3 01       	movw	r20, r6
     456:	92 01       	movw	r18, r4
     458:	60 91 1e 02 	lds	r22, 0x021E
     45c:	70 91 1f 02 	lds	r23, 0x021F
     460:	80 91 20 02 	lds	r24, 0x0220
     464:	90 91 21 02 	lds	r25, 0x0221
     468:	e4 d3       	rcall	.+1992   	; 0xc32 <__subsf3>
     46a:	69 83       	std	Y+1, r22	; 0x01
     46c:	7a 83       	std	Y+2, r23	; 0x02
     46e:	8b 83       	std	Y+3, r24	; 0x03
     470:	9c 83       	std	Y+4, r25	; 0x04
     472:	20 91 36 02 	lds	r18, 0x0236
     476:	30 91 37 02 	lds	r19, 0x0237
     47a:	40 91 38 02 	lds	r20, 0x0238
     47e:	50 91 39 02 	lds	r21, 0x0239
     482:	8a d5       	rcall	.+2836   	; 0xf98 <__mulsf3>
     484:	20 91 45 02 	lds	r18, 0x0245
     488:	30 91 46 02 	lds	r19, 0x0246
     48c:	40 91 47 02 	lds	r20, 0x0247
     490:	50 91 48 02 	lds	r21, 0x0248
     494:	cf d3       	rcall	.+1950   	; 0xc34 <__addsf3>
     496:	4b 01       	movw	r8, r22
     498:	5c 01       	movw	r10, r24
     49a:	60 93 45 02 	sts	0x0245, r22
     49e:	70 93 46 02 	sts	0x0246, r23
     4a2:	80 93 47 02 	sts	0x0247, r24
     4a6:	90 93 48 02 	sts	0x0248, r25
     4aa:	c0 90 16 02 	lds	r12, 0x0216
     4ae:	d0 90 17 02 	lds	r13, 0x0217
     4b2:	e0 90 18 02 	lds	r14, 0x0218
     4b6:	f0 90 19 02 	lds	r15, 0x0219
     4ba:	a7 01       	movw	r20, r14
     4bc:	96 01       	movw	r18, r12
     4be:	68 d5       	rcall	.+2768   	; 0xf90 <__gesf2>
     4c0:	18 16       	cp	r1, r24
     4c2:	4c f4       	brge	.+18     	; 0x4d6 <PIDcompute+0xc8>
     4c4:	c0 92 45 02 	sts	0x0245, r12
     4c8:	d0 92 46 02 	sts	0x0246, r13
     4cc:	e0 92 47 02 	sts	0x0247, r14
     4d0:	f0 92 48 02 	sts	0x0248, r15
     4d4:	1f c0       	rjmp	.+62     	; 0x514 <PIDcompute+0x106>
     4d6:	80 91 1a 02 	lds	r24, 0x021A
     4da:	90 91 1b 02 	lds	r25, 0x021B
     4de:	a0 91 1c 02 	lds	r26, 0x021C
     4e2:	b0 91 1d 02 	lds	r27, 0x021D
     4e6:	8d 83       	std	Y+5, r24	; 0x05
     4e8:	9e 83       	std	Y+6, r25	; 0x06
     4ea:	af 83       	std	Y+7, r26	; 0x07
     4ec:	b8 87       	std	Y+8, r27	; 0x08
     4ee:	9c 01       	movw	r18, r24
     4f0:	ad 01       	movw	r20, r26
     4f2:	c5 01       	movw	r24, r10
     4f4:	b4 01       	movw	r22, r8
     4f6:	02 d4       	rcall	.+2052   	; 0xcfc <__cmpsf2>
     4f8:	87 ff       	sbrs	r24, 7
     4fa:	0c c0       	rjmp	.+24     	; 0x514 <PIDcompute+0x106>
     4fc:	8d 81       	ldd	r24, Y+5	; 0x05
     4fe:	9e 81       	ldd	r25, Y+6	; 0x06
     500:	af 81       	ldd	r26, Y+7	; 0x07
     502:	b8 85       	ldd	r27, Y+8	; 0x08
     504:	80 93 45 02 	sts	0x0245, r24
     508:	90 93 46 02 	sts	0x0246, r25
     50c:	a0 93 47 02 	sts	0x0247, r26
     510:	b0 93 48 02 	sts	0x0248, r27
     514:	20 91 4a 02 	lds	r18, 0x024A
     518:	30 91 4b 02 	lds	r19, 0x024B
     51c:	40 91 4c 02 	lds	r20, 0x024C
     520:	50 91 4d 02 	lds	r21, 0x024D
     524:	69 81       	ldd	r22, Y+1	; 0x01
     526:	7a 81       	ldd	r23, Y+2	; 0x02
     528:	8b 81       	ldd	r24, Y+3	; 0x03
     52a:	9c 81       	ldd	r25, Y+4	; 0x04
     52c:	35 d5       	rcall	.+2666   	; 0xf98 <__mulsf3>
     52e:	20 91 45 02 	lds	r18, 0x0245
     532:	30 91 46 02 	lds	r19, 0x0246
     536:	40 91 47 02 	lds	r20, 0x0247
     53a:	50 91 48 02 	lds	r21, 0x0248
     53e:	7a d3       	rcall	.+1780   	; 0xc34 <__addsf3>
     540:	4b 01       	movw	r8, r22
     542:	5c 01       	movw	r10, r24
     544:	20 91 31 02 	lds	r18, 0x0231
     548:	30 91 32 02 	lds	r19, 0x0232
     54c:	40 91 33 02 	lds	r20, 0x0233
     550:	50 91 34 02 	lds	r21, 0x0234
     554:	c3 01       	movw	r24, r6
     556:	b2 01       	movw	r22, r4
     558:	6c d3       	rcall	.+1752   	; 0xc32 <__subsf3>
     55a:	20 91 12 02 	lds	r18, 0x0212
     55e:	30 91 13 02 	lds	r19, 0x0213
     562:	40 91 14 02 	lds	r20, 0x0214
     566:	50 91 15 02 	lds	r21, 0x0215
     56a:	16 d5       	rcall	.+2604   	; 0xf98 <__mulsf3>
     56c:	9b 01       	movw	r18, r22
     56e:	ac 01       	movw	r20, r24
     570:	c5 01       	movw	r24, r10
     572:	b4 01       	movw	r22, r8
     574:	5e d3       	rcall	.+1724   	; 0xc32 <__subsf3>
     576:	4b 01       	movw	r8, r22
     578:	5c 01       	movw	r10, r24
     57a:	60 93 2d 02 	sts	0x022D, r22
     57e:	70 93 2e 02 	sts	0x022E, r23
     582:	80 93 2f 02 	sts	0x022F, r24
     586:	90 93 30 02 	sts	0x0230, r25
     58a:	a7 01       	movw	r20, r14
     58c:	96 01       	movw	r18, r12
     58e:	00 d5       	rcall	.+2560   	; 0xf90 <__gesf2>
     590:	18 16       	cp	r1, r24
     592:	7c f0       	brlt	.+30     	; 0x5b2 <PIDcompute+0x1a4>
     594:	c0 90 1a 02 	lds	r12, 0x021A
     598:	d0 90 1b 02 	lds	r13, 0x021B
     59c:	e0 90 1c 02 	lds	r14, 0x021C
     5a0:	f0 90 1d 02 	lds	r15, 0x021D
     5a4:	a7 01       	movw	r20, r14
     5a6:	96 01       	movw	r18, r12
     5a8:	c5 01       	movw	r24, r10
     5aa:	b4 01       	movw	r22, r8
     5ac:	a7 d3       	rcall	.+1870   	; 0xcfc <__cmpsf2>
     5ae:	87 ff       	sbrs	r24, 7
     5b0:	08 c0       	rjmp	.+16     	; 0x5c2 <PIDcompute+0x1b4>
     5b2:	c0 92 2d 02 	sts	0x022D, r12
     5b6:	d0 92 2e 02 	sts	0x022E, r13
     5ba:	e0 92 2f 02 	sts	0x022F, r14
     5be:	f0 92 30 02 	sts	0x0230, r15
     5c2:	60 91 2d 02 	lds	r22, 0x022D
     5c6:	70 91 2e 02 	lds	r23, 0x022E
     5ca:	80 91 2f 02 	lds	r24, 0x022F
     5ce:	90 91 30 02 	lds	r25, 0x0230
     5d2:	00 d4       	rcall	.+2048   	; 0xdd4 <__fixunssfsi>
     5d4:	70 93 89 00 	sts	0x0089, r23
     5d8:	60 93 88 00 	sts	0x0088, r22
     5dc:	40 92 31 02 	sts	0x0231, r4
     5e0:	50 92 32 02 	sts	0x0232, r5
     5e4:	60 92 33 02 	sts	0x0233, r6
     5e8:	70 92 34 02 	sts	0x0234, r7
     5ec:	28 96       	adiw	r28, 0x08	; 8
     5ee:	0f b6       	in	r0, 0x3f	; 63
     5f0:	f8 94       	cli
     5f2:	de bf       	out	0x3e, r29	; 62
     5f4:	0f be       	out	0x3f, r0	; 63
     5f6:	cd bf       	out	0x3d, r28	; 61
     5f8:	df 91       	pop	r29
     5fa:	cf 91       	pop	r28
     5fc:	ff 90       	pop	r15
     5fe:	ef 90       	pop	r14
     600:	df 90       	pop	r13
     602:	cf 90       	pop	r12
     604:	bf 90       	pop	r11
     606:	af 90       	pop	r10
     608:	9f 90       	pop	r9
     60a:	8f 90       	pop	r8
     60c:	7f 90       	pop	r7
     60e:	6f 90       	pop	r6
     610:	5f 90       	pop	r5
     612:	4f 90       	pop	r4
     614:	08 95       	ret

00000616 <PIDinitialize>:
     616:	8f 92       	push	r8
     618:	9f 92       	push	r9
     61a:	af 92       	push	r10
     61c:	bf 92       	push	r11
     61e:	cf 92       	push	r12
     620:	df 92       	push	r13
     622:	ef 92       	push	r14
     624:	ff 92       	push	r15
     626:	80 91 4e 02 	lds	r24, 0x024E
     62a:	90 91 4f 02 	lds	r25, 0x024F
     62e:	a0 91 50 02 	lds	r26, 0x0250
     632:	b0 91 51 02 	lds	r27, 0x0251
     636:	80 93 31 02 	sts	0x0231, r24
     63a:	90 93 32 02 	sts	0x0232, r25
     63e:	a0 93 33 02 	sts	0x0233, r26
     642:	b0 93 34 02 	sts	0x0234, r27
     646:	c0 90 2d 02 	lds	r12, 0x022D
     64a:	d0 90 2e 02 	lds	r13, 0x022E
     64e:	e0 90 2f 02 	lds	r14, 0x022F
     652:	f0 90 30 02 	lds	r15, 0x0230
     656:	c0 92 45 02 	sts	0x0245, r12
     65a:	d0 92 46 02 	sts	0x0246, r13
     65e:	e0 92 47 02 	sts	0x0247, r14
     662:	f0 92 48 02 	sts	0x0248, r15
     666:	80 90 16 02 	lds	r8, 0x0216
     66a:	90 90 17 02 	lds	r9, 0x0217
     66e:	a0 90 18 02 	lds	r10, 0x0218
     672:	b0 90 19 02 	lds	r11, 0x0219
     676:	a5 01       	movw	r20, r10
     678:	94 01       	movw	r18, r8
     67a:	c7 01       	movw	r24, r14
     67c:	b6 01       	movw	r22, r12
     67e:	88 d4       	rcall	.+2320   	; 0xf90 <__gesf2>
     680:	18 16       	cp	r1, r24
     682:	7c f0       	brlt	.+30     	; 0x6a2 <PIDinitialize+0x8c>
     684:	80 90 1a 02 	lds	r8, 0x021A
     688:	90 90 1b 02 	lds	r9, 0x021B
     68c:	a0 90 1c 02 	lds	r10, 0x021C
     690:	b0 90 1d 02 	lds	r11, 0x021D
     694:	a5 01       	movw	r20, r10
     696:	94 01       	movw	r18, r8
     698:	c7 01       	movw	r24, r14
     69a:	b6 01       	movw	r22, r12
     69c:	2f d3       	rcall	.+1630   	; 0xcfc <__cmpsf2>
     69e:	87 ff       	sbrs	r24, 7
     6a0:	08 c0       	rjmp	.+16     	; 0x6b2 <PIDinitialize+0x9c>
     6a2:	80 92 45 02 	sts	0x0245, r8
     6a6:	90 92 46 02 	sts	0x0246, r9
     6aa:	a0 92 47 02 	sts	0x0247, r10
     6ae:	b0 92 48 02 	sts	0x0248, r11
     6b2:	ff 90       	pop	r15
     6b4:	ef 90       	pop	r14
     6b6:	df 90       	pop	r13
     6b8:	cf 90       	pop	r12
     6ba:	bf 90       	pop	r11
     6bc:	af 90       	pop	r10
     6be:	9f 90       	pop	r9
     6c0:	8f 90       	pop	r8
     6c2:	08 95       	ret

000006c4 <PIDsetSampleTime>:
     6c4:	cf 92       	push	r12
     6c6:	df 92       	push	r13
     6c8:	ef 92       	push	r14
     6ca:	ff 92       	push	r15
     6cc:	cf 93       	push	r28
     6ce:	df 93       	push	r29
     6d0:	ec 01       	movw	r28, r24
     6d2:	18 16       	cp	r1, r24
     6d4:	19 06       	cpc	r1, r25
     6d6:	0c f0       	brlt	.+2      	; 0x6da <PIDsetSampleTime+0x16>
     6d8:	42 c0       	rjmp	.+132    	; 0x75e <PIDsetSampleTime+0x9a>
     6da:	bc 01       	movw	r22, r24
     6dc:	88 27       	eor	r24, r24
     6de:	77 fd       	sbrc	r23, 7
     6e0:	80 95       	com	r24
     6e2:	98 2f       	mov	r25, r24
     6e4:	a5 d3       	rcall	.+1866   	; 0xe30 <__floatsisf>
     6e6:	6b 01       	movw	r12, r22
     6e8:	7c 01       	movw	r14, r24
     6ea:	60 91 00 02 	lds	r22, 0x0200
     6ee:	70 91 01 02 	lds	r23, 0x0201
     6f2:	88 27       	eor	r24, r24
     6f4:	77 fd       	sbrc	r23, 7
     6f6:	80 95       	com	r24
     6f8:	98 2f       	mov	r25, r24
     6fa:	9a d3       	rcall	.+1844   	; 0xe30 <__floatsisf>
     6fc:	9b 01       	movw	r18, r22
     6fe:	ac 01       	movw	r20, r24
     700:	c7 01       	movw	r24, r14
     702:	b6 01       	movw	r22, r12
     704:	ff d2       	rcall	.+1534   	; 0xd04 <__divsf3>
     706:	6b 01       	movw	r12, r22
     708:	7c 01       	movw	r14, r24
     70a:	9b 01       	movw	r18, r22
     70c:	ac 01       	movw	r20, r24
     70e:	60 91 36 02 	lds	r22, 0x0236
     712:	70 91 37 02 	lds	r23, 0x0237
     716:	80 91 38 02 	lds	r24, 0x0238
     71a:	90 91 39 02 	lds	r25, 0x0239
     71e:	3c d4       	rcall	.+2168   	; 0xf98 <__mulsf3>
     720:	60 93 36 02 	sts	0x0236, r22
     724:	70 93 37 02 	sts	0x0237, r23
     728:	80 93 38 02 	sts	0x0238, r24
     72c:	90 93 39 02 	sts	0x0239, r25
     730:	a7 01       	movw	r20, r14
     732:	96 01       	movw	r18, r12
     734:	60 91 12 02 	lds	r22, 0x0212
     738:	70 91 13 02 	lds	r23, 0x0213
     73c:	80 91 14 02 	lds	r24, 0x0214
     740:	90 91 15 02 	lds	r25, 0x0215
     744:	df d2       	rcall	.+1470   	; 0xd04 <__divsf3>
     746:	60 93 12 02 	sts	0x0212, r22
     74a:	70 93 13 02 	sts	0x0213, r23
     74e:	80 93 14 02 	sts	0x0214, r24
     752:	90 93 15 02 	sts	0x0215, r25
     756:	d0 93 01 02 	sts	0x0201, r29
     75a:	c0 93 00 02 	sts	0x0200, r28
     75e:	df 91       	pop	r29
     760:	cf 91       	pop	r28
     762:	ff 90       	pop	r15
     764:	ef 90       	pop	r14
     766:	df 90       	pop	r13
     768:	cf 90       	pop	r12
     76a:	08 95       	ret

0000076c <PIDsetOutputLimits>:
     76c:	4f 92       	push	r4
     76e:	5f 92       	push	r5
     770:	6f 92       	push	r6
     772:	7f 92       	push	r7
     774:	8f 92       	push	r8
     776:	9f 92       	push	r9
     778:	af 92       	push	r10
     77a:	bf 92       	push	r11
     77c:	cf 92       	push	r12
     77e:	df 92       	push	r13
     780:	ef 92       	push	r14
     782:	ff 92       	push	r15
     784:	6b 01       	movw	r12, r22
     786:	7c 01       	movw	r14, r24
     788:	49 01       	movw	r8, r18
     78a:	5a 01       	movw	r10, r20
     78c:	01 d4       	rcall	.+2050   	; 0xf90 <__gesf2>
     78e:	18 16       	cp	r1, r24
     790:	0c f4       	brge	.+2      	; 0x794 <PIDsetOutputLimits+0x28>
     792:	5e c0       	rjmp	.+188    	; 0x850 <PIDsetOutputLimits+0xe4>
     794:	c0 92 1a 02 	sts	0x021A, r12
     798:	d0 92 1b 02 	sts	0x021B, r13
     79c:	e0 92 1c 02 	sts	0x021C, r14
     7a0:	f0 92 1d 02 	sts	0x021D, r15
     7a4:	80 92 16 02 	sts	0x0216, r8
     7a8:	90 92 17 02 	sts	0x0217, r9
     7ac:	a0 92 18 02 	sts	0x0218, r10
     7b0:	b0 92 19 02 	sts	0x0219, r11
     7b4:	40 90 2d 02 	lds	r4, 0x022D
     7b8:	50 90 2e 02 	lds	r5, 0x022E
     7bc:	60 90 2f 02 	lds	r6, 0x022F
     7c0:	70 90 30 02 	lds	r7, 0x0230
     7c4:	a5 01       	movw	r20, r10
     7c6:	94 01       	movw	r18, r8
     7c8:	c3 01       	movw	r24, r6
     7ca:	b2 01       	movw	r22, r4
     7cc:	e1 d3       	rcall	.+1986   	; 0xf90 <__gesf2>
     7ce:	18 16       	cp	r1, r24
     7d0:	4c f4       	brge	.+18     	; 0x7e4 <PIDsetOutputLimits+0x78>
     7d2:	80 92 2d 02 	sts	0x022D, r8
     7d6:	90 92 2e 02 	sts	0x022E, r9
     7da:	a0 92 2f 02 	sts	0x022F, r10
     7de:	b0 92 30 02 	sts	0x0230, r11
     7e2:	0f c0       	rjmp	.+30     	; 0x802 <PIDsetOutputLimits+0x96>
     7e4:	a7 01       	movw	r20, r14
     7e6:	96 01       	movw	r18, r12
     7e8:	c3 01       	movw	r24, r6
     7ea:	b2 01       	movw	r22, r4
     7ec:	87 d2       	rcall	.+1294   	; 0xcfc <__cmpsf2>
     7ee:	87 ff       	sbrs	r24, 7
     7f0:	08 c0       	rjmp	.+16     	; 0x802 <PIDsetOutputLimits+0x96>
     7f2:	c0 92 2d 02 	sts	0x022D, r12
     7f6:	d0 92 2e 02 	sts	0x022E, r13
     7fa:	e0 92 2f 02 	sts	0x022F, r14
     7fe:	f0 92 30 02 	sts	0x0230, r15
     802:	40 90 45 02 	lds	r4, 0x0245
     806:	50 90 46 02 	lds	r5, 0x0246
     80a:	60 90 47 02 	lds	r6, 0x0247
     80e:	70 90 48 02 	lds	r7, 0x0248
     812:	a5 01       	movw	r20, r10
     814:	94 01       	movw	r18, r8
     816:	c3 01       	movw	r24, r6
     818:	b2 01       	movw	r22, r4
     81a:	ba d3       	rcall	.+1908   	; 0xf90 <__gesf2>
     81c:	18 16       	cp	r1, r24
     81e:	4c f4       	brge	.+18     	; 0x832 <PIDsetOutputLimits+0xc6>
     820:	80 92 45 02 	sts	0x0245, r8
     824:	90 92 46 02 	sts	0x0246, r9
     828:	a0 92 47 02 	sts	0x0247, r10
     82c:	b0 92 48 02 	sts	0x0248, r11
     830:	0f c0       	rjmp	.+30     	; 0x850 <PIDsetOutputLimits+0xe4>
     832:	a7 01       	movw	r20, r14
     834:	96 01       	movw	r18, r12
     836:	c3 01       	movw	r24, r6
     838:	b2 01       	movw	r22, r4
     83a:	60 d2       	rcall	.+1216   	; 0xcfc <__cmpsf2>
     83c:	87 ff       	sbrs	r24, 7
     83e:	08 c0       	rjmp	.+16     	; 0x850 <PIDsetOutputLimits+0xe4>
     840:	c0 92 45 02 	sts	0x0245, r12
     844:	d0 92 46 02 	sts	0x0246, r13
     848:	e0 92 47 02 	sts	0x0247, r14
     84c:	f0 92 48 02 	sts	0x0248, r15
     850:	ff 90       	pop	r15
     852:	ef 90       	pop	r14
     854:	df 90       	pop	r13
     856:	cf 90       	pop	r12
     858:	bf 90       	pop	r11
     85a:	af 90       	pop	r10
     85c:	9f 90       	pop	r9
     85e:	8f 90       	pop	r8
     860:	7f 90       	pop	r7
     862:	6f 90       	pop	r6
     864:	5f 90       	pop	r5
     866:	4f 90       	pop	r4
     868:	08 95       	ret

0000086a <PIDsetMode>:
     86a:	cf 93       	push	r28
     86c:	c1 e0       	ldi	r28, 0x01	; 1
     86e:	01 97       	sbiw	r24, 0x01	; 1
     870:	09 f0       	breq	.+2      	; 0x874 <PIDsetMode+0xa>
     872:	c0 e0       	ldi	r28, 0x00	; 0
     874:	80 91 04 02 	lds	r24, 0x0204
     878:	91 e0       	ldi	r25, 0x01	; 1
     87a:	89 27       	eor	r24, r25
     87c:	c8 13       	cpse	r28, r24
     87e:	01 c0       	rjmp	.+2      	; 0x882 <PIDsetMode+0x18>
     880:	ca de       	rcall	.-620    	; 0x616 <PIDinitialize>
     882:	c0 93 04 02 	sts	0x0204, r28
     886:	cf 91       	pop	r28
     888:	08 95       	ret

0000088a <main>:
}

int main(void)
{
	uartInit();
     88a:	ef dc       	rcall	.-1570   	; 0x26a <uartInit>
	//Timekeeper
	timer0Init();
     88c:	01 dd       	rcall	.-1534   	; 0x290 <timer0Init>
	//16bit PWM
	timer1Init();
     88e:	0a dd       	rcall	.-1516   	; 0x2a4 <timer1Init>
	//8bit PWM - unused
//	timer2Init();
	//50Hz Servo timer
	timer3Init();
     890:	1f dd       	rcall	.-1474   	; 0x2d0 <timer3Init>
	//Encoder counter
	timer5Init(); 
     892:	3a dd       	rcall	.-1420   	; 0x308 <timer5Init>
	externalInterrupts();
     894:	43 dd       	rcall	.-1402   	; 0x31c <externalInterrupts>
	arbitrationInit();
     896:	56 dd       	rcall	.-1364   	; 0x344 <arbitrationInit>
     898:	e1 2c       	mov	r14, r1
     89a:	f1 2c       	mov	r15, r1
     89c:	87 01       	movw	r16, r14
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	30 e0       	ldi	r19, 0x00	; 0
     8a2:	40 e0       	ldi	r20, 0x00	; 0
     8a4:	50 e4       	ldi	r21, 0x40	; 64
     8a6:	60 e0       	ldi	r22, 0x00	; 0
     8a8:	70 e0       	ldi	r23, 0x00	; 0
     8aa:	80 e8       	ldi	r24, 0x80	; 128
     8ac:	90 e4       	ldi	r25, 0x40	; 64
     8ae:	3a dc       	rcall	.-1932   	; 0x124 <PIDsetTunings.part.0>
	
	PIDsetTunings(4,2,0);
	PIDsetSampleTime(4);
     8b0:	84 e0       	ldi	r24, 0x04	; 4
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	07 df       	rcall	.-498    	; 0x6c4 <PIDsetSampleTime>
	PIDsetOutputLimits(0,0x3ff); 
     8b6:	20 e0       	ldi	r18, 0x00	; 0
     8b8:	30 ec       	ldi	r19, 0xC0	; 192
     8ba:	4f e7       	ldi	r20, 0x7F	; 127
     8bc:	54 e4       	ldi	r21, 0x44	; 68
     8be:	c8 01       	movw	r24, r16
     8c0:	b7 01       	movw	r22, r14
     8c2:	54 df       	rcall	.-344    	; 0x76c <PIDsetOutputLimits>
	PIDsetMode(AUTOMATIC);
     8c4:	81 e0       	ldi	r24, 0x01	; 1
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	d0 df       	rcall	.-96     	; 0x86a <PIDsetMode>
	inAuto = newAuto;
}

void PIDsetControllerDirection(int Direction)
{
	controllerDirection = Direction;
     8ca:	10 92 03 02 	sts	0x0203, r1
     8ce:	10 92 02 02 	sts	0x0202, r1
	PIDsetTunings(4,2,0);
	PIDsetSampleTime(4);
	PIDsetOutputLimits(0,0x3ff); 
	PIDsetMode(AUTOMATIC);
	PIDsetControllerDirection(DIRECT);
	PIDinitialize();
     8d2:	a1 de       	rcall	.-702    	; 0x616 <PIDinitialize>
	Setpoint = 0;
     8d4:	e0 92 1e 02 	sts	0x021E, r14
     8d8:	f0 92 1f 02 	sts	0x021F, r15
     8dc:	00 93 20 02 	sts	0x0220, r16
     8e0:	10 93 21 02 	sts	0x0221, r17
	
	//PB7 is Digital 13 (also LED)
	DDRB |= (1<<PB4) | (1<<PB7);
     8e4:	84 b1       	in	r24, 0x04	; 4
     8e6:	80 69       	ori	r24, 0x90	; 144
     8e8:	84 b9       	out	0x04, r24	; 4
	//set PC0-3 to output for stepper control
	//PC0-PC3 are used for stepper control
	//PC0=37,   PC1=36,   PC2=35,   PC3=34
	DDRC |= (1<<PC0) | (1<<PC1) | (1<<PC2) | (1<<PC3);
     8ea:	87 b1       	in	r24, 0x07	; 7
     8ec:	8f 60       	ori	r24, 0x0F	; 15
     8ee:	87 b9       	out	0x07, r24	; 7
	
	sei();
     8f0:	78 94       	sei
					//Reload Command
					//TT= 01
					//HEX CODE: 40 00 00
					if(uartData[0] == 0b01000000){
						//Move servo backward.
						OCR3A = 1235;
     8f2:	c3 ed       	ldi	r28, 0xD3	; 211
     8f4:	d4 e0       	ldi	r29, 0x04	; 4
					}
					
					//Toggle on/off Reloader
					if(uartData[0] == 0x99){
						//toggle on/off PWM output
						TCCR3B ^= ((1<<COM3A1) | (1<<COM3A0));
     8f6:	80 ec       	ldi	r24, 0xC0	; 192
     8f8:	d8 2e       	mov	r13, r24
						//toggle on/off external interrupts
						EIMSK ^= ((1<<INT5) | (1<<INT2));
     8fa:	94 e2       	ldi	r25, 0x24	; 36
     8fc:	c9 2e       	mov	r12, r25
	sei();
	
    while(1)
	    {
				
				if(uartPacketReady == true){ 
     8fe:	80 91 05 02 	lds	r24, 0x0205
     902:	88 23       	and	r24, r24
     904:	09 f4       	brne	.+2      	; 0x908 <main+0x7e>
     906:	9c c0       	rjmp	.+312    	; 0xa40 <main+0x1b6>
					//Echo back received data
					uartSendc(uartData[0]);
     908:	80 91 07 02 	lds	r24, 0x0207
     90c:	14 dd       	rcall	.-1496   	; 0x336 <uartSendc>
					uartSendc(uartData[1]);
     90e:	80 91 08 02 	lds	r24, 0x0208
     912:	11 dd       	rcall	.-1502   	; 0x336 <uartSendc>
					uartSendc(uartData[2]);
     914:	80 91 09 02 	lds	r24, 0x0209
     918:	0e dd       	rcall	.-1508   	; 0x336 <uartSendc>
					//Serial Command Packet: TTIIIIID
					//TT=00 (motor). IIIII=00000 (launcher motor). D=0/1 (forward/backward)
					
					//PID Dev functions
					if(uartData[0] == 0x88){
     91a:	80 91 07 02 	lds	r24, 0x0207
     91e:	88 38       	cpi	r24, 0x88	; 136
     920:	f1 f4       	brne	.+60     	; 0x95e <main+0xd4>
						Setpoint = uartData[1]; 
     922:	60 91 08 02 	lds	r22, 0x0208
     926:	70 e0       	ldi	r23, 0x00	; 0
     928:	80 e0       	ldi	r24, 0x00	; 0
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	7f d2       	rcall	.+1278   	; 0xe2c <__floatunsisf>
     92e:	60 93 1e 02 	sts	0x021E, r22
     932:	70 93 1f 02 	sts	0x021F, r23
     936:	80 93 20 02 	sts	0x0220, r24
     93a:	90 93 21 02 	sts	0x0221, r25
						PIDsetTunings(4,uartData[2],0);
     93e:	60 91 09 02 	lds	r22, 0x0209
     942:	70 e0       	ldi	r23, 0x00	; 0
     944:	80 e0       	ldi	r24, 0x00	; 0
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	71 d2       	rcall	.+1250   	; 0xe2c <__floatunsisf>
     94a:	9b 01       	movw	r18, r22
     94c:	ac 01       	movw	r20, r24
     94e:	e1 2c       	mov	r14, r1
     950:	f1 2c       	mov	r15, r1
     952:	87 01       	movw	r16, r14
     954:	60 e0       	ldi	r22, 0x00	; 0
     956:	70 e0       	ldi	r23, 0x00	; 0
     958:	80 e8       	ldi	r24, 0x80	; 128
     95a:	90 e4       	ldi	r25, 0x40	; 64
     95c:	e3 db       	rcall	.-2106   	; 0x124 <PIDsetTunings.part.0>
					}
					//Swatter Dev Function
					if(uartData[0] == 0x44){
     95e:	80 91 07 02 	lds	r24, 0x0207
     962:	84 34       	cpi	r24, 0x44	; 68
     964:	21 f4       	brne	.+8      	; 0x96e <main+0xe4>
						OCR3B = 1235;
     966:	d0 93 9b 00 	sts	0x009B, r29
     96a:	c0 93 9a 00 	sts	0x009A, r28
					}
					
					//Toggle on/off Reloader
					if(uartData[0] == 0x99){
     96e:	80 91 07 02 	lds	r24, 0x0207
     972:	89 39       	cpi	r24, 0x99	; 153
     974:	41 f4       	brne	.+16     	; 0x986 <main+0xfc>
						//toggle on/off PWM output
						TCCR3B ^= ((1<<COM3A1) | (1<<COM3A0));
     976:	80 91 91 00 	lds	r24, 0x0091
     97a:	8d 25       	eor	r24, r13
     97c:	80 93 91 00 	sts	0x0091, r24
						//toggle on/off external interrupts
						EIMSK ^= ((1<<INT5) | (1<<INT2));
     980:	8d b3       	in	r24, 0x1d	; 29
     982:	8c 25       	eor	r24, r12
     984:	8d bb       	out	0x1d, r24	; 29
					}
					
					//Motor 0 (launcher) forward control
					//HEX CODE: 00 XX XX
					if(uartData[0] == 0b00000000){
     986:	80 91 07 02 	lds	r24, 0x0207
     98a:	81 11       	cpse	r24, r1
     98c:	14 c0       	rjmp	.+40     	; 0x9b6 <main+0x12c>
						//NOTE: TOP IS 0X03FF!
						//Max distance is 0x56
						//Min distance is 0x51
						PORTB |= (1<<PB7);
     98e:	2f 9a       	sbi	0x05, 7	; 5
						Setpoint = (uartData[1]<<8) | uartData[2];
     990:	80 91 08 02 	lds	r24, 0x0208
     994:	60 91 09 02 	lds	r22, 0x0209
     998:	70 e0       	ldi	r23, 0x00	; 0
     99a:	78 2b       	or	r23, r24
     99c:	88 27       	eor	r24, r24
     99e:	77 fd       	sbrc	r23, 7
     9a0:	80 95       	com	r24
     9a2:	98 2f       	mov	r25, r24
     9a4:	45 d2       	rcall	.+1162   	; 0xe30 <__floatsisf>
     9a6:	60 93 1e 02 	sts	0x021E, r22
     9aa:	70 93 1f 02 	sts	0x021F, r23
     9ae:	80 93 20 02 	sts	0x0220, r24
     9b2:	90 93 21 02 	sts	0x0221, r25
			//			OCR1A = (uartData[1]<<8) | uartData[2];
					}	
					//Motor 0 (launcher) backward control
					//HEX CODE: 01	XX	XX	
					if(uartData[0] == 0b00000001){
     9b6:	80 91 07 02 	lds	r24, 0x0207
     9ba:	81 30       	cpi	r24, 0x01	; 1
     9bc:	a1 f4       	brne	.+40     	; 0x9e6 <main+0x15c>
						PORTB &= ~(1<<PB7);
     9be:	2f 98       	cbi	0x05, 7	; 5
						Setpoint = (uartData[1]<<8) | uartData[2]; 
     9c0:	80 91 08 02 	lds	r24, 0x0208
     9c4:	60 91 09 02 	lds	r22, 0x0209
     9c8:	70 e0       	ldi	r23, 0x00	; 0
     9ca:	78 2b       	or	r23, r24
     9cc:	88 27       	eor	r24, r24
     9ce:	77 fd       	sbrc	r23, 7
     9d0:	80 95       	com	r24
     9d2:	98 2f       	mov	r25, r24
     9d4:	2d d2       	rcall	.+1114   	; 0xe30 <__floatsisf>
     9d6:	60 93 1e 02 	sts	0x021E, r22
     9da:	70 93 1f 02 	sts	0x021F, r23
     9de:	80 93 20 02 	sts	0x0220, r24
     9e2:	90 93 21 02 	sts	0x0221, r25
			//			OCR1A = (uartData[1]<<8) | uartData[2];
					}
					//Reload Command
					//TT= 01
					//HEX CODE: 40 00 00
					if(uartData[0] == 0b01000000){
     9e6:	80 91 07 02 	lds	r24, 0x0207
     9ea:	80 34       	cpi	r24, 0x40	; 64
     9ec:	49 f4       	brne	.+18     	; 0xa00 <main+0x176>
						//Move servo backward.
						OCR3A = 1235;
     9ee:	d0 93 99 00 	sts	0x0099, r29
     9f2:	c0 93 98 00 	sts	0x0098, r28
						//start timeout
						timeoutCheck = 1;
     9f6:	81 e0       	ldi	r24, 0x01	; 1
     9f8:	80 93 0c 02 	sts	0x020C, r24
						timeoutCounter = 0;
     9fc:	10 92 0d 02 	sts	0x020D, r1
					}
					//Swat!
					//HEX CODE: 50 00 00 
					if(uartData[0] == 0b11000000){
     a00:	80 91 07 02 	lds	r24, 0x0207
						
						
					}
					//Carriage (Motor 1) forward control
					//HEX CODE: 02 XX XX
					if(uartData[0] == 0b00000010){
     a04:	80 91 07 02 	lds	r24, 0x0207
     a08:	82 30       	cpi	r24, 0x02	; 2
     a0a:	51 f4       	brne	.+20     	; 0xa20 <main+0x196>
						//counterclockwise rotation
						uartPacketReady = false;
     a0c:	10 92 05 02 	sts	0x0205, r1
						driveStepper(((uartData[1]<<8) | uartData[2]), 1);
     a10:	20 91 08 02 	lds	r18, 0x0208
     a14:	80 91 09 02 	lds	r24, 0x0209
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	61 e0       	ldi	r22, 0x01	; 1
     a1c:	92 2b       	or	r25, r18
     a1e:	97 dc       	rcall	.-1746   	; 0x34e <driveStepper>
					}
					//Carriage (Motor 1) backward control
					//HEX CODE: 03 XX XX
					if(uartData[0] == 0b00000011){	
     a20:	80 91 07 02 	lds	r24, 0x0207
     a24:	83 30       	cpi	r24, 0x03	; 3
     a26:	51 f4       	brne	.+20     	; 0xa3c <main+0x1b2>
						//clockwise rotation
						uartPacketReady = false;
     a28:	10 92 05 02 	sts	0x0205, r1
						driveStepper(((uartData[1]<<8) | uartData[2]), 0);
     a2c:	20 91 08 02 	lds	r18, 0x0208
     a30:	80 91 09 02 	lds	r24, 0x0209
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	60 e0       	ldi	r22, 0x00	; 0
     a38:	92 2b       	or	r25, r18
     a3a:	89 dc       	rcall	.-1774   	; 0x34e <driveStepper>
					}
					uartPacketReady = false;
     a3c:	10 92 05 02 	sts	0x0205, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a40:	8f e9       	ldi	r24, 0x9F	; 159
     a42:	9f e0       	ldi	r25, 0x0F	; 15
     a44:	01 97       	sbiw	r24, 0x01	; 1
     a46:	f1 f7       	brne	.-4      	; 0xa44 <main+0x1ba>
     a48:	00 c0       	rjmp	.+0      	; 0xa4a <main+0x1c0>
     a4a:	00 00       	nop
     a4c:	58 cf       	rjmp	.-336    	; 0x8fe <main+0x74>

00000a4e <__vector_23>:
				_delay_ms(1);
		}
}


ISR(TIMER0_OVF_vect){
     a4e:	1f 92       	push	r1
     a50:	0f 92       	push	r0
     a52:	0f b6       	in	r0, 0x3f	; 63
     a54:	0f 92       	push	r0
     a56:	11 24       	eor	r1, r1
     a58:	0b b6       	in	r0, 0x3b	; 59
     a5a:	0f 92       	push	r0
     a5c:	2f 93       	push	r18
     a5e:	3f 93       	push	r19
     a60:	4f 93       	push	r20
     a62:	5f 93       	push	r21
     a64:	6f 93       	push	r22
     a66:	7f 93       	push	r23
     a68:	8f 93       	push	r24
     a6a:	9f 93       	push	r25
     a6c:	af 93       	push	r26
     a6e:	bf 93       	push	r27
     a70:	ef 93       	push	r30
     a72:	ff 93       	push	r31
	//increment counter every ~50ms
	if((tick == 120) | (tick == 60)){
     a74:	80 91 35 02 	lds	r24, 0x0235
     a78:	90 91 35 02 	lds	r25, 0x0235
     a7c:	9c 33       	cpi	r25, 0x3C	; 60
     a7e:	11 f0       	breq	.+4      	; 0xa84 <__vector_23+0x36>
     a80:	88 37       	cpi	r24, 0x78	; 120
     a82:	49 f5       	brne	.+82     	; 0xad6 <__vector_23+0x88>
		//If servo is moving for more than 1.5s it is probably stalled.
		if(timeoutCounter >= 5){
     a84:	80 91 0d 02 	lds	r24, 0x020D
     a88:	85 30       	cpi	r24, 0x05	; 5
     a8a:	30 f0       	brcs	.+12     	; 0xa98 <__vector_23+0x4a>
			//Stop servo
			OCR3A = 1171;
     a8c:	83 e9       	ldi	r24, 0x93	; 147
     a8e:	94 e0       	ldi	r25, 0x04	; 4
     a90:	90 93 99 00 	sts	0x0099, r25
     a94:	80 93 98 00 	sts	0x0098, r24
		}
		if(pauseCounter >= 2){
     a98:	80 91 0b 02 	lds	r24, 0x020B
     a9c:	82 30       	cpi	r24, 0x02	; 2
     a9e:	48 f0       	brcs	.+18     	; 0xab2 <__vector_23+0x64>
			//interrupt driven wait has expired.
			//move servo forward and start timeout counter. 
			OCR3A = 1157;
     aa0:	85 e8       	ldi	r24, 0x85	; 133
     aa2:	94 e0       	ldi	r25, 0x04	; 4
     aa4:	90 93 99 00 	sts	0x0099, r25
     aa8:	80 93 98 00 	sts	0x0098, r24
			timeoutCheck = 1;
     aac:	81 e0       	ldi	r24, 0x01	; 1
     aae:	80 93 0c 02 	sts	0x020C, r24
		}
		//Check if timeout flag is set (the servo is moving)
		if(timeoutCheck == 1){
     ab2:	80 91 0c 02 	lds	r24, 0x020C
     ab6:	88 23       	and	r24, r24
     ab8:	29 f0       	breq	.+10     	; 0xac4 <__vector_23+0x76>
			timeoutCounter++; 
     aba:	80 91 0d 02 	lds	r24, 0x020D
     abe:	8f 5f       	subi	r24, 0xFF	; 255
     ac0:	80 93 0d 02 	sts	0x020D, r24
		}
		if(pauseCheck == 1) {
     ac4:	80 91 0a 02 	lds	r24, 0x020A
     ac8:	88 23       	and	r24, r24
     aca:	29 f0       	breq	.+10     	; 0xad6 <__vector_23+0x88>
			pauseCounter++;
     acc:	80 91 0b 02 	lds	r24, 0x020B
     ad0:	8f 5f       	subi	r24, 0xFF	; 255
     ad2:	80 93 0b 02 	sts	0x020B, r24
		//IF switch is thrown then PG2 is pulled low signaling our turn has started. 
//		if(PING & (1<<PING2)){
//			uartSendc(0x77); 
//		}
	}
	if(tick == 120){
     ad6:	80 91 35 02 	lds	r24, 0x0235
     ada:	88 37       	cpi	r24, 0x78	; 120
     adc:	69 f4       	brne	.+26     	; 0xaf8 <__vector_23+0xaa>
			uartSendc(rotation);
     ade:	60 91 0e 02 	lds	r22, 0x020E
     ae2:	70 91 0f 02 	lds	r23, 0x020F
     ae6:	80 91 10 02 	lds	r24, 0x0210
     aea:	90 91 11 02 	lds	r25, 0x0211
     aee:	72 d1       	rcall	.+740    	; 0xdd4 <__fixunssfsi>
     af0:	86 2f       	mov	r24, r22
     af2:	21 dc       	rcall	.-1982   	; 0x336 <uartSendc>
			tick = 0;
     af4:	10 92 35 02 	sts	0x0235, r1
	}
	tick++;
     af8:	80 91 35 02 	lds	r24, 0x0235
     afc:	8f 5f       	subi	r24, 0xFF	; 255
     afe:	80 93 35 02 	sts	0x0235, r24
	//Read number of pulses counted
	rotation = TCNT5; 
     b02:	60 91 24 01 	lds	r22, 0x0124
     b06:	70 91 25 01 	lds	r23, 0x0125
     b0a:	80 e0       	ldi	r24, 0x00	; 0
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	8e d1       	rcall	.+796    	; 0xe2c <__floatunsisf>
     b10:	60 93 0e 02 	sts	0x020E, r22
     b14:	70 93 0f 02 	sts	0x020F, r23
     b18:	80 93 10 02 	sts	0x0210, r24
     b1c:	90 93 11 02 	sts	0x0211, r25
	//reset counter. 
	TCNT5 = 0; 
     b20:	10 92 25 01 	sts	0x0125, r1
     b24:	10 92 24 01 	sts	0x0124, r1
		
	PIDinput = rotation;		
     b28:	80 91 0e 02 	lds	r24, 0x020E
     b2c:	90 91 0f 02 	lds	r25, 0x020F
     b30:	a0 91 10 02 	lds	r26, 0x0210
     b34:	b0 91 11 02 	lds	r27, 0x0211
     b38:	80 93 4e 02 	sts	0x024E, r24
     b3c:	90 93 4f 02 	sts	0x024F, r25
     b40:	a0 93 50 02 	sts	0x0250, r26
     b44:	b0 93 51 02 	sts	0x0251, r27
	PIDcompute();	
     b48:	62 dc       	rcall	.-1852   	; 0x40e <PIDcompute>
}
     b4a:	ff 91       	pop	r31
     b4c:	ef 91       	pop	r30
     b4e:	bf 91       	pop	r27
     b50:	af 91       	pop	r26
     b52:	9f 91       	pop	r25
     b54:	8f 91       	pop	r24
     b56:	7f 91       	pop	r23
     b58:	6f 91       	pop	r22
     b5a:	5f 91       	pop	r21
     b5c:	4f 91       	pop	r20
     b5e:	3f 91       	pop	r19
     b60:	2f 91       	pop	r18
     b62:	0f 90       	pop	r0
     b64:	0b be       	out	0x3b, r0	; 59
     b66:	0f 90       	pop	r0
     b68:	0f be       	out	0x3f, r0	; 63
     b6a:	0f 90       	pop	r0
     b6c:	1f 90       	pop	r1
     b6e:	18 95       	reti

00000b70 <__vector_6>:

ISR(INT5_vect){
     b70:	1f 92       	push	r1
     b72:	0f 92       	push	r0
     b74:	0f b6       	in	r0, 0x3f	; 63
     b76:	0f 92       	push	r0
     b78:	11 24       	eor	r1, r1
     b7a:	8f 93       	push	r24
     b7c:	9f 93       	push	r25
	//Forward limit switch - stop the motor from moving.
	//Switch should be attached to ground and Digital 3
	OCR3A = 1171; 
     b7e:	83 e9       	ldi	r24, 0x93	; 147
     b80:	94 e0       	ldi	r25, 0x04	; 4
     b82:	90 93 99 00 	sts	0x0099, r25
     b86:	80 93 98 00 	sts	0x0098, r24
	//Motor is now stopped. Reset timeouts
	timeoutCheck = 0;
     b8a:	10 92 0c 02 	sts	0x020C, r1
	timeoutCounter = 0; 
     b8e:	10 92 0d 02 	sts	0x020D, r1
	pauseCheck = 0;
     b92:	10 92 0a 02 	sts	0x020A, r1
	pauseCounter = 0; 
     b96:	10 92 0b 02 	sts	0x020B, r1
}
     b9a:	9f 91       	pop	r25
     b9c:	8f 91       	pop	r24
     b9e:	0f 90       	pop	r0
     ba0:	0f be       	out	0x3f, r0	; 63
     ba2:	0f 90       	pop	r0
     ba4:	1f 90       	pop	r1
     ba6:	18 95       	reti

00000ba8 <__vector_3>:
ISR(INT2_vect){
     ba8:	1f 92       	push	r1
     baa:	0f 92       	push	r0
     bac:	0f b6       	in	r0, 0x3f	; 63
     bae:	0f 92       	push	r0
     bb0:	11 24       	eor	r1, r1
     bb2:	8f 93       	push	r24
     bb4:	9f 93       	push	r25
	//Rear limit switch - reverses direction of motor.
	//Should be attached to ground and Digital 19.
	//Turn off timeoutCheck and reset timeoutCount
	timeoutCheck = 0;
     bb6:	10 92 0c 02 	sts	0x020C, r1
	timeoutCounter = 0;
     bba:	10 92 0d 02 	sts	0x020D, r1
	OCR3A = 1171;
     bbe:	83 e9       	ldi	r24, 0x93	; 147
     bc0:	94 e0       	ldi	r25, 0x04	; 4
     bc2:	90 93 99 00 	sts	0x0099, r25
     bc6:	80 93 98 00 	sts	0x0098, r24
//	_delay_ms(100);
	//Start timeoutCheck when motor changed direction
//	timeoutCheck = 1;
	pauseCheck = 1; 
     bca:	81 e0       	ldi	r24, 0x01	; 1
     bcc:	80 93 0a 02 	sts	0x020A, r24
//	OCR3A = 1157;
	
}
     bd0:	9f 91       	pop	r25
     bd2:	8f 91       	pop	r24
     bd4:	0f 90       	pop	r0
     bd6:	0f be       	out	0x3f, r0	; 63
     bd8:	0f 90       	pop	r0
     bda:	1f 90       	pop	r1
     bdc:	18 95       	reti

00000bde <__vector_25>:

ISR(USART0_RX_vect){
     bde:	1f 92       	push	r1
     be0:	0f 92       	push	r0
     be2:	0f b6       	in	r0, 0x3f	; 63
     be4:	0f 92       	push	r0
     be6:	11 24       	eor	r1, r1
     be8:	0b b6       	in	r0, 0x3b	; 59
     bea:	0f 92       	push	r0
     bec:	8f 93       	push	r24
     bee:	ef 93       	push	r30
     bf0:	ff 93       	push	r31
	uartData[i] = UDR0;
     bf2:	e0 91 06 02 	lds	r30, 0x0206
     bf6:	f0 e0       	ldi	r31, 0x00	; 0
     bf8:	80 91 c6 00 	lds	r24, 0x00C6
     bfc:	e9 5f       	subi	r30, 0xF9	; 249
     bfe:	fd 4f       	sbci	r31, 0xFD	; 253
     c00:	80 83       	st	Z, r24
	i++;
     c02:	80 91 06 02 	lds	r24, 0x0206
     c06:	8f 5f       	subi	r24, 0xFF	; 255
     c08:	80 93 06 02 	sts	0x0206, r24
	if(i >= 3){
     c0c:	80 91 06 02 	lds	r24, 0x0206
     c10:	83 30       	cpi	r24, 0x03	; 3
     c12:	28 f0       	brcs	.+10     	; 0xc1e <__vector_25+0x40>
		i=0;
     c14:	10 92 06 02 	sts	0x0206, r1
		uartPacketReady = true;
     c18:	81 e0       	ldi	r24, 0x01	; 1
     c1a:	80 93 05 02 	sts	0x0205, r24
	}
     c1e:	ff 91       	pop	r31
     c20:	ef 91       	pop	r30
     c22:	8f 91       	pop	r24
     c24:	0f 90       	pop	r0
     c26:	0b be       	out	0x3b, r0	; 59
     c28:	0f 90       	pop	r0
     c2a:	0f be       	out	0x3f, r0	; 63
     c2c:	0f 90       	pop	r0
     c2e:	1f 90       	pop	r1
     c30:	18 95       	reti

00000c32 <__subsf3>:
     c32:	50 58       	subi	r21, 0x80	; 128

00000c34 <__addsf3>:
     c34:	bb 27       	eor	r27, r27
     c36:	aa 27       	eor	r26, r26
     c38:	0e d0       	rcall	.+28     	; 0xc56 <__addsf3x>
     c3a:	70 c1       	rjmp	.+736    	; 0xf1c <__fp_round>
     c3c:	61 d1       	rcall	.+706    	; 0xf00 <__fp_pscA>
     c3e:	30 f0       	brcs	.+12     	; 0xc4c <__addsf3+0x18>
     c40:	66 d1       	rcall	.+716    	; 0xf0e <__fp_pscB>
     c42:	20 f0       	brcs	.+8      	; 0xc4c <__addsf3+0x18>
     c44:	31 f4       	brne	.+12     	; 0xc52 <__addsf3+0x1e>
     c46:	9f 3f       	cpi	r25, 0xFF	; 255
     c48:	11 f4       	brne	.+4      	; 0xc4e <__addsf3+0x1a>
     c4a:	1e f4       	brtc	.+6      	; 0xc52 <__addsf3+0x1e>
     c4c:	56 c1       	rjmp	.+684    	; 0xefa <__fp_nan>
     c4e:	0e f4       	brtc	.+2      	; 0xc52 <__addsf3+0x1e>
     c50:	e0 95       	com	r30
     c52:	e7 fb       	bst	r30, 7
     c54:	4c c1       	rjmp	.+664    	; 0xeee <__fp_inf>

00000c56 <__addsf3x>:
     c56:	e9 2f       	mov	r30, r25
     c58:	72 d1       	rcall	.+740    	; 0xf3e <__fp_split3>
     c5a:	80 f3       	brcs	.-32     	; 0xc3c <__addsf3+0x8>
     c5c:	ba 17       	cp	r27, r26
     c5e:	62 07       	cpc	r22, r18
     c60:	73 07       	cpc	r23, r19
     c62:	84 07       	cpc	r24, r20
     c64:	95 07       	cpc	r25, r21
     c66:	18 f0       	brcs	.+6      	; 0xc6e <__addsf3x+0x18>
     c68:	71 f4       	brne	.+28     	; 0xc86 <__addsf3x+0x30>
     c6a:	9e f5       	brtc	.+102    	; 0xcd2 <__addsf3x+0x7c>
     c6c:	8a c1       	rjmp	.+788    	; 0xf82 <__fp_zero>
     c6e:	0e f4       	brtc	.+2      	; 0xc72 <__addsf3x+0x1c>
     c70:	e0 95       	com	r30
     c72:	0b 2e       	mov	r0, r27
     c74:	ba 2f       	mov	r27, r26
     c76:	a0 2d       	mov	r26, r0
     c78:	0b 01       	movw	r0, r22
     c7a:	b9 01       	movw	r22, r18
     c7c:	90 01       	movw	r18, r0
     c7e:	0c 01       	movw	r0, r24
     c80:	ca 01       	movw	r24, r20
     c82:	a0 01       	movw	r20, r0
     c84:	11 24       	eor	r1, r1
     c86:	ff 27       	eor	r31, r31
     c88:	59 1b       	sub	r21, r25
     c8a:	99 f0       	breq	.+38     	; 0xcb2 <__addsf3x+0x5c>
     c8c:	59 3f       	cpi	r21, 0xF9	; 249
     c8e:	50 f4       	brcc	.+20     	; 0xca4 <__addsf3x+0x4e>
     c90:	50 3e       	cpi	r21, 0xE0	; 224
     c92:	68 f1       	brcs	.+90     	; 0xcee <__addsf3x+0x98>
     c94:	1a 16       	cp	r1, r26
     c96:	f0 40       	sbci	r31, 0x00	; 0
     c98:	a2 2f       	mov	r26, r18
     c9a:	23 2f       	mov	r18, r19
     c9c:	34 2f       	mov	r19, r20
     c9e:	44 27       	eor	r20, r20
     ca0:	58 5f       	subi	r21, 0xF8	; 248
     ca2:	f3 cf       	rjmp	.-26     	; 0xc8a <__addsf3x+0x34>
     ca4:	46 95       	lsr	r20
     ca6:	37 95       	ror	r19
     ca8:	27 95       	ror	r18
     caa:	a7 95       	ror	r26
     cac:	f0 40       	sbci	r31, 0x00	; 0
     cae:	53 95       	inc	r21
     cb0:	c9 f7       	brne	.-14     	; 0xca4 <__addsf3x+0x4e>
     cb2:	7e f4       	brtc	.+30     	; 0xcd2 <__addsf3x+0x7c>
     cb4:	1f 16       	cp	r1, r31
     cb6:	ba 0b       	sbc	r27, r26
     cb8:	62 0b       	sbc	r22, r18
     cba:	73 0b       	sbc	r23, r19
     cbc:	84 0b       	sbc	r24, r20
     cbe:	ba f0       	brmi	.+46     	; 0xcee <__addsf3x+0x98>
     cc0:	91 50       	subi	r25, 0x01	; 1
     cc2:	a1 f0       	breq	.+40     	; 0xcec <__addsf3x+0x96>
     cc4:	ff 0f       	add	r31, r31
     cc6:	bb 1f       	adc	r27, r27
     cc8:	66 1f       	adc	r22, r22
     cca:	77 1f       	adc	r23, r23
     ccc:	88 1f       	adc	r24, r24
     cce:	c2 f7       	brpl	.-16     	; 0xcc0 <__addsf3x+0x6a>
     cd0:	0e c0       	rjmp	.+28     	; 0xcee <__addsf3x+0x98>
     cd2:	ba 0f       	add	r27, r26
     cd4:	62 1f       	adc	r22, r18
     cd6:	73 1f       	adc	r23, r19
     cd8:	84 1f       	adc	r24, r20
     cda:	48 f4       	brcc	.+18     	; 0xcee <__addsf3x+0x98>
     cdc:	87 95       	ror	r24
     cde:	77 95       	ror	r23
     ce0:	67 95       	ror	r22
     ce2:	b7 95       	ror	r27
     ce4:	f7 95       	ror	r31
     ce6:	9e 3f       	cpi	r25, 0xFE	; 254
     ce8:	08 f0       	brcs	.+2      	; 0xcec <__addsf3x+0x96>
     cea:	b3 cf       	rjmp	.-154    	; 0xc52 <__addsf3+0x1e>
     cec:	93 95       	inc	r25
     cee:	88 0f       	add	r24, r24
     cf0:	08 f0       	brcs	.+2      	; 0xcf4 <__addsf3x+0x9e>
     cf2:	99 27       	eor	r25, r25
     cf4:	ee 0f       	add	r30, r30
     cf6:	97 95       	ror	r25
     cf8:	87 95       	ror	r24
     cfa:	08 95       	ret

00000cfc <__cmpsf2>:
     cfc:	d4 d0       	rcall	.+424    	; 0xea6 <__fp_cmp>
     cfe:	08 f4       	brcc	.+2      	; 0xd02 <__cmpsf2+0x6>
     d00:	81 e0       	ldi	r24, 0x01	; 1
     d02:	08 95       	ret

00000d04 <__divsf3>:
     d04:	0c d0       	rcall	.+24     	; 0xd1e <__divsf3x>
     d06:	0a c1       	rjmp	.+532    	; 0xf1c <__fp_round>
     d08:	02 d1       	rcall	.+516    	; 0xf0e <__fp_pscB>
     d0a:	40 f0       	brcs	.+16     	; 0xd1c <__divsf3+0x18>
     d0c:	f9 d0       	rcall	.+498    	; 0xf00 <__fp_pscA>
     d0e:	30 f0       	brcs	.+12     	; 0xd1c <__divsf3+0x18>
     d10:	21 f4       	brne	.+8      	; 0xd1a <__divsf3+0x16>
     d12:	5f 3f       	cpi	r21, 0xFF	; 255
     d14:	19 f0       	breq	.+6      	; 0xd1c <__divsf3+0x18>
     d16:	eb c0       	rjmp	.+470    	; 0xeee <__fp_inf>
     d18:	51 11       	cpse	r21, r1
     d1a:	34 c1       	rjmp	.+616    	; 0xf84 <__fp_szero>
     d1c:	ee c0       	rjmp	.+476    	; 0xefa <__fp_nan>

00000d1e <__divsf3x>:
     d1e:	0f d1       	rcall	.+542    	; 0xf3e <__fp_split3>
     d20:	98 f3       	brcs	.-26     	; 0xd08 <__divsf3+0x4>

00000d22 <__divsf3_pse>:
     d22:	99 23       	and	r25, r25
     d24:	c9 f3       	breq	.-14     	; 0xd18 <__divsf3+0x14>
     d26:	55 23       	and	r21, r21
     d28:	b1 f3       	breq	.-20     	; 0xd16 <__divsf3+0x12>
     d2a:	95 1b       	sub	r25, r21
     d2c:	55 0b       	sbc	r21, r21
     d2e:	bb 27       	eor	r27, r27
     d30:	aa 27       	eor	r26, r26
     d32:	62 17       	cp	r22, r18
     d34:	73 07       	cpc	r23, r19
     d36:	84 07       	cpc	r24, r20
     d38:	38 f0       	brcs	.+14     	; 0xd48 <__divsf3_pse+0x26>
     d3a:	9f 5f       	subi	r25, 0xFF	; 255
     d3c:	5f 4f       	sbci	r21, 0xFF	; 255
     d3e:	22 0f       	add	r18, r18
     d40:	33 1f       	adc	r19, r19
     d42:	44 1f       	adc	r20, r20
     d44:	aa 1f       	adc	r26, r26
     d46:	a9 f3       	breq	.-22     	; 0xd32 <__divsf3_pse+0x10>
     d48:	33 d0       	rcall	.+102    	; 0xdb0 <__divsf3_pse+0x8e>
     d4a:	0e 2e       	mov	r0, r30
     d4c:	3a f0       	brmi	.+14     	; 0xd5c <__divsf3_pse+0x3a>
     d4e:	e0 e8       	ldi	r30, 0x80	; 128
     d50:	30 d0       	rcall	.+96     	; 0xdb2 <__divsf3_pse+0x90>
     d52:	91 50       	subi	r25, 0x01	; 1
     d54:	50 40       	sbci	r21, 0x00	; 0
     d56:	e6 95       	lsr	r30
     d58:	00 1c       	adc	r0, r0
     d5a:	ca f7       	brpl	.-14     	; 0xd4e <__divsf3_pse+0x2c>
     d5c:	29 d0       	rcall	.+82     	; 0xdb0 <__divsf3_pse+0x8e>
     d5e:	fe 2f       	mov	r31, r30
     d60:	27 d0       	rcall	.+78     	; 0xdb0 <__divsf3_pse+0x8e>
     d62:	66 0f       	add	r22, r22
     d64:	77 1f       	adc	r23, r23
     d66:	88 1f       	adc	r24, r24
     d68:	bb 1f       	adc	r27, r27
     d6a:	26 17       	cp	r18, r22
     d6c:	37 07       	cpc	r19, r23
     d6e:	48 07       	cpc	r20, r24
     d70:	ab 07       	cpc	r26, r27
     d72:	b0 e8       	ldi	r27, 0x80	; 128
     d74:	09 f0       	breq	.+2      	; 0xd78 <__divsf3_pse+0x56>
     d76:	bb 0b       	sbc	r27, r27
     d78:	80 2d       	mov	r24, r0
     d7a:	bf 01       	movw	r22, r30
     d7c:	ff 27       	eor	r31, r31
     d7e:	93 58       	subi	r25, 0x83	; 131
     d80:	5f 4f       	sbci	r21, 0xFF	; 255
     d82:	2a f0       	brmi	.+10     	; 0xd8e <__divsf3_pse+0x6c>
     d84:	9e 3f       	cpi	r25, 0xFE	; 254
     d86:	51 05       	cpc	r21, r1
     d88:	68 f0       	brcs	.+26     	; 0xda4 <__divsf3_pse+0x82>
     d8a:	b1 c0       	rjmp	.+354    	; 0xeee <__fp_inf>
     d8c:	fb c0       	rjmp	.+502    	; 0xf84 <__fp_szero>
     d8e:	5f 3f       	cpi	r21, 0xFF	; 255
     d90:	ec f3       	brlt	.-6      	; 0xd8c <__divsf3_pse+0x6a>
     d92:	98 3e       	cpi	r25, 0xE8	; 232
     d94:	dc f3       	brlt	.-10     	; 0xd8c <__divsf3_pse+0x6a>
     d96:	86 95       	lsr	r24
     d98:	77 95       	ror	r23
     d9a:	67 95       	ror	r22
     d9c:	b7 95       	ror	r27
     d9e:	f7 95       	ror	r31
     da0:	9f 5f       	subi	r25, 0xFF	; 255
     da2:	c9 f7       	brne	.-14     	; 0xd96 <__divsf3_pse+0x74>
     da4:	88 0f       	add	r24, r24
     da6:	91 1d       	adc	r25, r1
     da8:	96 95       	lsr	r25
     daa:	87 95       	ror	r24
     dac:	97 f9       	bld	r25, 7
     dae:	08 95       	ret
     db0:	e1 e0       	ldi	r30, 0x01	; 1
     db2:	66 0f       	add	r22, r22
     db4:	77 1f       	adc	r23, r23
     db6:	88 1f       	adc	r24, r24
     db8:	bb 1f       	adc	r27, r27
     dba:	62 17       	cp	r22, r18
     dbc:	73 07       	cpc	r23, r19
     dbe:	84 07       	cpc	r24, r20
     dc0:	ba 07       	cpc	r27, r26
     dc2:	20 f0       	brcs	.+8      	; 0xdcc <__divsf3_pse+0xaa>
     dc4:	62 1b       	sub	r22, r18
     dc6:	73 0b       	sbc	r23, r19
     dc8:	84 0b       	sbc	r24, r20
     dca:	ba 0b       	sbc	r27, r26
     dcc:	ee 1f       	adc	r30, r30
     dce:	88 f7       	brcc	.-30     	; 0xdb2 <__divsf3_pse+0x90>
     dd0:	e0 95       	com	r30
     dd2:	08 95       	ret

00000dd4 <__fixunssfsi>:
     dd4:	bc d0       	rcall	.+376    	; 0xf4e <__fp_splitA>
     dd6:	88 f0       	brcs	.+34     	; 0xdfa <__fixunssfsi+0x26>
     dd8:	9f 57       	subi	r25, 0x7F	; 127
     dda:	90 f0       	brcs	.+36     	; 0xe00 <__fixunssfsi+0x2c>
     ddc:	b9 2f       	mov	r27, r25
     dde:	99 27       	eor	r25, r25
     de0:	b7 51       	subi	r27, 0x17	; 23
     de2:	a0 f0       	brcs	.+40     	; 0xe0c <__fixunssfsi+0x38>
     de4:	d1 f0       	breq	.+52     	; 0xe1a <__fixunssfsi+0x46>
     de6:	66 0f       	add	r22, r22
     de8:	77 1f       	adc	r23, r23
     dea:	88 1f       	adc	r24, r24
     dec:	99 1f       	adc	r25, r25
     dee:	1a f0       	brmi	.+6      	; 0xdf6 <__fixunssfsi+0x22>
     df0:	ba 95       	dec	r27
     df2:	c9 f7       	brne	.-14     	; 0xde6 <__fixunssfsi+0x12>
     df4:	12 c0       	rjmp	.+36     	; 0xe1a <__fixunssfsi+0x46>
     df6:	b1 30       	cpi	r27, 0x01	; 1
     df8:	81 f0       	breq	.+32     	; 0xe1a <__fixunssfsi+0x46>
     dfa:	c3 d0       	rcall	.+390    	; 0xf82 <__fp_zero>
     dfc:	b1 e0       	ldi	r27, 0x01	; 1
     dfe:	08 95       	ret
     e00:	c0 c0       	rjmp	.+384    	; 0xf82 <__fp_zero>
     e02:	67 2f       	mov	r22, r23
     e04:	78 2f       	mov	r23, r24
     e06:	88 27       	eor	r24, r24
     e08:	b8 5f       	subi	r27, 0xF8	; 248
     e0a:	39 f0       	breq	.+14     	; 0xe1a <__fixunssfsi+0x46>
     e0c:	b9 3f       	cpi	r27, 0xF9	; 249
     e0e:	cc f3       	brlt	.-14     	; 0xe02 <__fixunssfsi+0x2e>
     e10:	86 95       	lsr	r24
     e12:	77 95       	ror	r23
     e14:	67 95       	ror	r22
     e16:	b3 95       	inc	r27
     e18:	d9 f7       	brne	.-10     	; 0xe10 <__fixunssfsi+0x3c>
     e1a:	3e f4       	brtc	.+14     	; 0xe2a <__fixunssfsi+0x56>
     e1c:	90 95       	com	r25
     e1e:	80 95       	com	r24
     e20:	70 95       	com	r23
     e22:	61 95       	neg	r22
     e24:	7f 4f       	sbci	r23, 0xFF	; 255
     e26:	8f 4f       	sbci	r24, 0xFF	; 255
     e28:	9f 4f       	sbci	r25, 0xFF	; 255
     e2a:	08 95       	ret

00000e2c <__floatunsisf>:
     e2c:	e8 94       	clt
     e2e:	09 c0       	rjmp	.+18     	; 0xe42 <__floatsisf+0x12>

00000e30 <__floatsisf>:
     e30:	97 fb       	bst	r25, 7
     e32:	3e f4       	brtc	.+14     	; 0xe42 <__floatsisf+0x12>
     e34:	90 95       	com	r25
     e36:	80 95       	com	r24
     e38:	70 95       	com	r23
     e3a:	61 95       	neg	r22
     e3c:	7f 4f       	sbci	r23, 0xFF	; 255
     e3e:	8f 4f       	sbci	r24, 0xFF	; 255
     e40:	9f 4f       	sbci	r25, 0xFF	; 255
     e42:	99 23       	and	r25, r25
     e44:	a9 f0       	breq	.+42     	; 0xe70 <__floatsisf+0x40>
     e46:	f9 2f       	mov	r31, r25
     e48:	96 e9       	ldi	r25, 0x96	; 150
     e4a:	bb 27       	eor	r27, r27
     e4c:	93 95       	inc	r25
     e4e:	f6 95       	lsr	r31
     e50:	87 95       	ror	r24
     e52:	77 95       	ror	r23
     e54:	67 95       	ror	r22
     e56:	b7 95       	ror	r27
     e58:	f1 11       	cpse	r31, r1
     e5a:	f8 cf       	rjmp	.-16     	; 0xe4c <__floatsisf+0x1c>
     e5c:	fa f4       	brpl	.+62     	; 0xe9c <__floatsisf+0x6c>
     e5e:	bb 0f       	add	r27, r27
     e60:	11 f4       	brne	.+4      	; 0xe66 <__floatsisf+0x36>
     e62:	60 ff       	sbrs	r22, 0
     e64:	1b c0       	rjmp	.+54     	; 0xe9c <__floatsisf+0x6c>
     e66:	6f 5f       	subi	r22, 0xFF	; 255
     e68:	7f 4f       	sbci	r23, 0xFF	; 255
     e6a:	8f 4f       	sbci	r24, 0xFF	; 255
     e6c:	9f 4f       	sbci	r25, 0xFF	; 255
     e6e:	16 c0       	rjmp	.+44     	; 0xe9c <__floatsisf+0x6c>
     e70:	88 23       	and	r24, r24
     e72:	11 f0       	breq	.+4      	; 0xe78 <__floatsisf+0x48>
     e74:	96 e9       	ldi	r25, 0x96	; 150
     e76:	11 c0       	rjmp	.+34     	; 0xe9a <__floatsisf+0x6a>
     e78:	77 23       	and	r23, r23
     e7a:	21 f0       	breq	.+8      	; 0xe84 <__floatsisf+0x54>
     e7c:	9e e8       	ldi	r25, 0x8E	; 142
     e7e:	87 2f       	mov	r24, r23
     e80:	76 2f       	mov	r23, r22
     e82:	05 c0       	rjmp	.+10     	; 0xe8e <__floatsisf+0x5e>
     e84:	66 23       	and	r22, r22
     e86:	71 f0       	breq	.+28     	; 0xea4 <__floatsisf+0x74>
     e88:	96 e8       	ldi	r25, 0x86	; 134
     e8a:	86 2f       	mov	r24, r22
     e8c:	70 e0       	ldi	r23, 0x00	; 0
     e8e:	60 e0       	ldi	r22, 0x00	; 0
     e90:	2a f0       	brmi	.+10     	; 0xe9c <__floatsisf+0x6c>
     e92:	9a 95       	dec	r25
     e94:	66 0f       	add	r22, r22
     e96:	77 1f       	adc	r23, r23
     e98:	88 1f       	adc	r24, r24
     e9a:	da f7       	brpl	.-10     	; 0xe92 <__floatsisf+0x62>
     e9c:	88 0f       	add	r24, r24
     e9e:	96 95       	lsr	r25
     ea0:	87 95       	ror	r24
     ea2:	97 f9       	bld	r25, 7
     ea4:	08 95       	ret

00000ea6 <__fp_cmp>:
     ea6:	99 0f       	add	r25, r25
     ea8:	00 08       	sbc	r0, r0
     eaa:	55 0f       	add	r21, r21
     eac:	aa 0b       	sbc	r26, r26
     eae:	e0 e8       	ldi	r30, 0x80	; 128
     eb0:	fe ef       	ldi	r31, 0xFE	; 254
     eb2:	16 16       	cp	r1, r22
     eb4:	17 06       	cpc	r1, r23
     eb6:	e8 07       	cpc	r30, r24
     eb8:	f9 07       	cpc	r31, r25
     eba:	c0 f0       	brcs	.+48     	; 0xeec <__fp_cmp+0x46>
     ebc:	12 16       	cp	r1, r18
     ebe:	13 06       	cpc	r1, r19
     ec0:	e4 07       	cpc	r30, r20
     ec2:	f5 07       	cpc	r31, r21
     ec4:	98 f0       	brcs	.+38     	; 0xeec <__fp_cmp+0x46>
     ec6:	62 1b       	sub	r22, r18
     ec8:	73 0b       	sbc	r23, r19
     eca:	84 0b       	sbc	r24, r20
     ecc:	95 0b       	sbc	r25, r21
     ece:	39 f4       	brne	.+14     	; 0xede <__fp_cmp+0x38>
     ed0:	0a 26       	eor	r0, r26
     ed2:	61 f0       	breq	.+24     	; 0xeec <__fp_cmp+0x46>
     ed4:	23 2b       	or	r18, r19
     ed6:	24 2b       	or	r18, r20
     ed8:	25 2b       	or	r18, r21
     eda:	21 f4       	brne	.+8      	; 0xee4 <__fp_cmp+0x3e>
     edc:	08 95       	ret
     ede:	0a 26       	eor	r0, r26
     ee0:	09 f4       	brne	.+2      	; 0xee4 <__fp_cmp+0x3e>
     ee2:	a1 40       	sbci	r26, 0x01	; 1
     ee4:	a6 95       	lsr	r26
     ee6:	8f ef       	ldi	r24, 0xFF	; 255
     ee8:	81 1d       	adc	r24, r1
     eea:	81 1d       	adc	r24, r1
     eec:	08 95       	ret

00000eee <__fp_inf>:
     eee:	97 f9       	bld	r25, 7
     ef0:	9f 67       	ori	r25, 0x7F	; 127
     ef2:	80 e8       	ldi	r24, 0x80	; 128
     ef4:	70 e0       	ldi	r23, 0x00	; 0
     ef6:	60 e0       	ldi	r22, 0x00	; 0
     ef8:	08 95       	ret

00000efa <__fp_nan>:
     efa:	9f ef       	ldi	r25, 0xFF	; 255
     efc:	80 ec       	ldi	r24, 0xC0	; 192
     efe:	08 95       	ret

00000f00 <__fp_pscA>:
     f00:	00 24       	eor	r0, r0
     f02:	0a 94       	dec	r0
     f04:	16 16       	cp	r1, r22
     f06:	17 06       	cpc	r1, r23
     f08:	18 06       	cpc	r1, r24
     f0a:	09 06       	cpc	r0, r25
     f0c:	08 95       	ret

00000f0e <__fp_pscB>:
     f0e:	00 24       	eor	r0, r0
     f10:	0a 94       	dec	r0
     f12:	12 16       	cp	r1, r18
     f14:	13 06       	cpc	r1, r19
     f16:	14 06       	cpc	r1, r20
     f18:	05 06       	cpc	r0, r21
     f1a:	08 95       	ret

00000f1c <__fp_round>:
     f1c:	09 2e       	mov	r0, r25
     f1e:	03 94       	inc	r0
     f20:	00 0c       	add	r0, r0
     f22:	11 f4       	brne	.+4      	; 0xf28 <__fp_round+0xc>
     f24:	88 23       	and	r24, r24
     f26:	52 f0       	brmi	.+20     	; 0xf3c <__fp_round+0x20>
     f28:	bb 0f       	add	r27, r27
     f2a:	40 f4       	brcc	.+16     	; 0xf3c <__fp_round+0x20>
     f2c:	bf 2b       	or	r27, r31
     f2e:	11 f4       	brne	.+4      	; 0xf34 <__fp_round+0x18>
     f30:	60 ff       	sbrs	r22, 0
     f32:	04 c0       	rjmp	.+8      	; 0xf3c <__fp_round+0x20>
     f34:	6f 5f       	subi	r22, 0xFF	; 255
     f36:	7f 4f       	sbci	r23, 0xFF	; 255
     f38:	8f 4f       	sbci	r24, 0xFF	; 255
     f3a:	9f 4f       	sbci	r25, 0xFF	; 255
     f3c:	08 95       	ret

00000f3e <__fp_split3>:
     f3e:	57 fd       	sbrc	r21, 7
     f40:	90 58       	subi	r25, 0x80	; 128
     f42:	44 0f       	add	r20, r20
     f44:	55 1f       	adc	r21, r21
     f46:	59 f0       	breq	.+22     	; 0xf5e <__fp_splitA+0x10>
     f48:	5f 3f       	cpi	r21, 0xFF	; 255
     f4a:	71 f0       	breq	.+28     	; 0xf68 <__fp_splitA+0x1a>
     f4c:	47 95       	ror	r20

00000f4e <__fp_splitA>:
     f4e:	88 0f       	add	r24, r24
     f50:	97 fb       	bst	r25, 7
     f52:	99 1f       	adc	r25, r25
     f54:	61 f0       	breq	.+24     	; 0xf6e <__fp_splitA+0x20>
     f56:	9f 3f       	cpi	r25, 0xFF	; 255
     f58:	79 f0       	breq	.+30     	; 0xf78 <__fp_splitA+0x2a>
     f5a:	87 95       	ror	r24
     f5c:	08 95       	ret
     f5e:	12 16       	cp	r1, r18
     f60:	13 06       	cpc	r1, r19
     f62:	14 06       	cpc	r1, r20
     f64:	55 1f       	adc	r21, r21
     f66:	f2 cf       	rjmp	.-28     	; 0xf4c <__fp_split3+0xe>
     f68:	46 95       	lsr	r20
     f6a:	f1 df       	rcall	.-30     	; 0xf4e <__fp_splitA>
     f6c:	08 c0       	rjmp	.+16     	; 0xf7e <__fp_splitA+0x30>
     f6e:	16 16       	cp	r1, r22
     f70:	17 06       	cpc	r1, r23
     f72:	18 06       	cpc	r1, r24
     f74:	99 1f       	adc	r25, r25
     f76:	f1 cf       	rjmp	.-30     	; 0xf5a <__fp_splitA+0xc>
     f78:	86 95       	lsr	r24
     f7a:	71 05       	cpc	r23, r1
     f7c:	61 05       	cpc	r22, r1
     f7e:	08 94       	sec
     f80:	08 95       	ret

00000f82 <__fp_zero>:
     f82:	e8 94       	clt

00000f84 <__fp_szero>:
     f84:	bb 27       	eor	r27, r27
     f86:	66 27       	eor	r22, r22
     f88:	77 27       	eor	r23, r23
     f8a:	cb 01       	movw	r24, r22
     f8c:	97 f9       	bld	r25, 7
     f8e:	08 95       	ret

00000f90 <__gesf2>:
     f90:	8a df       	rcall	.-236    	; 0xea6 <__fp_cmp>
     f92:	08 f4       	brcc	.+2      	; 0xf96 <__gesf2+0x6>
     f94:	8f ef       	ldi	r24, 0xFF	; 255
     f96:	08 95       	ret

00000f98 <__mulsf3>:
     f98:	0b d0       	rcall	.+22     	; 0xfb0 <__mulsf3x>
     f9a:	c0 cf       	rjmp	.-128    	; 0xf1c <__fp_round>
     f9c:	b1 df       	rcall	.-158    	; 0xf00 <__fp_pscA>
     f9e:	28 f0       	brcs	.+10     	; 0xfaa <__mulsf3+0x12>
     fa0:	b6 df       	rcall	.-148    	; 0xf0e <__fp_pscB>
     fa2:	18 f0       	brcs	.+6      	; 0xfaa <__mulsf3+0x12>
     fa4:	95 23       	and	r25, r21
     fa6:	09 f0       	breq	.+2      	; 0xfaa <__mulsf3+0x12>
     fa8:	a2 cf       	rjmp	.-188    	; 0xeee <__fp_inf>
     faa:	a7 cf       	rjmp	.-178    	; 0xefa <__fp_nan>
     fac:	11 24       	eor	r1, r1
     fae:	ea cf       	rjmp	.-44     	; 0xf84 <__fp_szero>

00000fb0 <__mulsf3x>:
     fb0:	c6 df       	rcall	.-116    	; 0xf3e <__fp_split3>
     fb2:	a0 f3       	brcs	.-24     	; 0xf9c <__mulsf3+0x4>

00000fb4 <__mulsf3_pse>:
     fb4:	95 9f       	mul	r25, r21
     fb6:	d1 f3       	breq	.-12     	; 0xfac <__mulsf3+0x14>
     fb8:	95 0f       	add	r25, r21
     fba:	50 e0       	ldi	r21, 0x00	; 0
     fbc:	55 1f       	adc	r21, r21
     fbe:	62 9f       	mul	r22, r18
     fc0:	f0 01       	movw	r30, r0
     fc2:	72 9f       	mul	r23, r18
     fc4:	bb 27       	eor	r27, r27
     fc6:	f0 0d       	add	r31, r0
     fc8:	b1 1d       	adc	r27, r1
     fca:	63 9f       	mul	r22, r19
     fcc:	aa 27       	eor	r26, r26
     fce:	f0 0d       	add	r31, r0
     fd0:	b1 1d       	adc	r27, r1
     fd2:	aa 1f       	adc	r26, r26
     fd4:	64 9f       	mul	r22, r20
     fd6:	66 27       	eor	r22, r22
     fd8:	b0 0d       	add	r27, r0
     fda:	a1 1d       	adc	r26, r1
     fdc:	66 1f       	adc	r22, r22
     fde:	82 9f       	mul	r24, r18
     fe0:	22 27       	eor	r18, r18
     fe2:	b0 0d       	add	r27, r0
     fe4:	a1 1d       	adc	r26, r1
     fe6:	62 1f       	adc	r22, r18
     fe8:	73 9f       	mul	r23, r19
     fea:	b0 0d       	add	r27, r0
     fec:	a1 1d       	adc	r26, r1
     fee:	62 1f       	adc	r22, r18
     ff0:	83 9f       	mul	r24, r19
     ff2:	a0 0d       	add	r26, r0
     ff4:	61 1d       	adc	r22, r1
     ff6:	22 1f       	adc	r18, r18
     ff8:	74 9f       	mul	r23, r20
     ffa:	33 27       	eor	r19, r19
     ffc:	a0 0d       	add	r26, r0
     ffe:	61 1d       	adc	r22, r1
    1000:	23 1f       	adc	r18, r19
    1002:	84 9f       	mul	r24, r20
    1004:	60 0d       	add	r22, r0
    1006:	21 1d       	adc	r18, r1
    1008:	82 2f       	mov	r24, r18
    100a:	76 2f       	mov	r23, r22
    100c:	6a 2f       	mov	r22, r26
    100e:	11 24       	eor	r1, r1
    1010:	9f 57       	subi	r25, 0x7F	; 127
    1012:	50 40       	sbci	r21, 0x00	; 0
    1014:	8a f0       	brmi	.+34     	; 0x1038 <__mulsf3_pse+0x84>
    1016:	e1 f0       	breq	.+56     	; 0x1050 <__mulsf3_pse+0x9c>
    1018:	88 23       	and	r24, r24
    101a:	4a f0       	brmi	.+18     	; 0x102e <__mulsf3_pse+0x7a>
    101c:	ee 0f       	add	r30, r30
    101e:	ff 1f       	adc	r31, r31
    1020:	bb 1f       	adc	r27, r27
    1022:	66 1f       	adc	r22, r22
    1024:	77 1f       	adc	r23, r23
    1026:	88 1f       	adc	r24, r24
    1028:	91 50       	subi	r25, 0x01	; 1
    102a:	50 40       	sbci	r21, 0x00	; 0
    102c:	a9 f7       	brne	.-22     	; 0x1018 <__mulsf3_pse+0x64>
    102e:	9e 3f       	cpi	r25, 0xFE	; 254
    1030:	51 05       	cpc	r21, r1
    1032:	70 f0       	brcs	.+28     	; 0x1050 <__mulsf3_pse+0x9c>
    1034:	5c cf       	rjmp	.-328    	; 0xeee <__fp_inf>
    1036:	a6 cf       	rjmp	.-180    	; 0xf84 <__fp_szero>
    1038:	5f 3f       	cpi	r21, 0xFF	; 255
    103a:	ec f3       	brlt	.-6      	; 0x1036 <__mulsf3_pse+0x82>
    103c:	98 3e       	cpi	r25, 0xE8	; 232
    103e:	dc f3       	brlt	.-10     	; 0x1036 <__mulsf3_pse+0x82>
    1040:	86 95       	lsr	r24
    1042:	77 95       	ror	r23
    1044:	67 95       	ror	r22
    1046:	b7 95       	ror	r27
    1048:	f7 95       	ror	r31
    104a:	e7 95       	ror	r30
    104c:	9f 5f       	subi	r25, 0xFF	; 255
    104e:	c1 f7       	brne	.-16     	; 0x1040 <__mulsf3_pse+0x8c>
    1050:	fe 2b       	or	r31, r30
    1052:	88 0f       	add	r24, r24
    1054:	91 1d       	adc	r25, r1
    1056:	96 95       	lsr	r25
    1058:	87 95       	ror	r24
    105a:	97 f9       	bld	r25, 7
    105c:	08 95       	ret

0000105e <_exit>:
    105e:	f8 94       	cli

00001060 <__stop_program>:
    1060:	ff cf       	rjmp	.-2      	; 0x1060 <__stop_program>
